package demo.pathplanning.tests;

import junit.framework.*;

public class AllTest0 extends TestCase {


  public void test1() throws Throwable {

    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      demo.pathplanning.model.Direction var1 = demo.pathplanning.model.Direction.valueOf("hi!");
      fail("Expected exception of type java.lang.IllegalArgumentException");
    } catch (java.lang.IllegalArgumentException e) {
      // Expected exception.
    }

  }

  public void test2() throws Throwable {

    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      demo.pathplanning.model.Direction var1 = demo.pathplanning.model.Direction.valueOf("");
      fail("Expected exception of type java.lang.IllegalArgumentException");
    } catch (java.lang.IllegalArgumentException e) {
      // Expected exception.
    }

  }

  public void test3() throws Throwable {

    demo.pathplanning.model.Direction[] var0 = demo.pathplanning.model.Direction.values();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var0);

  }

  public void test4() throws Throwable {

    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      demo.pathplanning.model.CartesianGraph var2 = new demo.pathplanning.model.CartesianGraph((-1), (-1));
      fail("Expected exception of type java.lang.NegativeArraySizeException");
    } catch (java.lang.NegativeArraySizeException e) {
      // Expected exception.
    }

  }

  public void test5() throws Throwable {

    demo.pathplanning.model.CartesianGraph var3 = new demo.pathplanning.model.CartesianGraph(1, 1);
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      demo.pathplanning.model.CartesianGraph var4 = new demo.pathplanning.model.CartesianGraph((-1), 1);
      fail("Expected exception of type java.lang.NegativeArraySizeException");
    } catch (java.lang.NegativeArraySizeException e) {
      // Expected exception.
    }

  }

  public void test6() throws Throwable {

    demo.pathplanning.model.CartesianGraph var2 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.algorithms.AStar var3 = new demo.pathplanning.algorithms.AStar(var2);
    java.lang.String var4 = var2.toString();
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      demo.pathplanning.model.Direction var5 = demo.pathplanning.model.Direction.valueOf(var4);
      fail("Expected exception of type java.lang.IllegalArgumentException");
    } catch (java.lang.IllegalArgumentException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var4 + "' != '" + "0,\n"+ "'", var4.equals("0,\n"));

  }

  public void test7() throws Throwable {

    demo.pathplanning.model.CartesianGraph var2 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var3 = var2.getXSize();
    demo.pathplanning.algorithms.AStar var4 = new demo.pathplanning.algorithms.AStar(var2);
    demo.pathplanning.model.CartesianGraph var7 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var8 = var7.getXSize();
    demo.pathplanning.algorithms.AStar var9 = new demo.pathplanning.algorithms.AStar(var7);
    demo.pathplanning.model.CartesianGraph var12 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var15 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var16 = new demo.pathplanning.model.Location(1, 1);
    boolean var18 = var16.equals((java.lang.Object)0L);
    demo.pathplanning.model.Node var19 = var7.getNode(var16);
    demo.pathplanning.model.CartesianGraph var22 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var25 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var26 = new demo.pathplanning.model.Location(1, 1);
    java.util.List var27 = var4.getPath(var16, var26);

  }

  public void test8() throws Throwable {

    demo.pathplanning.model.CartesianGraph var2 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.algorithms.AStar var3 = new demo.pathplanning.algorithms.AStar(var2);
    demo.pathplanning.model.CartesianGraph var4 = var3.getGraph();
    demo.pathplanning.algorithms.PathPlanningContext var5 = new demo.pathplanning.algorithms.PathPlanningContext((demo.pathplanning.algorithms.PathPlanner)var3);
    demo.pathplanning.model.CartesianGraph var8 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var9 = var8.getXSize();
    demo.pathplanning.algorithms.AStar var10 = new demo.pathplanning.algorithms.AStar(var8);
    demo.pathplanning.model.CartesianGraph var13 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var16 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var17 = new demo.pathplanning.model.Location(1, 1);
    boolean var19 = var17.equals((java.lang.Object)0L);
    demo.pathplanning.model.Node var20 = var8.getNode(var17);
    demo.pathplanning.model.CartesianGraph var23 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var24 = var23.getXSize();
    demo.pathplanning.algorithms.AStar var25 = new demo.pathplanning.algorithms.AStar(var23);
    demo.pathplanning.model.CartesianGraph var28 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var31 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var32 = new demo.pathplanning.model.Location(1, 1);
    boolean var34 = var32.equals((java.lang.Object)0L);
    demo.pathplanning.model.Node var35 = var23.getNode(var32);
    int var36 = var32.getY();
    java.util.List var37 = var5.getPath(var17, var32);

  }

  public void test9() throws Throwable {

    demo.pathplanning.model.CartesianGraph var2 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.algorithms.AStar var3 = new demo.pathplanning.algorithms.AStar(var2);
    demo.pathplanning.model.CartesianGraph var4 = var3.getGraph();
    demo.pathplanning.algorithms.PathPlanningContext var5 = new demo.pathplanning.algorithms.PathPlanningContext((demo.pathplanning.algorithms.PathPlanner)var3);
    demo.pathplanning.model.CartesianGraph var8 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.algorithms.AStar var9 = new demo.pathplanning.algorithms.AStar(var8);
    java.lang.String var10 = var8.toString();
    demo.pathplanning.model.CartesianGraph var13 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var16 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var17 = new demo.pathplanning.model.Location(1, 1);
    boolean var19 = var17.equals((java.lang.Object)0L);
    demo.pathplanning.model.Node var20 = var8.getNode(var17);
    demo.pathplanning.model.CartesianGraph var23 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.algorithms.AStar var24 = new demo.pathplanning.algorithms.AStar(var23);
    java.lang.String var25 = var23.toString();
    demo.pathplanning.model.CartesianGraph var28 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var31 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var32 = new demo.pathplanning.model.Location(1, 1);
    boolean var34 = var32.equals((java.lang.Object)0L);
    demo.pathplanning.model.Node var35 = var23.getNode(var32);
    java.util.List var36 = var5.getPath(var17, var32);

  }

  public void test10() throws Throwable {

    demo.pathplanning.model.CartesianGraph var2 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.algorithms.AStar var3 = new demo.pathplanning.algorithms.AStar(var2);
    demo.pathplanning.model.CartesianGraph var4 = var3.getGraph();
    demo.pathplanning.model.CartesianGraph var5 = var3.getGraph();
    demo.pathplanning.algorithms.PathPlanningContext var6 = new demo.pathplanning.algorithms.PathPlanningContext((demo.pathplanning.algorithms.PathPlanner)var3);
    demo.pathplanning.model.CartesianGraph var9 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var10 = var9.getXSize();
    demo.pathplanning.algorithms.AStar var11 = new demo.pathplanning.algorithms.AStar(var9);
    demo.pathplanning.model.CartesianGraph var14 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var17 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var18 = new demo.pathplanning.model.Location(1, 1);
    boolean var20 = var18.equals((java.lang.Object)0L);
    demo.pathplanning.model.Node var21 = var9.getNode(var18);
    demo.pathplanning.model.CartesianGraph var24 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.algorithms.AStar var25 = new demo.pathplanning.algorithms.AStar(var24);
    java.lang.String var26 = var24.toString();
    demo.pathplanning.model.CartesianGraph var29 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var32 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var33 = new demo.pathplanning.model.Location(1, 1);
    boolean var35 = var33.equals((java.lang.Object)0L);
    demo.pathplanning.model.Node var36 = var24.getNode(var33);
    java.util.List var37 = var6.getPath(var18, var33);

  }

  public void test11() throws Throwable {

    demo.pathplanning.model.CartesianGraph var2 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.algorithms.AStar var3 = new demo.pathplanning.algorithms.AStar(var2);
    demo.pathplanning.model.CartesianGraph var4 = var3.getGraph();
    demo.pathplanning.algorithms.PathPlanningContext var5 = new demo.pathplanning.algorithms.PathPlanningContext((demo.pathplanning.algorithms.PathPlanner)var3);
    demo.pathplanning.model.CartesianGraph var8 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var11 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var12 = new demo.pathplanning.model.Location(1, 1);
    int var13 = var12.getX();
    demo.pathplanning.model.CartesianGraph var16 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var17 = var16.getXSize();
    int var18 = var16.getYSize();
    int var19 = var16.getYSize();
    demo.pathplanning.model.CartesianGraph var22 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var23 = new demo.pathplanning.model.Location(var19, 1);
    java.util.List var24 = var5.getPath(var12, var23);

  }

  public void test12() throws Throwable {

    demo.pathplanning.model.CartesianGraph var2 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.algorithms.AStar var3 = new demo.pathplanning.algorithms.AStar(var2);
    demo.pathplanning.model.CartesianGraph var4 = var3.getGraph();
    demo.pathplanning.model.CartesianGraph var5 = var3.getGraph();
    demo.pathplanning.algorithms.PathPlanningContext var6 = new demo.pathplanning.algorithms.PathPlanningContext((demo.pathplanning.algorithms.PathPlanner)var3);
    demo.pathplanning.model.CartesianGraph var9 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var12 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var13 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var16 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var17 = var16.getXSize();
    demo.pathplanning.model.CartesianGraph var20 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var21 = new demo.pathplanning.model.CartesianGraph(var17, 1);
    demo.pathplanning.model.Location var22 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var25 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.algorithms.AStar var26 = new demo.pathplanning.algorithms.AStar(var25);
    java.lang.String var27 = var25.toString();
    demo.pathplanning.model.CartesianGraph var30 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var33 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var34 = new demo.pathplanning.model.Location(1, 1);
    boolean var36 = var34.equals((java.lang.Object)0L);
    demo.pathplanning.model.Node var37 = var25.getNode(var34);
    java.lang.String var38 = var34.toString();
    java.util.List var39 = var6.getPath(var22, var34);

  }

  public void test13() throws Throwable {

    demo.pathplanning.model.CartesianGraph var2 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.algorithms.AStar var3 = new demo.pathplanning.algorithms.AStar(var2);
    demo.pathplanning.model.CartesianGraph var4 = var3.getGraph();
    demo.pathplanning.algorithms.PathPlanningContext var5 = new demo.pathplanning.algorithms.PathPlanningContext((demo.pathplanning.algorithms.PathPlanner)var3);
    demo.pathplanning.model.CartesianGraph var8 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var9 = var8.getXSize();
    int var10 = var8.getYSize();
    int var11 = var8.getYSize();
    demo.pathplanning.model.CartesianGraph var14 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var15 = new demo.pathplanning.model.Location(var11, 1);
    demo.pathplanning.model.CartesianGraph var18 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var19 = var18.getXSize();
    demo.pathplanning.algorithms.AStar var20 = new demo.pathplanning.algorithms.AStar(var18);
    demo.pathplanning.model.CartesianGraph var23 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var26 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var27 = new demo.pathplanning.model.Location(1, 1);
    boolean var29 = var27.equals((java.lang.Object)0L);
    demo.pathplanning.model.Node var30 = var18.getNode(var27);
    java.util.List var31 = var5.getPath(var15, var27);

  }

  public void test14() throws Throwable {

    demo.pathplanning.model.CartesianGraph var2 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var3 = var2.getXSize();
    demo.pathplanning.model.CartesianGraph var6 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var7 = new demo.pathplanning.model.CartesianGraph(var3, 1);
    java.lang.String var8 = var7.toString();
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      demo.pathplanning.model.Direction var9 = demo.pathplanning.model.Direction.valueOf(var8);
      fail("Expected exception of type java.lang.IllegalArgumentException");
    } catch (java.lang.IllegalArgumentException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var3 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var8 + "' != '" + "0,\n"+ "'", var8.equals("0,\n"));

  }

  public void test15() throws Throwable {

    demo.pathplanning.model.CartesianGraph var2 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var3 = var2.getXSize();
    demo.pathplanning.algorithms.AStar var4 = new demo.pathplanning.algorithms.AStar(var2);
    demo.pathplanning.model.CartesianGraph var7 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var10 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var11 = new demo.pathplanning.model.Location(1, 1);
    boolean var13 = var11.equals((java.lang.Object)0L);
    demo.pathplanning.model.Node var14 = var2.getNode(var11);
    demo.pathplanning.algorithms.AStar var15 = new demo.pathplanning.algorithms.AStar(var2);
    demo.pathplanning.model.CartesianGraph var18 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var19 = var18.getXSize();
    int var20 = var18.getYSize();
    int var21 = var18.getYSize();
    demo.pathplanning.model.CartesianGraph var24 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var25 = var24.getXSize();
    int var26 = var24.getYSize();
    int var27 = var24.getYSize();
    demo.pathplanning.model.CartesianGraph var28 = new demo.pathplanning.model.CartesianGraph(var21, var27);
    demo.pathplanning.model.CartesianGraph var31 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var34 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var35 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var36 = new demo.pathplanning.model.CartesianGraph(var21, 1);
    java.lang.String var37 = var36.toString();
    demo.pathplanning.model.CartesianGraph var40 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var43 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var44 = new demo.pathplanning.model.Location(1, 1);
    boolean var46 = var44.equals((java.lang.Object)0L);
    demo.pathplanning.model.Node var47 = var36.getNode(var44);
    demo.pathplanning.model.CartesianGraph var50 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var51 = var50.getXSize();
    demo.pathplanning.algorithms.AStar var52 = new demo.pathplanning.algorithms.AStar(var50);
    demo.pathplanning.model.CartesianGraph var55 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var58 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var59 = new demo.pathplanning.model.Location(1, 1);
    boolean var61 = var59.equals((java.lang.Object)0L);
    demo.pathplanning.model.Node var62 = var50.getNode(var59);
    int var63 = var59.getY();
    java.util.List var64 = var15.getPath(var44, var59);

  }

  public void test16() throws Throwable {

    demo.pathplanning.model.CartesianGraph var2 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.algorithms.AStar var3 = new demo.pathplanning.algorithms.AStar(var2);
    demo.pathplanning.model.CartesianGraph var4 = var3.getGraph();
    demo.pathplanning.model.CartesianGraph var5 = var3.getGraph();
    demo.pathplanning.algorithms.PathPlanningContext var6 = new demo.pathplanning.algorithms.PathPlanningContext((demo.pathplanning.algorithms.PathPlanner)var3);
    demo.pathplanning.model.CartesianGraph var9 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var12 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var13 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var16 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var17 = var16.getXSize();
    demo.pathplanning.model.CartesianGraph var20 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var21 = new demo.pathplanning.model.CartesianGraph(var17, 1);
    demo.pathplanning.model.Location var22 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var25 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var28 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var29 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var32 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var33 = var32.getXSize();
    int var34 = var32.getYSize();
    int var35 = var32.getYSize();
    demo.pathplanning.model.CartesianGraph var38 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var39 = var38.getXSize();
    int var40 = var38.getYSize();
    int var41 = var38.getYSize();
    demo.pathplanning.model.CartesianGraph var42 = new demo.pathplanning.model.CartesianGraph(var35, var41);
    demo.pathplanning.model.CartesianGraph var43 = new demo.pathplanning.model.CartesianGraph(1, var35);
    demo.pathplanning.model.CartesianGraph var46 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var49 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var50 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var53 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var54 = var53.getXSize();
    int var55 = var53.getYSize();
    int var56 = var53.getYSize();
    demo.pathplanning.model.CartesianGraph var59 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var60 = var59.getXSize();
    int var61 = var59.getYSize();
    int var62 = var59.getYSize();
    demo.pathplanning.model.CartesianGraph var63 = new demo.pathplanning.model.CartesianGraph(var56, var62);
    demo.pathplanning.model.CartesianGraph var64 = new demo.pathplanning.model.CartesianGraph(1, var56);
    demo.pathplanning.model.Location var65 = new demo.pathplanning.model.Location(1, 1);
    java.util.List var66 = var3.getPath(var22, var65);

  }

  public void test17() throws Throwable {

    demo.pathplanning.model.CartesianGraph var2 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.algorithms.AStar var3 = new demo.pathplanning.algorithms.AStar(var2);
    demo.pathplanning.model.CartesianGraph var4 = var3.getGraph();
    demo.pathplanning.model.CartesianGraph var5 = var3.getGraph();
    demo.pathplanning.algorithms.PathPlanningContext var6 = new demo.pathplanning.algorithms.PathPlanningContext((demo.pathplanning.algorithms.PathPlanner)var3);
    demo.pathplanning.model.CartesianGraph var7 = var3.getGraph();
    int var8 = var7.getYSize();
    java.lang.String var9 = var7.toString();
    java.lang.String var10 = var7.toString();
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      demo.pathplanning.model.Direction var11 = demo.pathplanning.model.Direction.valueOf(var10);
      fail("Expected exception of type java.lang.IllegalArgumentException");
    } catch (java.lang.IllegalArgumentException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var8 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var9 + "' != '" + "0,\n"+ "'", var9.equals("0,\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var10 + "' != '" + "0,\n"+ "'", var10.equals("0,\n"));

  }

  public void test18() throws Throwable {

    demo.pathplanning.model.CartesianGraph var2 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.algorithms.AStar var3 = new demo.pathplanning.algorithms.AStar(var2);
    demo.pathplanning.model.CartesianGraph var4 = var3.getGraph();
    demo.pathplanning.algorithms.PathPlanningContext var5 = new demo.pathplanning.algorithms.PathPlanningContext((demo.pathplanning.algorithms.PathPlanner)var3);
    demo.pathplanning.model.CartesianGraph var8 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var9 = var8.getXSize();
    demo.pathplanning.algorithms.AStar var10 = new demo.pathplanning.algorithms.AStar(var8);
    demo.pathplanning.model.CartesianGraph var13 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var16 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var17 = new demo.pathplanning.model.Location(1, 1);
    boolean var19 = var17.equals((java.lang.Object)0L);
    demo.pathplanning.model.Node var20 = var8.getNode(var17);
    int var21 = var17.getY();
    demo.pathplanning.model.CartesianGraph var24 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var27 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var28 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var31 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var32 = var31.getXSize();
    int var33 = var31.getYSize();
    int var34 = var31.getYSize();
    demo.pathplanning.model.CartesianGraph var37 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var38 = var37.getXSize();
    int var39 = var37.getYSize();
    int var40 = var37.getYSize();
    demo.pathplanning.model.CartesianGraph var41 = new demo.pathplanning.model.CartesianGraph(var34, var40);
    demo.pathplanning.model.CartesianGraph var42 = new demo.pathplanning.model.CartesianGraph(1, var34);
    demo.pathplanning.model.CartesianGraph var45 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var48 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var49 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var52 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var53 = var52.getXSize();
    int var54 = var52.getYSize();
    int var55 = var52.getYSize();
    demo.pathplanning.model.CartesianGraph var58 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var59 = var58.getXSize();
    int var60 = var58.getYSize();
    int var61 = var58.getYSize();
    demo.pathplanning.model.CartesianGraph var62 = new demo.pathplanning.model.CartesianGraph(var55, var61);
    demo.pathplanning.model.CartesianGraph var63 = new demo.pathplanning.model.CartesianGraph(1, var55);
    demo.pathplanning.model.Location var64 = new demo.pathplanning.model.Location(1, 1);
    java.util.List var65 = var5.getPath(var17, var64);

  }

  public void test19() throws Throwable {

    demo.pathplanning.model.CartesianGraph var2 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var3 = var2.getXSize();
    int var4 = var2.getYSize();
    int var5 = var2.getYSize();
    demo.pathplanning.model.CartesianGraph var8 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var9 = var8.getXSize();
    int var10 = var8.getYSize();
    int var11 = var8.getYSize();
    demo.pathplanning.model.CartesianGraph var12 = new demo.pathplanning.model.CartesianGraph(var5, var11);
    demo.pathplanning.algorithms.AStar var13 = new demo.pathplanning.algorithms.AStar(var12);
    demo.pathplanning.model.CartesianGraph var16 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var17 = var16.getXSize();
    int var18 = var16.getYSize();
    int var19 = var16.getYSize();
    demo.pathplanning.model.CartesianGraph var22 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var23 = var22.getXSize();
    int var24 = var22.getYSize();
    int var25 = var22.getYSize();
    demo.pathplanning.model.CartesianGraph var26 = new demo.pathplanning.model.CartesianGraph(var19, var25);
    demo.pathplanning.model.CartesianGraph var29 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var32 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var33 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var34 = new demo.pathplanning.model.CartesianGraph(var19, 1);
    java.lang.String var35 = var34.toString();
    demo.pathplanning.model.CartesianGraph var38 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var41 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var42 = new demo.pathplanning.model.Location(1, 1);
    boolean var44 = var42.equals((java.lang.Object)0L);
    demo.pathplanning.model.Node var45 = var34.getNode(var42);
    int var46 = var42.getY();
    demo.pathplanning.model.CartesianGraph var49 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var50 = var49.getXSize();
    demo.pathplanning.algorithms.AStar var51 = new demo.pathplanning.algorithms.AStar(var49);
    demo.pathplanning.model.CartesianGraph var54 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var57 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var58 = new demo.pathplanning.model.Location(1, 1);
    boolean var60 = var58.equals((java.lang.Object)0L);
    demo.pathplanning.model.Node var61 = var49.getNode(var58);
    int var62 = var49.getYSize();
    demo.pathplanning.model.CartesianGraph var65 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var66 = var65.getXSize();
    int var67 = var65.getYSize();
    int var68 = var65.getYSize();
    demo.pathplanning.model.CartesianGraph var71 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var72 = var71.getXSize();
    int var73 = var71.getYSize();
    int var74 = var71.getYSize();
    demo.pathplanning.model.CartesianGraph var75 = new demo.pathplanning.model.CartesianGraph(var68, var74);
    demo.pathplanning.model.CartesianGraph var78 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var81 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var82 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var83 = new demo.pathplanning.model.CartesianGraph(var68, 1);
    int var84 = var83.getXSize();
    demo.pathplanning.model.CartesianGraph var87 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var88 = var87.getXSize();
    int var89 = var87.getYSize();
    int var90 = var87.getYSize();
    demo.pathplanning.model.CartesianGraph var91 = new demo.pathplanning.model.CartesianGraph(var84, var90);
    demo.pathplanning.model.CartesianGraph var92 = new demo.pathplanning.model.CartesianGraph(var62, var84);
    demo.pathplanning.model.Node var93 = new demo.pathplanning.model.Node(var12, var42, var84);
    int var94 = var12.getXSize();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var3 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var4 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var5 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var9 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var11 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var17 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var18 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var19 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var23 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var24 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var25 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var35 + "' != '" + "0,\n"+ "'", var35.equals("0,\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var44 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var45);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var46 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var50 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var60 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var61);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var62 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var66 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var67 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var68 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var72 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var73 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var74 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var84 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var88 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var89 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var90 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var94 == 1);

  }

  public void test20() throws Throwable {

    demo.pathplanning.model.CartesianGraph var2 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var3 = var2.getXSize();
    int var4 = var2.getYSize();
    int var5 = var2.getYSize();
    demo.pathplanning.model.CartesianGraph var8 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var9 = var8.getXSize();
    int var10 = var8.getYSize();
    int var11 = var8.getYSize();
    demo.pathplanning.model.CartesianGraph var12 = new demo.pathplanning.model.CartesianGraph(var5, var11);
    demo.pathplanning.model.CartesianGraph var15 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var18 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var19 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var20 = new demo.pathplanning.model.CartesianGraph(var5, 1);
    java.lang.String var21 = var20.toString();
    demo.pathplanning.model.CartesianGraph var24 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var27 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var28 = new demo.pathplanning.model.Location(1, 1);
    boolean var30 = var28.equals((java.lang.Object)0L);
    demo.pathplanning.model.Node var31 = var20.getNode(var28);
    demo.pathplanning.model.CartesianGraph var34 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var37 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var38 = new demo.pathplanning.model.Location(1, 1);
    boolean var40 = var38.equals((java.lang.Object)0L);
    int var41 = var38.getX();
    int var42 = var38.getX();
    demo.pathplanning.model.CartesianGraph var45 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var46 = var45.getXSize();
    demo.pathplanning.model.Node var47 = new demo.pathplanning.model.Node(var20, var38, var46);
    int var48 = var47.getCost();
    java.util.Collection var49 = var47.getNeighbors();
    demo.pathplanning.model.CartesianGraph var52 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var53 = var52.getXSize();
    demo.pathplanning.algorithms.AStar var54 = new demo.pathplanning.algorithms.AStar(var52);
    demo.pathplanning.model.CartesianGraph var57 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var60 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var61 = new demo.pathplanning.model.Location(1, 1);
    boolean var63 = var61.equals((java.lang.Object)0L);
    demo.pathplanning.model.Node var64 = var52.getNode(var61);
    demo.pathplanning.algorithms.AStar var65 = new demo.pathplanning.algorithms.AStar(var52);
    demo.pathplanning.model.CartesianGraph var66 = var65.getGraph();
    boolean var67 = var47.equals((java.lang.Object)var65);
    java.lang.String var68 = var47.toString();
    java.lang.String var69 = var47.toString();
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      demo.pathplanning.model.Direction var70 = demo.pathplanning.model.Direction.valueOf(var69);
      fail("Expected exception of type java.lang.IllegalArgumentException");
    } catch (java.lang.IllegalArgumentException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var3 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var4 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var5 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var9 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var11 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var21 + "' != '" + "0,\n"+ "'", var21.equals("0,\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var30 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var31);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var40 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var41 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var42 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var46 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var48 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var49);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var53 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var63 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var64);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var66);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var67 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var68 + "' != '" + "(1,1)=1"+ "'", var68.equals("(1,1)=1"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var69 + "' != '" + "(1,1)=1"+ "'", var69.equals("(1,1)=1"));

  }

  public void test21() throws Throwable {

    demo.pathplanning.model.CartesianGraph var2 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.algorithms.AStar var3 = new demo.pathplanning.algorithms.AStar(var2);
    demo.pathplanning.model.CartesianGraph var4 = var3.getGraph();
    demo.pathplanning.model.CartesianGraph var5 = var3.getGraph();
    demo.pathplanning.algorithms.PathPlanningContext var6 = new demo.pathplanning.algorithms.PathPlanningContext((demo.pathplanning.algorithms.PathPlanner)var3);
    demo.pathplanning.model.CartesianGraph var9 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var12 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var13 = new demo.pathplanning.model.Location(1, 1);
    int var14 = var13.getX();
    java.lang.String var15 = var13.toString();
    demo.pathplanning.model.CartesianGraph var18 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var21 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var22 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var25 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var26 = var25.getXSize();
    demo.pathplanning.model.CartesianGraph var29 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var30 = new demo.pathplanning.model.CartesianGraph(var26, 1);
    demo.pathplanning.model.Location var31 = new demo.pathplanning.model.Location(1, 1);
    int var32 = var31.getX();
    int var33 = var31.getY();
    demo.pathplanning.model.CartesianGraph var36 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.algorithms.AStar var37 = new demo.pathplanning.algorithms.AStar(var36);
    boolean var38 = var31.equals((java.lang.Object)var37);
    java.util.List var39 = var3.getPath(var13, var31);

  }

  public void test22() throws Throwable {

    demo.pathplanning.model.CartesianGraph var2 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var3 = var2.getXSize();
    int var4 = var2.getYSize();
    int var5 = var2.getYSize();
    demo.pathplanning.model.CartesianGraph var8 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var9 = var8.getXSize();
    int var10 = var8.getYSize();
    int var11 = var8.getYSize();
    demo.pathplanning.model.CartesianGraph var12 = new demo.pathplanning.model.CartesianGraph(var5, var11);
    int var13 = var12.getXSize();
    demo.pathplanning.model.CartesianGraph var16 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.algorithms.AStar var17 = new demo.pathplanning.algorithms.AStar(var16);
    java.lang.String var18 = var16.toString();
    demo.pathplanning.model.CartesianGraph var21 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var24 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var25 = new demo.pathplanning.model.Location(1, 1);
    boolean var27 = var25.equals((java.lang.Object)0L);
    demo.pathplanning.model.Node var28 = var16.getNode(var25);
    demo.pathplanning.model.CartesianGraph var31 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var32 = var31.getXSize();
    demo.pathplanning.algorithms.AStar var33 = new demo.pathplanning.algorithms.AStar(var31);
    demo.pathplanning.model.CartesianGraph var36 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var39 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var40 = new demo.pathplanning.model.Location(1, 1);
    boolean var42 = var40.equals((java.lang.Object)0L);
    demo.pathplanning.model.Node var43 = var31.getNode(var40);
    int var44 = var31.getXSize();
    demo.pathplanning.model.Node var45 = new demo.pathplanning.model.Node(var12, var25, var44);
    java.lang.String var46 = var25.toString();
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      demo.pathplanning.model.Direction var47 = demo.pathplanning.model.Direction.valueOf(var46);
      fail("Expected exception of type java.lang.IllegalArgumentException");
    } catch (java.lang.IllegalArgumentException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var3 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var4 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var5 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var9 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var11 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var13 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var18 + "' != '" + "0,\n"+ "'", var18.equals("0,\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var27 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var28);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var32 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var42 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var43);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var44 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var46 + "' != '" + "(1,1)"+ "'", var46.equals("(1,1)"));

  }

  public void test23() throws Throwable {

    demo.pathplanning.model.CartesianGraph var2 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.algorithms.AStar var3 = new demo.pathplanning.algorithms.AStar(var2);
    java.lang.String var4 = var2.toString();
    demo.pathplanning.model.CartesianGraph var7 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var10 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var11 = new demo.pathplanning.model.Location(1, 1);
    boolean var13 = var11.equals((java.lang.Object)0L);
    demo.pathplanning.model.Node var14 = var2.getNode(var11);
    java.lang.String var15 = var11.toString();
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      demo.pathplanning.model.Direction var16 = demo.pathplanning.model.Direction.valueOf(var15);
      fail("Expected exception of type java.lang.IllegalArgumentException");
    } catch (java.lang.IllegalArgumentException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var4 + "' != '" + "0,\n"+ "'", var4.equals("0,\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var13 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var14);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var15 + "' != '" + "(1,1)"+ "'", var15.equals("(1,1)"));

  }

  public void test24() throws Throwable {

    demo.pathplanning.model.CartesianGraph var2 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.algorithms.AStar var3 = new demo.pathplanning.algorithms.AStar(var2);
    demo.pathplanning.model.CartesianGraph var4 = var3.getGraph();
    demo.pathplanning.model.CartesianGraph var5 = var3.getGraph();
    demo.pathplanning.model.CartesianGraph var8 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var9 = var8.getXSize();
    int var10 = var8.getYSize();
    int var11 = var8.getYSize();
    demo.pathplanning.model.CartesianGraph var14 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var15 = var14.getXSize();
    int var16 = var14.getYSize();
    int var17 = var14.getYSize();
    demo.pathplanning.model.CartesianGraph var18 = new demo.pathplanning.model.CartesianGraph(var11, var17);
    int var19 = var18.getXSize();
    demo.pathplanning.model.CartesianGraph var22 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.algorithms.AStar var23 = new demo.pathplanning.algorithms.AStar(var22);
    java.lang.String var24 = var22.toString();
    demo.pathplanning.model.CartesianGraph var27 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var30 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var31 = new demo.pathplanning.model.Location(1, 1);
    boolean var33 = var31.equals((java.lang.Object)0L);
    demo.pathplanning.model.Node var34 = var22.getNode(var31);
    demo.pathplanning.model.CartesianGraph var37 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var38 = var37.getXSize();
    demo.pathplanning.algorithms.AStar var39 = new demo.pathplanning.algorithms.AStar(var37);
    demo.pathplanning.model.CartesianGraph var42 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var45 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var46 = new demo.pathplanning.model.Location(1, 1);
    boolean var48 = var46.equals((java.lang.Object)0L);
    demo.pathplanning.model.Node var49 = var37.getNode(var46);
    int var50 = var37.getXSize();
    demo.pathplanning.model.Node var51 = new demo.pathplanning.model.Node(var18, var31, var50);
    java.lang.String var52 = var31.toString();
    demo.pathplanning.model.CartesianGraph var55 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var58 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var59 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var62 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var63 = var62.getXSize();
    demo.pathplanning.model.CartesianGraph var66 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var67 = new demo.pathplanning.model.CartesianGraph(var63, 1);
    demo.pathplanning.model.Location var68 = new demo.pathplanning.model.Location(1, 1);
    int var69 = var68.getX();
    int var70 = var68.getY();
    demo.pathplanning.model.CartesianGraph var73 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.algorithms.AStar var74 = new demo.pathplanning.algorithms.AStar(var73);
    boolean var75 = var68.equals((java.lang.Object)var74);
    java.util.List var76 = var3.getPath(var31, var68);

  }

  public void test25() throws Throwable {

    demo.pathplanning.model.CartesianGraph var2 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.algorithms.AStar var3 = new demo.pathplanning.algorithms.AStar(var2);
    demo.pathplanning.model.CartesianGraph var4 = var3.getGraph();
    demo.pathplanning.model.CartesianGraph var5 = var3.getGraph();
    demo.pathplanning.algorithms.PathPlanningContext var6 = new demo.pathplanning.algorithms.PathPlanningContext((demo.pathplanning.algorithms.PathPlanner)var3);
    demo.pathplanning.model.CartesianGraph var7 = var3.getGraph();
    demo.pathplanning.algorithms.PathPlanningContext var8 = new demo.pathplanning.algorithms.PathPlanningContext((demo.pathplanning.algorithms.PathPlanner)var3);
    demo.pathplanning.model.CartesianGraph var11 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var12 = var11.getXSize();
    demo.pathplanning.algorithms.AStar var13 = new demo.pathplanning.algorithms.AStar(var11);
    demo.pathplanning.model.CartesianGraph var16 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var19 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var20 = new demo.pathplanning.model.Location(1, 1);
    boolean var22 = var20.equals((java.lang.Object)0L);
    demo.pathplanning.model.Node var23 = var11.getNode(var20);
    int var24 = var20.getY();
    int var25 = var20.getY();
    demo.pathplanning.model.CartesianGraph var28 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var31 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var32 = new demo.pathplanning.model.Location(1, 1);
    java.util.List var33 = var8.getPath(var20, var32);

  }

  public void test26() throws Throwable {

    demo.pathplanning.model.CartesianGraph var2 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var3 = var2.getXSize();
    demo.pathplanning.algorithms.AStar var4 = new demo.pathplanning.algorithms.AStar(var2);
    demo.pathplanning.model.CartesianGraph var7 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var10 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var11 = new demo.pathplanning.model.Location(1, 1);
    boolean var13 = var11.equals((java.lang.Object)0L);
    demo.pathplanning.model.Node var14 = var2.getNode(var11);
    demo.pathplanning.algorithms.AStar var15 = new demo.pathplanning.algorithms.AStar(var2);
    demo.pathplanning.algorithms.PathPlanningContext var16 = new demo.pathplanning.algorithms.PathPlanningContext((demo.pathplanning.algorithms.PathPlanner)var15);
    demo.pathplanning.model.CartesianGraph var17 = var15.getGraph();
    java.lang.String var18 = var17.toString();
    java.lang.String var19 = var17.toString();
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      demo.pathplanning.model.Direction var20 = demo.pathplanning.model.Direction.valueOf(var19);
      fail("Expected exception of type java.lang.IllegalArgumentException");
    } catch (java.lang.IllegalArgumentException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var3 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var13 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var14);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var17);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var18 + "' != '" + "0,\n"+ "'", var18.equals("0,\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var19 + "' != '" + "0,\n"+ "'", var19.equals("0,\n"));

  }

  public void test27() throws Throwable {

    demo.pathplanning.model.CartesianGraph var2 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var3 = var2.getXSize();
    demo.pathplanning.algorithms.AStar var4 = new demo.pathplanning.algorithms.AStar(var2);
    demo.pathplanning.model.CartesianGraph var7 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var10 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var11 = new demo.pathplanning.model.Location(1, 1);
    boolean var13 = var11.equals((java.lang.Object)0L);
    demo.pathplanning.model.Node var14 = var2.getNode(var11);
    int var15 = var2.getXSize();
    demo.pathplanning.model.CartesianGraph var18 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var19 = var18.getXSize();
    demo.pathplanning.algorithms.AStar var20 = new demo.pathplanning.algorithms.AStar(var18);
    demo.pathplanning.model.CartesianGraph var23 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var26 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var27 = new demo.pathplanning.model.Location(1, 1);
    boolean var29 = var27.equals((java.lang.Object)0L);
    demo.pathplanning.model.Node var30 = var18.getNode(var27);
    int var31 = var18.getYSize();
    demo.pathplanning.model.CartesianGraph var34 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var35 = var34.getXSize();
    int var36 = var34.getYSize();
    int var37 = var34.getYSize();
    demo.pathplanning.model.CartesianGraph var40 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var41 = var40.getXSize();
    int var42 = var40.getYSize();
    int var43 = var40.getYSize();
    demo.pathplanning.model.CartesianGraph var44 = new demo.pathplanning.model.CartesianGraph(var37, var43);
    demo.pathplanning.model.CartesianGraph var47 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var50 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var51 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var52 = new demo.pathplanning.model.CartesianGraph(var37, 1);
    int var53 = var52.getXSize();
    demo.pathplanning.model.CartesianGraph var56 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var57 = var56.getXSize();
    int var58 = var56.getYSize();
    int var59 = var56.getYSize();
    demo.pathplanning.model.CartesianGraph var60 = new demo.pathplanning.model.CartesianGraph(var53, var59);
    demo.pathplanning.model.CartesianGraph var61 = new demo.pathplanning.model.CartesianGraph(var31, var53);
    demo.pathplanning.model.CartesianGraph var64 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var65 = var64.getXSize();
    int var66 = var64.getYSize();
    int var67 = var64.getYSize();
    demo.pathplanning.model.CartesianGraph var70 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var71 = var70.getXSize();
    int var72 = var70.getYSize();
    int var73 = var70.getYSize();
    demo.pathplanning.model.CartesianGraph var74 = new demo.pathplanning.model.CartesianGraph(var67, var73);
    demo.pathplanning.model.CartesianGraph var77 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var80 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var81 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var82 = new demo.pathplanning.model.CartesianGraph(var67, 1);
    int var83 = var82.getXSize();
    demo.pathplanning.model.CartesianGraph var86 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var87 = var86.getXSize();
    int var88 = var86.getYSize();
    int var89 = var86.getYSize();
    demo.pathplanning.model.CartesianGraph var90 = new demo.pathplanning.model.CartesianGraph(var83, var89);
    demo.pathplanning.model.CartesianGraph var91 = new demo.pathplanning.model.CartesianGraph(var31, var83);
    demo.pathplanning.model.CartesianGraph var92 = new demo.pathplanning.model.CartesianGraph(var15, var83);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var3 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var13 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var14);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var15 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var19 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var29 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var30);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var31 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var35 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var36 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var37 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var41 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var42 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var43 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var53 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var57 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var58 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var59 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var65 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var66 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var67 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var71 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var72 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var73 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var83 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var87 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var88 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var89 == 1);

  }

  public void test28() throws Throwable {

    demo.pathplanning.model.CartesianGraph var2 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.algorithms.AStar var3 = new demo.pathplanning.algorithms.AStar(var2);
    demo.pathplanning.model.CartesianGraph var4 = var3.getGraph();
    demo.pathplanning.model.CartesianGraph var5 = var3.getGraph();
    demo.pathplanning.algorithms.PathPlanningContext var6 = new demo.pathplanning.algorithms.PathPlanningContext((demo.pathplanning.algorithms.PathPlanner)var3);
    demo.pathplanning.model.CartesianGraph var7 = var3.getGraph();
    demo.pathplanning.algorithms.PathPlanningContext var8 = new demo.pathplanning.algorithms.PathPlanningContext((demo.pathplanning.algorithms.PathPlanner)var3);
    demo.pathplanning.model.CartesianGraph var11 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var14 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var15 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var18 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var19 = var18.getXSize();
    int var20 = var18.getYSize();
    int var21 = var18.getYSize();
    demo.pathplanning.model.CartesianGraph var24 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var25 = var24.getXSize();
    int var26 = var24.getYSize();
    int var27 = var24.getYSize();
    demo.pathplanning.model.CartesianGraph var28 = new demo.pathplanning.model.CartesianGraph(var21, var27);
    demo.pathplanning.model.CartesianGraph var29 = new demo.pathplanning.model.CartesianGraph(1, var21);
    int var30 = var29.getYSize();
    demo.pathplanning.model.CartesianGraph var33 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var34 = var33.getXSize();
    int var35 = var33.getYSize();
    int var36 = var33.getYSize();
    demo.pathplanning.model.CartesianGraph var39 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var40 = new demo.pathplanning.model.Location(var36, 1);
    java.lang.String var41 = var40.toString();
    demo.pathplanning.model.Node var42 = var29.getNode(var40);
    int var43 = var40.getY();
    java.lang.String var44 = var40.toString();
    demo.pathplanning.model.CartesianGraph var47 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var48 = var47.getXSize();
    demo.pathplanning.algorithms.AStar var49 = new demo.pathplanning.algorithms.AStar(var47);
    demo.pathplanning.model.CartesianGraph var50 = var49.getGraph();
    boolean var51 = var40.equals((java.lang.Object)var49);
    int var52 = var40.getY();
    demo.pathplanning.model.CartesianGraph var55 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var58 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var59 = new demo.pathplanning.model.Location(1, 1);
    boolean var61 = var59.equals((java.lang.Object)0L);
    int var62 = var59.getX();
    java.lang.String var63 = var59.toString();
    java.util.List var64 = var8.getPath(var40, var59);

  }

  public void test29() throws Throwable {

    demo.pathplanning.model.CartesianGraph var2 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.algorithms.AStar var3 = new demo.pathplanning.algorithms.AStar(var2);
    demo.pathplanning.model.CartesianGraph var4 = var3.getGraph();
    demo.pathplanning.model.CartesianGraph var5 = var3.getGraph();
    demo.pathplanning.algorithms.PathPlanningContext var6 = new demo.pathplanning.algorithms.PathPlanningContext((demo.pathplanning.algorithms.PathPlanner)var3);
    demo.pathplanning.model.CartesianGraph var7 = var3.getGraph();
    demo.pathplanning.algorithms.PathPlanningContext var8 = new demo.pathplanning.algorithms.PathPlanningContext((demo.pathplanning.algorithms.PathPlanner)var3);
    demo.pathplanning.model.CartesianGraph var11 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.algorithms.AStar var12 = new demo.pathplanning.algorithms.AStar(var11);
    demo.pathplanning.model.CartesianGraph var13 = var12.getGraph();
    demo.pathplanning.model.CartesianGraph var14 = var12.getGraph();
    demo.pathplanning.algorithms.PathPlanningContext var15 = new demo.pathplanning.algorithms.PathPlanningContext((demo.pathplanning.algorithms.PathPlanner)var12);
    demo.pathplanning.model.CartesianGraph var16 = var12.getGraph();
    int var17 = var16.getYSize();
    demo.pathplanning.model.CartesianGraph var20 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var23 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var24 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var27 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var30 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var31 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.Node var32 = new demo.pathplanning.model.Node(var16, var24, 1);
    java.util.Collection var33 = var32.getNeighbors();
    demo.pathplanning.model.Location var34 = var32.getLocation();
    demo.pathplanning.model.CartesianGraph var37 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var40 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var41 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var44 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var45 = var44.getXSize();
    int var46 = var44.getYSize();
    int var47 = var44.getYSize();
    demo.pathplanning.model.CartesianGraph var50 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var51 = var50.getXSize();
    int var52 = var50.getYSize();
    int var53 = var50.getYSize();
    demo.pathplanning.model.CartesianGraph var54 = new demo.pathplanning.model.CartesianGraph(var47, var53);
    demo.pathplanning.model.CartesianGraph var55 = new demo.pathplanning.model.CartesianGraph(1, var47);
    int var56 = var55.getYSize();
    demo.pathplanning.model.CartesianGraph var59 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var60 = var59.getXSize();
    int var61 = var59.getYSize();
    int var62 = var59.getYSize();
    demo.pathplanning.model.CartesianGraph var65 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var66 = new demo.pathplanning.model.Location(var62, 1);
    java.lang.String var67 = var66.toString();
    demo.pathplanning.model.Node var68 = var55.getNode(var66);
    int var69 = var66.getY();
    java.lang.String var70 = var66.toString();
    java.util.List var71 = var8.getPath(var34, var66);

  }

  public void test30() throws Throwable {

    demo.pathplanning.model.CartesianGraph var2 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var5 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var6 = new demo.pathplanning.model.Location(1, 1);
    boolean var8 = var6.equals((java.lang.Object)0L);
    int var9 = var6.getX();
    int var10 = var6.getX();
    int var11 = var6.getY();
    demo.pathplanning.model.CartesianGraph var14 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var15 = var14.getXSize();
    demo.pathplanning.algorithms.AStar var16 = new demo.pathplanning.algorithms.AStar(var14);
    demo.pathplanning.model.CartesianGraph var19 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var22 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var23 = new demo.pathplanning.model.Location(1, 1);
    boolean var25 = var23.equals((java.lang.Object)0L);
    demo.pathplanning.model.Node var26 = var14.getNode(var23);
    boolean var27 = var6.equals((java.lang.Object)var23);
    java.lang.String var28 = var6.toString();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var9 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var11 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var15 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var25 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var26);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var27 == true);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var28 + "' != '" + "(1,1)"+ "'", var28.equals("(1,1)"));

  }

  public void test31() throws Throwable {

    demo.pathplanning.model.CartesianGraph var2 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.algorithms.AStar var3 = new demo.pathplanning.algorithms.AStar(var2);
    demo.pathplanning.model.CartesianGraph var4 = var3.getGraph();
    demo.pathplanning.model.CartesianGraph var5 = var3.getGraph();
    demo.pathplanning.algorithms.PathPlanningContext var6 = new demo.pathplanning.algorithms.PathPlanningContext((demo.pathplanning.algorithms.PathPlanner)var3);
    demo.pathplanning.model.CartesianGraph var7 = var3.getGraph();
    demo.pathplanning.algorithms.PathPlanningContext var8 = new demo.pathplanning.algorithms.PathPlanningContext((demo.pathplanning.algorithms.PathPlanner)var3);
    demo.pathplanning.model.CartesianGraph var11 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var12 = var11.getXSize();
    demo.pathplanning.algorithms.AStar var13 = new demo.pathplanning.algorithms.AStar(var11);
    demo.pathplanning.model.CartesianGraph var16 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var19 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var20 = new demo.pathplanning.model.Location(1, 1);
    boolean var22 = var20.equals((java.lang.Object)0L);
    demo.pathplanning.model.Node var23 = var11.getNode(var20);
    int var24 = var20.getY();
    demo.pathplanning.model.CartesianGraph var27 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var30 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var31 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var34 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var35 = var34.getXSize();
    demo.pathplanning.model.CartesianGraph var38 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var39 = new demo.pathplanning.model.CartesianGraph(var35, 1);
    demo.pathplanning.model.Location var40 = new demo.pathplanning.model.Location(1, 1);
    java.util.List var41 = var8.getPath(var20, var40);

  }

  public void test32() throws Throwable {

    demo.pathplanning.model.CartesianGraph var2 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.algorithms.AStar var3 = new demo.pathplanning.algorithms.AStar(var2);
    demo.pathplanning.model.CartesianGraph var4 = var3.getGraph();
    demo.pathplanning.model.CartesianGraph var5 = var3.getGraph();
    demo.pathplanning.algorithms.PathPlanningContext var6 = new demo.pathplanning.algorithms.PathPlanningContext((demo.pathplanning.algorithms.PathPlanner)var3);
    demo.pathplanning.model.CartesianGraph var9 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.algorithms.AStar var10 = new demo.pathplanning.algorithms.AStar(var9);
    demo.pathplanning.model.CartesianGraph var11 = var10.getGraph();
    demo.pathplanning.model.CartesianGraph var12 = var10.getGraph();
    demo.pathplanning.algorithms.PathPlanningContext var13 = new demo.pathplanning.algorithms.PathPlanningContext((demo.pathplanning.algorithms.PathPlanner)var10);
    demo.pathplanning.model.CartesianGraph var14 = var10.getGraph();
    int var15 = var14.getYSize();
    demo.pathplanning.model.CartesianGraph var18 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var21 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var22 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var25 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var28 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var29 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.Node var30 = new demo.pathplanning.model.Node(var14, var22, 1);
    java.util.Collection var31 = var30.getNeighbors();
    demo.pathplanning.model.Location var32 = var30.getLocation();
    demo.pathplanning.model.CartesianGraph var35 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var38 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var39 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var42 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var43 = var42.getXSize();
    int var44 = var42.getYSize();
    int var45 = var42.getYSize();
    demo.pathplanning.model.CartesianGraph var48 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var49 = var48.getXSize();
    int var50 = var48.getYSize();
    int var51 = var48.getYSize();
    demo.pathplanning.model.CartesianGraph var52 = new demo.pathplanning.model.CartesianGraph(var45, var51);
    demo.pathplanning.model.CartesianGraph var53 = new demo.pathplanning.model.CartesianGraph(1, var45);
    int var54 = var53.getYSize();
    demo.pathplanning.model.CartesianGraph var57 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var58 = var57.getXSize();
    int var59 = var57.getYSize();
    int var60 = var57.getYSize();
    demo.pathplanning.model.CartesianGraph var63 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var64 = new demo.pathplanning.model.Location(var60, 1);
    java.lang.String var65 = var64.toString();
    demo.pathplanning.model.Node var66 = var53.getNode(var64);
    int var67 = var64.getY();
    java.lang.String var68 = var64.toString();
    int var69 = var64.getX();
    java.util.List var70 = var6.getPath(var32, var64);

  }

  public void test33() throws Throwable {

    demo.pathplanning.model.CartesianGraph var2 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.algorithms.AStar var3 = new demo.pathplanning.algorithms.AStar(var2);
    demo.pathplanning.model.CartesianGraph var4 = var3.getGraph();
    demo.pathplanning.model.CartesianGraph var5 = var3.getGraph();
    demo.pathplanning.algorithms.PathPlanningContext var6 = new demo.pathplanning.algorithms.PathPlanningContext((demo.pathplanning.algorithms.PathPlanner)var3);
    demo.pathplanning.model.CartesianGraph var7 = var3.getGraph();
    demo.pathplanning.model.CartesianGraph var10 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.algorithms.AStar var11 = new demo.pathplanning.algorithms.AStar(var10);
    demo.pathplanning.model.CartesianGraph var12 = var11.getGraph();
    demo.pathplanning.model.CartesianGraph var13 = var11.getGraph();
    demo.pathplanning.algorithms.PathPlanningContext var14 = new demo.pathplanning.algorithms.PathPlanningContext((demo.pathplanning.algorithms.PathPlanner)var11);
    demo.pathplanning.model.CartesianGraph var15 = var11.getGraph();
    int var16 = var15.getYSize();
    demo.pathplanning.model.CartesianGraph var19 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var22 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var23 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var26 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var29 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var30 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.Node var31 = new demo.pathplanning.model.Node(var15, var23, 1);
    int var32 = var23.getX();
    demo.pathplanning.model.CartesianGraph var35 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var38 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var39 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var42 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var43 = var42.getXSize();
    int var44 = var42.getYSize();
    int var45 = var42.getYSize();
    demo.pathplanning.model.CartesianGraph var48 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var49 = var48.getXSize();
    int var50 = var48.getYSize();
    int var51 = var48.getYSize();
    demo.pathplanning.model.CartesianGraph var52 = new demo.pathplanning.model.CartesianGraph(var45, var51);
    demo.pathplanning.model.CartesianGraph var53 = new demo.pathplanning.model.CartesianGraph(1, var45);
    int var54 = var53.getYSize();
    demo.pathplanning.model.CartesianGraph var57 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var58 = var57.getXSize();
    int var59 = var57.getYSize();
    int var60 = var57.getYSize();
    demo.pathplanning.model.CartesianGraph var63 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var64 = new demo.pathplanning.model.Location(var60, 1);
    java.lang.String var65 = var64.toString();
    demo.pathplanning.model.Node var66 = var53.getNode(var64);
    java.util.List var67 = var3.getPath(var23, var64);

  }

  public void test34() throws Throwable {

    demo.pathplanning.model.CartesianGraph var2 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.algorithms.AStar var3 = new demo.pathplanning.algorithms.AStar(var2);
    demo.pathplanning.model.CartesianGraph var4 = var3.getGraph();
    demo.pathplanning.model.CartesianGraph var5 = var3.getGraph();
    demo.pathplanning.algorithms.PathPlanningContext var6 = new demo.pathplanning.algorithms.PathPlanningContext((demo.pathplanning.algorithms.PathPlanner)var3);
    demo.pathplanning.model.CartesianGraph var7 = var3.getGraph();
    int var8 = var7.getYSize();
    demo.pathplanning.model.CartesianGraph var11 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var14 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var15 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var18 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var21 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var22 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.Node var23 = new demo.pathplanning.model.Node(var7, var15, 1);
    int var24 = var23.getCost();
    demo.pathplanning.model.CartesianGraph var27 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var28 = var27.getXSize();
    int var29 = var27.getYSize();
    int var30 = var27.getYSize();
    demo.pathplanning.model.CartesianGraph var33 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var34 = new demo.pathplanning.model.Location(var30, 1);
    demo.pathplanning.model.CartesianGraph var35 = new demo.pathplanning.model.CartesianGraph(var24, 1);
    demo.pathplanning.model.CartesianGraph var38 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var41 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var42 = new demo.pathplanning.model.Location(1, 1);
    boolean var44 = var42.equals((java.lang.Object)0L);
    demo.pathplanning.model.Node var45 = var35.getNode(var42);
    demo.pathplanning.model.CartesianGraph var48 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var49 = var48.getXSize();
    int var50 = var48.getYSize();
    int var51 = var48.getYSize();
    demo.pathplanning.model.CartesianGraph var54 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var55 = var54.getXSize();
    int var56 = var54.getYSize();
    int var57 = var54.getYSize();
    demo.pathplanning.model.CartesianGraph var58 = new demo.pathplanning.model.CartesianGraph(var51, var57);
    demo.pathplanning.model.CartesianGraph var61 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var64 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var65 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var66 = new demo.pathplanning.model.CartesianGraph(var51, 1);
    boolean var67 = var42.equals((java.lang.Object)var51);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var8 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var24 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var28 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var29 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var30 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var44 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var45);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var49 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var50 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var51 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var55 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var56 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var57 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var67 == false);

  }

  public void test35() throws Throwable {

    demo.pathplanning.model.CartesianGraph var2 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var5 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var6 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var9 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var10 = var9.getXSize();
    demo.pathplanning.model.CartesianGraph var13 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var14 = new demo.pathplanning.model.CartesianGraph(var10, 1);
    demo.pathplanning.model.Location var15 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var18 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var19 = var18.getXSize();
    int var20 = var18.getYSize();
    int var21 = var18.getYSize();
    demo.pathplanning.model.CartesianGraph var24 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var25 = var24.getXSize();
    int var26 = var24.getYSize();
    int var27 = var24.getYSize();
    demo.pathplanning.model.CartesianGraph var28 = new demo.pathplanning.model.CartesianGraph(var21, var27);
    demo.pathplanning.model.Location var29 = new demo.pathplanning.model.Location(1, var27);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var19 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var20 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var21 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var25 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var26 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var27 == 1);

  }

  public void test36() throws Throwable {

    demo.pathplanning.model.CartesianGraph var2 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var3 = var2.getXSize();
    demo.pathplanning.algorithms.AStar var4 = new demo.pathplanning.algorithms.AStar(var2);
    demo.pathplanning.model.CartesianGraph var7 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var10 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var11 = new demo.pathplanning.model.Location(1, 1);
    boolean var13 = var11.equals((java.lang.Object)0L);
    demo.pathplanning.model.Node var14 = var2.getNode(var11);
    demo.pathplanning.algorithms.AStar var15 = new demo.pathplanning.algorithms.AStar(var2);
    demo.pathplanning.algorithms.PathPlanningContext var16 = new demo.pathplanning.algorithms.PathPlanningContext((demo.pathplanning.algorithms.PathPlanner)var15);
    demo.pathplanning.algorithms.PathPlanningContext var17 = new demo.pathplanning.algorithms.PathPlanningContext((demo.pathplanning.algorithms.PathPlanner)var15);
    demo.pathplanning.model.CartesianGraph var20 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var23 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var24 = new demo.pathplanning.model.Location(1, 1);
    boolean var26 = var24.equals((java.lang.Object)0L);
    int var27 = var24.getX();
    int var28 = var24.getX();
    int var29 = var24.getY();
    demo.pathplanning.model.CartesianGraph var32 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var33 = var32.getXSize();
    demo.pathplanning.algorithms.AStar var34 = new demo.pathplanning.algorithms.AStar(var32);
    demo.pathplanning.model.CartesianGraph var37 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var40 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var41 = new demo.pathplanning.model.Location(1, 1);
    boolean var43 = var41.equals((java.lang.Object)0L);
    demo.pathplanning.model.Node var44 = var32.getNode(var41);
    boolean var45 = var24.equals((java.lang.Object)var41);
    demo.pathplanning.model.CartesianGraph var48 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.algorithms.AStar var49 = new demo.pathplanning.algorithms.AStar(var48);
    demo.pathplanning.model.CartesianGraph var50 = var49.getGraph();
    demo.pathplanning.model.CartesianGraph var51 = var49.getGraph();
    demo.pathplanning.algorithms.PathPlanningContext var52 = new demo.pathplanning.algorithms.PathPlanningContext((demo.pathplanning.algorithms.PathPlanner)var49);
    demo.pathplanning.model.CartesianGraph var53 = var49.getGraph();
    int var54 = var53.getYSize();
    demo.pathplanning.model.CartesianGraph var57 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var60 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var61 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var64 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var67 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var68 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.Node var69 = new demo.pathplanning.model.Node(var53, var61, 1);
    java.lang.String var70 = var61.toString();
    java.util.List var71 = var17.getPath(var41, var61);

  }

  public void test37() throws Throwable {

    demo.pathplanning.model.CartesianGraph var2 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var3 = var2.getXSize();
    int var4 = var2.getYSize();
    int var5 = var2.getYSize();
    demo.pathplanning.model.CartesianGraph var8 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var9 = var8.getXSize();
    int var10 = var8.getYSize();
    int var11 = var8.getYSize();
    demo.pathplanning.model.CartesianGraph var12 = new demo.pathplanning.model.CartesianGraph(var5, var11);
    demo.pathplanning.algorithms.AStar var13 = new demo.pathplanning.algorithms.AStar(var12);
    demo.pathplanning.algorithms.PathPlanningContext var14 = new demo.pathplanning.algorithms.PathPlanningContext((demo.pathplanning.algorithms.PathPlanner)var13);
    demo.pathplanning.model.CartesianGraph var17 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.algorithms.AStar var18 = new demo.pathplanning.algorithms.AStar(var17);
    demo.pathplanning.model.CartesianGraph var19 = var18.getGraph();
    demo.pathplanning.model.CartesianGraph var20 = var18.getGraph();
    demo.pathplanning.algorithms.PathPlanningContext var21 = new demo.pathplanning.algorithms.PathPlanningContext((demo.pathplanning.algorithms.PathPlanner)var18);
    demo.pathplanning.model.CartesianGraph var22 = var18.getGraph();
    int var23 = var22.getYSize();
    demo.pathplanning.model.CartesianGraph var26 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var29 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var30 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var33 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var36 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var37 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.Node var38 = new demo.pathplanning.model.Node(var22, var30, 1);
    int var39 = var38.getCost();
    java.util.Collection var40 = var38.getNeighbors();
    int var41 = var38.getCost();
    demo.pathplanning.model.CartesianGraph var44 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var45 = var44.getXSize();
    int var46 = var44.getYSize();
    int var47 = var44.getYSize();
    demo.pathplanning.model.CartesianGraph var50 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var51 = new demo.pathplanning.model.Location(var47, 1);
    int var52 = var51.getY();
    demo.pathplanning.model.Location var53 = new demo.pathplanning.model.Location(var41, var52);
    demo.pathplanning.model.CartesianGraph var56 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var59 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var60 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var63 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var64 = var63.getXSize();
    int var65 = var63.getYSize();
    int var66 = var63.getYSize();
    demo.pathplanning.model.CartesianGraph var69 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var70 = var69.getXSize();
    int var71 = var69.getYSize();
    int var72 = var69.getYSize();
    demo.pathplanning.model.CartesianGraph var73 = new demo.pathplanning.model.CartesianGraph(var66, var72);
    demo.pathplanning.model.CartesianGraph var74 = new demo.pathplanning.model.CartesianGraph(1, var66);
    demo.pathplanning.model.CartesianGraph var77 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var80 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var81 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var84 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var85 = var84.getXSize();
    int var86 = var84.getYSize();
    int var87 = var84.getYSize();
    demo.pathplanning.model.CartesianGraph var90 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var91 = var90.getXSize();
    int var92 = var90.getYSize();
    int var93 = var90.getYSize();
    demo.pathplanning.model.CartesianGraph var94 = new demo.pathplanning.model.CartesianGraph(var87, var93);
    demo.pathplanning.model.CartesianGraph var95 = new demo.pathplanning.model.CartesianGraph(1, var87);
    demo.pathplanning.model.Location var96 = new demo.pathplanning.model.Location(1, 1);
    java.util.List var97 = var14.getPath(var53, var96);

  }

  public void test38() throws Throwable {

    demo.pathplanning.model.CartesianGraph var2 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.algorithms.AStar var3 = new demo.pathplanning.algorithms.AStar(var2);
    demo.pathplanning.model.CartesianGraph var4 = var3.getGraph();
    demo.pathplanning.model.CartesianGraph var5 = var3.getGraph();
    demo.pathplanning.algorithms.PathPlanningContext var6 = new demo.pathplanning.algorithms.PathPlanningContext((demo.pathplanning.algorithms.PathPlanner)var3);
    demo.pathplanning.model.CartesianGraph var7 = var3.getGraph();
    int var8 = var7.getYSize();
    demo.pathplanning.model.CartesianGraph var11 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var14 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var15 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var18 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var21 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var22 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.Node var23 = new demo.pathplanning.model.Node(var7, var15, 1);
    java.util.Collection var24 = var23.getNeighbors();
    int var25 = var23.getCost();
    java.lang.String var26 = var23.toString();
    demo.pathplanning.model.CartesianGraph var29 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.algorithms.AStar var30 = new demo.pathplanning.algorithms.AStar(var29);
    demo.pathplanning.model.CartesianGraph var31 = var30.getGraph();
    demo.pathplanning.model.CartesianGraph var32 = var30.getGraph();
    demo.pathplanning.algorithms.PathPlanningContext var33 = new demo.pathplanning.algorithms.PathPlanningContext((demo.pathplanning.algorithms.PathPlanner)var30);
    demo.pathplanning.model.CartesianGraph var34 = var30.getGraph();
    int var35 = var34.getYSize();
    demo.pathplanning.model.CartesianGraph var38 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var41 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var42 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var45 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var48 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var49 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.Node var50 = new demo.pathplanning.model.Node(var34, var42, 1);
    java.lang.String var51 = var50.toString();
    boolean var52 = var23.equals((java.lang.Object)var50);
    java.lang.String var53 = var50.toString();
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      demo.pathplanning.model.Direction var54 = demo.pathplanning.model.Direction.valueOf(var53);
      fail("Expected exception of type java.lang.IllegalArgumentException");
    } catch (java.lang.IllegalArgumentException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var8 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var24);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var25 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var26 + "' != '" + "(1,1)=1"+ "'", var26.equals("(1,1)=1"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var31);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var32);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var34);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var35 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var51 + "' != '" + "(1,1)=1"+ "'", var51.equals("(1,1)=1"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var52 == true);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var53 + "' != '" + "(1,1)=1"+ "'", var53.equals("(1,1)=1"));

  }

  public void test39() throws Throwable {

    demo.pathplanning.model.CartesianGraph var2 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var3 = var2.getXSize();
    int var4 = var2.getYSize();
    int var5 = var2.getYSize();
    demo.pathplanning.model.CartesianGraph var8 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var9 = var8.getXSize();
    int var10 = var8.getYSize();
    int var11 = var8.getYSize();
    demo.pathplanning.model.CartesianGraph var12 = new demo.pathplanning.model.CartesianGraph(var5, var11);
    demo.pathplanning.model.CartesianGraph var15 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var18 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var19 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var20 = new demo.pathplanning.model.CartesianGraph(var5, 1);
    java.lang.String var21 = var20.toString();
    demo.pathplanning.model.CartesianGraph var24 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var27 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var28 = new demo.pathplanning.model.Location(1, 1);
    boolean var30 = var28.equals((java.lang.Object)0L);
    demo.pathplanning.model.Node var31 = var20.getNode(var28);
    demo.pathplanning.model.CartesianGraph var34 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var37 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var38 = new demo.pathplanning.model.Location(1, 1);
    boolean var40 = var38.equals((java.lang.Object)0L);
    int var41 = var38.getX();
    int var42 = var38.getX();
    demo.pathplanning.model.CartesianGraph var45 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var46 = var45.getXSize();
    demo.pathplanning.model.Node var47 = new demo.pathplanning.model.Node(var20, var38, var46);
    int var48 = var47.getCost();
    java.util.Collection var49 = var47.getNeighbors();
    demo.pathplanning.model.CartesianGraph var52 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var53 = var52.getXSize();
    demo.pathplanning.algorithms.AStar var54 = new demo.pathplanning.algorithms.AStar(var52);
    demo.pathplanning.model.CartesianGraph var57 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var60 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var61 = new demo.pathplanning.model.Location(1, 1);
    boolean var63 = var61.equals((java.lang.Object)0L);
    demo.pathplanning.model.Node var64 = var52.getNode(var61);
    demo.pathplanning.algorithms.AStar var65 = new demo.pathplanning.algorithms.AStar(var52);
    demo.pathplanning.model.CartesianGraph var66 = var65.getGraph();
    boolean var67 = var47.equals((java.lang.Object)var65);
    java.lang.String var68 = var47.toString();
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      demo.pathplanning.model.Direction var69 = demo.pathplanning.model.Direction.valueOf(var68);
      fail("Expected exception of type java.lang.IllegalArgumentException");
    } catch (java.lang.IllegalArgumentException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var3 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var4 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var5 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var9 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var11 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var21 + "' != '" + "0,\n"+ "'", var21.equals("0,\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var30 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var31);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var40 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var41 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var42 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var46 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var48 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var49);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var53 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var63 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var64);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var66);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var67 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var68 + "' != '" + "(1,1)=1"+ "'", var68.equals("(1,1)=1"));

  }

  public void test40() throws Throwable {

    demo.pathplanning.model.CartesianGraph var2 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.algorithms.AStar var3 = new demo.pathplanning.algorithms.AStar(var2);
    demo.pathplanning.model.CartesianGraph var4 = var3.getGraph();
    demo.pathplanning.model.CartesianGraph var5 = var3.getGraph();
    demo.pathplanning.model.CartesianGraph var6 = var3.getGraph();
    demo.pathplanning.model.CartesianGraph var9 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var10 = var9.getXSize();
    int var11 = var9.getYSize();
    int var12 = var9.getYSize();
    demo.pathplanning.model.CartesianGraph var15 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var16 = var15.getXSize();
    int var17 = var15.getYSize();
    int var18 = var15.getYSize();
    demo.pathplanning.model.CartesianGraph var19 = new demo.pathplanning.model.CartesianGraph(var12, var18);
    demo.pathplanning.model.CartesianGraph var22 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var25 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var26 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var27 = new demo.pathplanning.model.CartesianGraph(var12, 1);
    java.lang.String var28 = var27.toString();
    demo.pathplanning.model.CartesianGraph var31 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var34 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var35 = new demo.pathplanning.model.Location(1, 1);
    boolean var37 = var35.equals((java.lang.Object)0L);
    demo.pathplanning.model.Node var38 = var27.getNode(var35);
    demo.pathplanning.model.CartesianGraph var41 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var42 = var41.getXSize();
    int var43 = var41.getYSize();
    demo.pathplanning.model.CartesianGraph var46 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.algorithms.AStar var47 = new demo.pathplanning.algorithms.AStar(var46);
    java.lang.String var48 = var46.toString();
    demo.pathplanning.model.CartesianGraph var51 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var54 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var55 = new demo.pathplanning.model.Location(1, 1);
    boolean var57 = var55.equals((java.lang.Object)0L);
    demo.pathplanning.model.Node var58 = var46.getNode(var55);
    demo.pathplanning.model.CartesianGraph var61 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var64 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var65 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var68 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var69 = var68.getXSize();
    demo.pathplanning.model.CartesianGraph var72 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var73 = new demo.pathplanning.model.CartesianGraph(var69, 1);
    demo.pathplanning.model.Location var74 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.Node var75 = new demo.pathplanning.model.Node(var41, var55, 1);
    demo.pathplanning.model.Location var76 = var75.getLocation();
    java.util.List var77 = var3.getPath(var35, var76);

  }

  public void test41() throws Throwable {

    demo.pathplanning.model.CartesianGraph var2 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var3 = var2.getXSize();
    int var4 = var2.getYSize();
    int var5 = var2.getYSize();
    demo.pathplanning.model.CartesianGraph var8 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var9 = var8.getXSize();
    int var10 = var8.getYSize();
    int var11 = var8.getYSize();
    demo.pathplanning.model.CartesianGraph var12 = new demo.pathplanning.model.CartesianGraph(var5, var11);
    demo.pathplanning.model.CartesianGraph var15 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var18 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var19 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var20 = new demo.pathplanning.model.CartesianGraph(var5, 1);
    java.lang.String var21 = var20.toString();
    demo.pathplanning.model.CartesianGraph var24 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var27 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var28 = new demo.pathplanning.model.Location(1, 1);
    boolean var30 = var28.equals((java.lang.Object)0L);
    demo.pathplanning.model.Node var31 = var20.getNode(var28);
    demo.pathplanning.model.CartesianGraph var34 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var37 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var38 = new demo.pathplanning.model.Location(1, 1);
    boolean var40 = var38.equals((java.lang.Object)0L);
    int var41 = var38.getX();
    int var42 = var38.getX();
    demo.pathplanning.model.CartesianGraph var45 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var46 = var45.getXSize();
    demo.pathplanning.model.Node var47 = new demo.pathplanning.model.Node(var20, var38, var46);
    demo.pathplanning.model.CartesianGraph var50 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.algorithms.AStar var51 = new demo.pathplanning.algorithms.AStar(var50);
    demo.pathplanning.model.CartesianGraph var52 = var51.getGraph();
    demo.pathplanning.model.CartesianGraph var53 = var51.getGraph();
    demo.pathplanning.algorithms.PathPlanningContext var54 = new demo.pathplanning.algorithms.PathPlanningContext((demo.pathplanning.algorithms.PathPlanner)var51);
    demo.pathplanning.model.CartesianGraph var55 = var51.getGraph();
    int var56 = var55.getYSize();
    demo.pathplanning.model.CartesianGraph var59 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var62 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var63 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var66 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var69 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var70 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.Node var71 = new demo.pathplanning.model.Node(var55, var63, 1);
    int var72 = var71.getCost();
    java.util.Collection var73 = var71.getNeighbors();
    int var74 = var71.getCost();
    demo.pathplanning.model.CartesianGraph var77 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var78 = var77.getXSize();
    int var79 = var77.getYSize();
    int var80 = var77.getYSize();
    demo.pathplanning.model.CartesianGraph var83 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var84 = new demo.pathplanning.model.Location(var80, 1);
    int var85 = var84.getY();
    demo.pathplanning.model.Location var86 = new demo.pathplanning.model.Location(var74, var85);
    demo.pathplanning.model.Location var87 = new demo.pathplanning.model.Location(var46, var85);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var3 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var4 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var5 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var9 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var11 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var21 + "' != '" + "0,\n"+ "'", var21.equals("0,\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var30 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var31);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var40 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var41 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var42 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var46 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var52);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var53);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var55);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var56 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var72 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var73);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var74 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var78 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var79 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var80 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var85 == 1);

  }

  public void test42() throws Throwable {

    demo.pathplanning.model.CartesianGraph var2 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var3 = var2.getXSize();
    int var4 = var2.getYSize();
    int var5 = var2.getYSize();
    demo.pathplanning.model.CartesianGraph var8 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var9 = var8.getXSize();
    int var10 = var8.getYSize();
    int var11 = var8.getYSize();
    demo.pathplanning.model.CartesianGraph var12 = new demo.pathplanning.model.CartesianGraph(var5, var11);
    demo.pathplanning.model.CartesianGraph var15 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var18 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var19 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var20 = new demo.pathplanning.model.CartesianGraph(var5, 1);
    java.lang.String var21 = var20.toString();
    demo.pathplanning.model.CartesianGraph var24 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var27 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var28 = new demo.pathplanning.model.Location(1, 1);
    boolean var30 = var28.equals((java.lang.Object)0L);
    demo.pathplanning.model.Node var31 = var20.getNode(var28);
    int var32 = var20.getYSize();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var3 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var4 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var5 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var9 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var11 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var21 + "' != '" + "0,\n"+ "'", var21.equals("0,\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var30 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var31);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var32 == 1);

  }

  public void test43() throws Throwable {

    demo.pathplanning.model.CartesianGraph var2 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.algorithms.AStar var3 = new demo.pathplanning.algorithms.AStar(var2);
    demo.pathplanning.model.CartesianGraph var4 = var3.getGraph();
    demo.pathplanning.model.CartesianGraph var5 = var3.getGraph();
    demo.pathplanning.algorithms.PathPlanningContext var6 = new demo.pathplanning.algorithms.PathPlanningContext((demo.pathplanning.algorithms.PathPlanner)var3);
    demo.pathplanning.model.CartesianGraph var7 = var3.getGraph();
    demo.pathplanning.algorithms.PathPlanningContext var8 = new demo.pathplanning.algorithms.PathPlanningContext((demo.pathplanning.algorithms.PathPlanner)var3);
    demo.pathplanning.model.CartesianGraph var11 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.algorithms.AStar var12 = new demo.pathplanning.algorithms.AStar(var11);
    java.lang.String var13 = var11.toString();
    demo.pathplanning.model.CartesianGraph var16 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var19 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var20 = new demo.pathplanning.model.Location(1, 1);
    boolean var22 = var20.equals((java.lang.Object)0L);
    demo.pathplanning.model.Node var23 = var11.getNode(var20);
    java.lang.String var24 = var20.toString();
    demo.pathplanning.model.CartesianGraph var27 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.algorithms.AStar var28 = new demo.pathplanning.algorithms.AStar(var27);
    demo.pathplanning.model.CartesianGraph var29 = var28.getGraph();
    demo.pathplanning.model.CartesianGraph var30 = var28.getGraph();
    demo.pathplanning.algorithms.PathPlanningContext var31 = new demo.pathplanning.algorithms.PathPlanningContext((demo.pathplanning.algorithms.PathPlanner)var28);
    demo.pathplanning.model.CartesianGraph var32 = var28.getGraph();
    int var33 = var32.getYSize();
    demo.pathplanning.model.CartesianGraph var36 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var39 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var40 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var43 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var46 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var47 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.Node var48 = new demo.pathplanning.model.Node(var32, var40, 1);
    boolean var49 = var20.equals((java.lang.Object)1);
    demo.pathplanning.model.CartesianGraph var52 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var55 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var56 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var59 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var60 = var59.getXSize();
    int var61 = var59.getYSize();
    int var62 = var59.getYSize();
    demo.pathplanning.model.CartesianGraph var65 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var66 = var65.getXSize();
    int var67 = var65.getYSize();
    int var68 = var65.getYSize();
    demo.pathplanning.model.CartesianGraph var69 = new demo.pathplanning.model.CartesianGraph(var62, var68);
    demo.pathplanning.model.CartesianGraph var70 = new demo.pathplanning.model.CartesianGraph(1, var62);
    int var71 = var70.getYSize();
    demo.pathplanning.model.CartesianGraph var74 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var75 = var74.getXSize();
    int var76 = var74.getYSize();
    int var77 = var74.getYSize();
    demo.pathplanning.model.CartesianGraph var80 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var81 = new demo.pathplanning.model.Location(var77, 1);
    java.lang.String var82 = var81.toString();
    demo.pathplanning.model.Node var83 = var70.getNode(var81);
    java.util.List var84 = var3.getPath(var20, var81);

  }

  public void test44() throws Throwable {

    demo.pathplanning.model.CartesianGraph var2 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var3 = var2.getXSize();
    demo.pathplanning.algorithms.AStar var4 = new demo.pathplanning.algorithms.AStar(var2);
    int var5 = var2.getYSize();
    int var6 = var2.getXSize();
    demo.pathplanning.model.CartesianGraph var9 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.algorithms.AStar var10 = new demo.pathplanning.algorithms.AStar(var9);
    demo.pathplanning.model.CartesianGraph var11 = var10.getGraph();
    demo.pathplanning.model.CartesianGraph var12 = var10.getGraph();
    demo.pathplanning.algorithms.PathPlanningContext var13 = new demo.pathplanning.algorithms.PathPlanningContext((demo.pathplanning.algorithms.PathPlanner)var10);
    demo.pathplanning.model.CartesianGraph var14 = var10.getGraph();
    int var15 = var14.getYSize();
    demo.pathplanning.model.CartesianGraph var18 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var21 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var22 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var25 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var28 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var29 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.Node var30 = new demo.pathplanning.model.Node(var14, var22, 1);
    demo.pathplanning.model.CartesianGraph var33 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var36 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var37 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var40 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var41 = var40.getXSize();
    int var42 = var40.getYSize();
    int var43 = var40.getYSize();
    demo.pathplanning.model.CartesianGraph var46 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var47 = var46.getXSize();
    int var48 = var46.getYSize();
    int var49 = var46.getYSize();
    demo.pathplanning.model.CartesianGraph var50 = new demo.pathplanning.model.CartesianGraph(var43, var49);
    demo.pathplanning.model.CartesianGraph var51 = new demo.pathplanning.model.CartesianGraph(1, var43);
    demo.pathplanning.model.CartesianGraph var54 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var57 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var58 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var61 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var62 = var61.getXSize();
    int var63 = var61.getYSize();
    int var64 = var61.getYSize();
    demo.pathplanning.model.CartesianGraph var67 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var68 = var67.getXSize();
    int var69 = var67.getYSize();
    int var70 = var67.getYSize();
    demo.pathplanning.model.CartesianGraph var71 = new demo.pathplanning.model.CartesianGraph(var64, var70);
    demo.pathplanning.model.CartesianGraph var72 = new demo.pathplanning.model.CartesianGraph(1, var64);
    demo.pathplanning.model.Location var73 = new demo.pathplanning.model.Location(1, 1);
    boolean var74 = var30.equals((java.lang.Object)1);
    demo.pathplanning.model.Location var75 = new demo.pathplanning.model.Location(var6, 1);
    int var76 = var75.getX();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var3 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var5 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var6 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var11);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var12);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var14);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var15 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var41 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var42 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var43 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var47 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var48 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var49 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var62 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var63 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var64 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var68 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var69 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var70 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var74 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var76 == 1);

  }

  public void test45() throws Throwable {

    demo.pathplanning.model.CartesianGraph var2 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var3 = var2.getXSize();
    demo.pathplanning.model.CartesianGraph var6 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var7 = new demo.pathplanning.model.CartesianGraph(var3, 1);
    demo.pathplanning.model.CartesianGraph var10 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.algorithms.AStar var11 = new demo.pathplanning.algorithms.AStar(var10);
    demo.pathplanning.model.CartesianGraph var12 = var11.getGraph();
    demo.pathplanning.model.CartesianGraph var13 = var11.getGraph();
    demo.pathplanning.algorithms.PathPlanningContext var14 = new demo.pathplanning.algorithms.PathPlanningContext((demo.pathplanning.algorithms.PathPlanner)var11);
    demo.pathplanning.model.CartesianGraph var15 = var11.getGraph();
    int var16 = var15.getYSize();
    demo.pathplanning.model.Location var17 = new demo.pathplanning.model.Location(var3, var16);
    int var18 = var17.getY();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var3 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var12);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var13);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var15);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var16 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var18 == 1);

  }

  public void test46() throws Throwable {

    demo.pathplanning.model.CartesianGraph var2 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var3 = var2.getXSize();
    int var4 = var2.getYSize();
    int var5 = var2.getYSize();
    demo.pathplanning.model.CartesianGraph var8 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var9 = var8.getXSize();
    int var10 = var8.getYSize();
    int var11 = var8.getYSize();
    demo.pathplanning.model.CartesianGraph var12 = new demo.pathplanning.model.CartesianGraph(var5, var11);
    demo.pathplanning.algorithms.AStar var13 = new demo.pathplanning.algorithms.AStar(var12);
    demo.pathplanning.algorithms.PathPlanningContext var14 = new demo.pathplanning.algorithms.PathPlanningContext((demo.pathplanning.algorithms.PathPlanner)var13);
    demo.pathplanning.model.CartesianGraph var17 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var20 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var21 = new demo.pathplanning.model.Location(1, 1);
    boolean var23 = var21.equals((java.lang.Object)0L);
    int var24 = var21.getX();
    int var25 = var21.getX();
    demo.pathplanning.model.CartesianGraph var28 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.algorithms.AStar var29 = new demo.pathplanning.algorithms.AStar(var28);
    demo.pathplanning.model.CartesianGraph var30 = var29.getGraph();
    demo.pathplanning.model.CartesianGraph var31 = var29.getGraph();
    demo.pathplanning.algorithms.PathPlanningContext var32 = new demo.pathplanning.algorithms.PathPlanningContext((demo.pathplanning.algorithms.PathPlanner)var29);
    demo.pathplanning.model.CartesianGraph var33 = var29.getGraph();
    int var34 = var33.getYSize();
    demo.pathplanning.model.CartesianGraph var37 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var40 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var41 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var44 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var47 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var48 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.Node var49 = new demo.pathplanning.model.Node(var33, var41, 1);
    int var50 = var49.getCost();
    demo.pathplanning.model.CartesianGraph var53 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var54 = var53.getXSize();
    int var55 = var53.getYSize();
    int var56 = var53.getYSize();
    demo.pathplanning.model.CartesianGraph var59 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var60 = new demo.pathplanning.model.Location(var56, 1);
    demo.pathplanning.model.CartesianGraph var61 = new demo.pathplanning.model.CartesianGraph(var50, 1);
    demo.pathplanning.model.CartesianGraph var64 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var67 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var68 = new demo.pathplanning.model.Location(1, 1);
    boolean var70 = var68.equals((java.lang.Object)0L);
    demo.pathplanning.model.Node var71 = var61.getNode(var68);
    java.util.List var72 = var14.getPath(var21, var68);

  }

  public void test47() throws Throwable {

    demo.pathplanning.model.CartesianGraph var2 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var3 = var2.getXSize();
    int var4 = var2.getYSize();
    int var5 = var2.getYSize();
    demo.pathplanning.model.CartesianGraph var8 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var9 = var8.getXSize();
    int var10 = var8.getYSize();
    int var11 = var8.getYSize();
    demo.pathplanning.model.CartesianGraph var12 = new demo.pathplanning.model.CartesianGraph(var5, var11);
    demo.pathplanning.algorithms.AStar var13 = new demo.pathplanning.algorithms.AStar(var12);
    demo.pathplanning.model.CartesianGraph var16 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var17 = var16.getXSize();
    int var18 = var16.getYSize();
    int var19 = var16.getYSize();
    demo.pathplanning.model.CartesianGraph var22 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var23 = var22.getXSize();
    int var24 = var22.getYSize();
    int var25 = var22.getYSize();
    demo.pathplanning.model.CartesianGraph var26 = new demo.pathplanning.model.CartesianGraph(var19, var25);
    demo.pathplanning.model.CartesianGraph var29 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var32 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var33 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var34 = new demo.pathplanning.model.CartesianGraph(var19, 1);
    java.lang.String var35 = var34.toString();
    demo.pathplanning.model.CartesianGraph var38 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var41 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var42 = new demo.pathplanning.model.Location(1, 1);
    boolean var44 = var42.equals((java.lang.Object)0L);
    demo.pathplanning.model.Node var45 = var34.getNode(var42);
    int var46 = var42.getY();
    demo.pathplanning.model.CartesianGraph var49 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var50 = var49.getXSize();
    demo.pathplanning.algorithms.AStar var51 = new demo.pathplanning.algorithms.AStar(var49);
    demo.pathplanning.model.CartesianGraph var54 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var57 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var58 = new demo.pathplanning.model.Location(1, 1);
    boolean var60 = var58.equals((java.lang.Object)0L);
    demo.pathplanning.model.Node var61 = var49.getNode(var58);
    int var62 = var49.getYSize();
    demo.pathplanning.model.CartesianGraph var65 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var66 = var65.getXSize();
    int var67 = var65.getYSize();
    int var68 = var65.getYSize();
    demo.pathplanning.model.CartesianGraph var71 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var72 = var71.getXSize();
    int var73 = var71.getYSize();
    int var74 = var71.getYSize();
    demo.pathplanning.model.CartesianGraph var75 = new demo.pathplanning.model.CartesianGraph(var68, var74);
    demo.pathplanning.model.CartesianGraph var78 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var81 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var82 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var83 = new demo.pathplanning.model.CartesianGraph(var68, 1);
    int var84 = var83.getXSize();
    demo.pathplanning.model.CartesianGraph var87 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var88 = var87.getXSize();
    int var89 = var87.getYSize();
    int var90 = var87.getYSize();
    demo.pathplanning.model.CartesianGraph var91 = new demo.pathplanning.model.CartesianGraph(var84, var90);
    demo.pathplanning.model.CartesianGraph var92 = new demo.pathplanning.model.CartesianGraph(var62, var84);
    demo.pathplanning.model.Node var93 = new demo.pathplanning.model.Node(var12, var42, var84);
    demo.pathplanning.model.Location var94 = var93.getLocation();
    java.lang.String var95 = var94.toString();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var3 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var4 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var5 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var9 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var11 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var17 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var18 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var19 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var23 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var24 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var25 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var35 + "' != '" + "0,\n"+ "'", var35.equals("0,\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var44 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var45);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var46 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var50 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var60 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var61);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var62 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var66 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var67 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var68 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var72 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var73 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var74 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var84 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var88 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var89 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var90 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var94);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var95 + "' != '" + "(1,1)"+ "'", var95.equals("(1,1)"));

  }

  public void test48() throws Throwable {

    demo.pathplanning.model.CartesianGraph var2 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var3 = var2.getXSize();
    demo.pathplanning.algorithms.AStar var4 = new demo.pathplanning.algorithms.AStar(var2);
    demo.pathplanning.model.CartesianGraph var5 = var4.getGraph();
    demo.pathplanning.model.CartesianGraph var8 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var11 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var12 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var15 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var16 = var15.getXSize();
    int var17 = var15.getYSize();
    int var18 = var15.getYSize();
    demo.pathplanning.model.CartesianGraph var21 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var22 = var21.getXSize();
    int var23 = var21.getYSize();
    int var24 = var21.getYSize();
    demo.pathplanning.model.CartesianGraph var25 = new demo.pathplanning.model.CartesianGraph(var18, var24);
    demo.pathplanning.model.CartesianGraph var26 = new demo.pathplanning.model.CartesianGraph(1, var18);
    int var27 = var26.getYSize();
    demo.pathplanning.model.CartesianGraph var30 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var31 = var30.getXSize();
    int var32 = var30.getYSize();
    int var33 = var30.getYSize();
    demo.pathplanning.model.CartesianGraph var36 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var37 = new demo.pathplanning.model.Location(var33, 1);
    java.lang.String var38 = var37.toString();
    demo.pathplanning.model.Node var39 = var26.getNode(var37);
    int var40 = var37.getY();
    java.lang.String var41 = var37.toString();
    demo.pathplanning.model.CartesianGraph var44 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var45 = var44.getXSize();
    demo.pathplanning.algorithms.AStar var46 = new demo.pathplanning.algorithms.AStar(var44);
    demo.pathplanning.model.CartesianGraph var47 = var46.getGraph();
    boolean var48 = var37.equals((java.lang.Object)var46);
    int var49 = var37.getX();
    demo.pathplanning.model.CartesianGraph var52 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var53 = var52.getXSize();
    demo.pathplanning.algorithms.AStar var54 = new demo.pathplanning.algorithms.AStar(var52);
    demo.pathplanning.model.CartesianGraph var57 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var60 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var61 = new demo.pathplanning.model.Location(1, 1);
    boolean var63 = var61.equals((java.lang.Object)0L);
    demo.pathplanning.model.Node var64 = var52.getNode(var61);
    int var65 = var61.getY();
    java.util.List var66 = var4.getPath(var37, var61);

  }

  public void test49() throws Throwable {

    demo.pathplanning.model.CartesianGraph var2 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var3 = var2.getXSize();
    demo.pathplanning.algorithms.AStar var4 = new demo.pathplanning.algorithms.AStar(var2);
    demo.pathplanning.model.CartesianGraph var5 = var4.getGraph();
    demo.pathplanning.model.CartesianGraph var8 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var9 = var8.getXSize();
    int var10 = var8.getYSize();
    int var11 = var8.getYSize();
    demo.pathplanning.model.CartesianGraph var14 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var15 = new demo.pathplanning.model.Location(var11, 1);
    java.lang.String var16 = var15.toString();
    demo.pathplanning.model.CartesianGraph var19 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var22 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var23 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var26 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var27 = var26.getXSize();
    int var28 = var26.getYSize();
    int var29 = var26.getYSize();
    demo.pathplanning.model.CartesianGraph var32 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var33 = var32.getXSize();
    int var34 = var32.getYSize();
    int var35 = var32.getYSize();
    demo.pathplanning.model.CartesianGraph var36 = new demo.pathplanning.model.CartesianGraph(var29, var35);
    demo.pathplanning.model.CartesianGraph var37 = new demo.pathplanning.model.CartesianGraph(1, var29);
    int var38 = var37.getYSize();
    demo.pathplanning.model.CartesianGraph var41 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var42 = var41.getXSize();
    int var43 = var41.getYSize();
    int var44 = var41.getYSize();
    demo.pathplanning.model.CartesianGraph var47 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var48 = new demo.pathplanning.model.Location(var44, 1);
    java.lang.String var49 = var48.toString();
    demo.pathplanning.model.Node var50 = var37.getNode(var48);
    java.util.List var51 = var4.getPath(var15, var48);

  }

  public void test50() throws Throwable {

    demo.pathplanning.model.CartesianGraph var2 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var3 = var2.getXSize();
    int var4 = var2.getYSize();
    int var5 = var2.getYSize();
    demo.pathplanning.model.CartesianGraph var8 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var9 = var8.getXSize();
    int var10 = var8.getYSize();
    int var11 = var8.getYSize();
    demo.pathplanning.model.CartesianGraph var12 = new demo.pathplanning.model.CartesianGraph(var5, var11);
    demo.pathplanning.algorithms.AStar var13 = new demo.pathplanning.algorithms.AStar(var12);
    demo.pathplanning.algorithms.PathPlanningContext var14 = new demo.pathplanning.algorithms.PathPlanningContext((demo.pathplanning.algorithms.PathPlanner)var13);
    demo.pathplanning.model.CartesianGraph var17 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var20 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var21 = new demo.pathplanning.model.Location(1, 1);
    boolean var23 = var21.equals((java.lang.Object)0L);
    int var24 = var21.getX();
    int var25 = var21.getX();
    int var26 = var21.getY();
    demo.pathplanning.model.CartesianGraph var29 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.algorithms.AStar var30 = new demo.pathplanning.algorithms.AStar(var29);
    demo.pathplanning.model.CartesianGraph var31 = var30.getGraph();
    demo.pathplanning.model.CartesianGraph var32 = var30.getGraph();
    demo.pathplanning.algorithms.PathPlanningContext var33 = new demo.pathplanning.algorithms.PathPlanningContext((demo.pathplanning.algorithms.PathPlanner)var30);
    demo.pathplanning.model.CartesianGraph var34 = var30.getGraph();
    int var35 = var34.getYSize();
    demo.pathplanning.model.CartesianGraph var38 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var41 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var42 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var45 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var48 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var49 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.Node var50 = new demo.pathplanning.model.Node(var34, var42, 1);
    java.util.Collection var51 = var50.getNeighbors();
    int var52 = var50.getCost();
    java.lang.String var53 = var50.toString();
    demo.pathplanning.model.CartesianGraph var56 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.algorithms.AStar var57 = new demo.pathplanning.algorithms.AStar(var56);
    demo.pathplanning.model.CartesianGraph var58 = var57.getGraph();
    demo.pathplanning.model.CartesianGraph var59 = var57.getGraph();
    demo.pathplanning.algorithms.PathPlanningContext var60 = new demo.pathplanning.algorithms.PathPlanningContext((demo.pathplanning.algorithms.PathPlanner)var57);
    demo.pathplanning.model.CartesianGraph var61 = var57.getGraph();
    int var62 = var61.getYSize();
    demo.pathplanning.model.CartesianGraph var65 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var68 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var69 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var72 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var75 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var76 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.Node var77 = new demo.pathplanning.model.Node(var61, var69, 1);
    java.lang.String var78 = var77.toString();
    boolean var79 = var50.equals((java.lang.Object)var77);
    demo.pathplanning.model.Location var80 = var50.getLocation();
    int var81 = var80.getY();
    java.util.List var82 = var14.getPath(var21, var80);

  }

  public void test51() throws Throwable {

    demo.pathplanning.model.CartesianGraph var2 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.algorithms.AStar var3 = new demo.pathplanning.algorithms.AStar(var2);
    demo.pathplanning.model.CartesianGraph var4 = var3.getGraph();
    demo.pathplanning.model.CartesianGraph var5 = var3.getGraph();
    demo.pathplanning.algorithms.PathPlanningContext var6 = new demo.pathplanning.algorithms.PathPlanningContext((demo.pathplanning.algorithms.PathPlanner)var3);
    demo.pathplanning.model.CartesianGraph var7 = var3.getGraph();
    demo.pathplanning.algorithms.PathPlanningContext var8 = new demo.pathplanning.algorithms.PathPlanningContext((demo.pathplanning.algorithms.PathPlanner)var3);
    demo.pathplanning.model.CartesianGraph var11 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var12 = var11.getXSize();
    int var13 = var11.getYSize();
    int var14 = var11.getYSize();
    demo.pathplanning.model.CartesianGraph var17 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var18 = var17.getXSize();
    int var19 = var17.getYSize();
    int var20 = var17.getYSize();
    demo.pathplanning.model.CartesianGraph var21 = new demo.pathplanning.model.CartesianGraph(var14, var20);
    demo.pathplanning.model.CartesianGraph var24 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var27 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var28 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var29 = new demo.pathplanning.model.CartesianGraph(var14, 1);
    java.lang.String var30 = var29.toString();
    demo.pathplanning.model.CartesianGraph var33 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var36 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var37 = new demo.pathplanning.model.Location(1, 1);
    boolean var39 = var37.equals((java.lang.Object)0L);
    demo.pathplanning.model.Node var40 = var29.getNode(var37);
    demo.pathplanning.model.CartesianGraph var43 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var46 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var47 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var50 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var51 = var50.getXSize();
    demo.pathplanning.model.CartesianGraph var54 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var55 = new demo.pathplanning.model.CartesianGraph(var51, 1);
    demo.pathplanning.model.Location var56 = new demo.pathplanning.model.Location(1, 1);
    int var57 = var56.getX();
    java.util.List var58 = var8.getPath(var37, var56);

  }

  public void test52() throws Throwable {

    demo.pathplanning.model.CartesianGraph var2 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var3 = var2.getXSize();
    demo.pathplanning.algorithms.AStar var4 = new demo.pathplanning.algorithms.AStar(var2);
    demo.pathplanning.model.CartesianGraph var7 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var10 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var11 = new demo.pathplanning.model.Location(1, 1);
    boolean var13 = var11.equals((java.lang.Object)0L);
    demo.pathplanning.model.Node var14 = var2.getNode(var11);
    demo.pathplanning.algorithms.AStar var15 = new demo.pathplanning.algorithms.AStar(var2);
    demo.pathplanning.algorithms.PathPlanningContext var16 = new demo.pathplanning.algorithms.PathPlanningContext((demo.pathplanning.algorithms.PathPlanner)var15);
    demo.pathplanning.model.CartesianGraph var19 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var22 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var23 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.Location var25 = new demo.pathplanning.model.Location(1, (-1));
    demo.pathplanning.model.CartesianGraph var28 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var31 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var32 = new demo.pathplanning.model.Location(1, 1);
    int var33 = var32.getX();
    java.lang.String var34 = var32.toString();
    java.util.List var35 = var16.getPath(var25, var32);

  }

  public void test53() throws Throwable {

    demo.pathplanning.model.CartesianGraph var2 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var5 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var6 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var9 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var10 = var9.getXSize();
    int var11 = var9.getYSize();
    int var12 = var9.getYSize();
    demo.pathplanning.model.CartesianGraph var15 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var16 = var15.getXSize();
    int var17 = var15.getYSize();
    int var18 = var15.getYSize();
    demo.pathplanning.model.CartesianGraph var19 = new demo.pathplanning.model.CartesianGraph(var12, var18);
    demo.pathplanning.model.CartesianGraph var20 = new demo.pathplanning.model.CartesianGraph(1, var12);
    int var21 = var20.getYSize();
    demo.pathplanning.model.CartesianGraph var24 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var25 = var24.getXSize();
    int var26 = var24.getYSize();
    int var27 = var24.getYSize();
    demo.pathplanning.model.CartesianGraph var30 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var31 = new demo.pathplanning.model.Location(var27, 1);
    java.lang.String var32 = var31.toString();
    demo.pathplanning.model.Node var33 = var20.getNode(var31);
    demo.pathplanning.algorithms.AStar var34 = new demo.pathplanning.algorithms.AStar(var20);
    int var35 = var20.getXSize();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var11 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var12 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var16 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var17 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var18 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var21 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var25 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var26 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var27 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var32 + "' != '" + "(1,1)"+ "'", var32.equals("(1,1)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var33);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var35 == 1);

  }

  public void test54() throws Throwable {

    demo.pathplanning.model.CartesianGraph var2 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var3 = var2.getXSize();
    int var4 = var2.getYSize();
    int var5 = var2.getYSize();
    demo.pathplanning.model.CartesianGraph var8 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var9 = var8.getXSize();
    int var10 = var8.getYSize();
    int var11 = var8.getYSize();
    demo.pathplanning.model.CartesianGraph var12 = new demo.pathplanning.model.CartesianGraph(var5, var11);
    demo.pathplanning.algorithms.AStar var13 = new demo.pathplanning.algorithms.AStar(var12);
    demo.pathplanning.algorithms.PathPlanningContext var14 = new demo.pathplanning.algorithms.PathPlanningContext((demo.pathplanning.algorithms.PathPlanner)var13);
    demo.pathplanning.model.CartesianGraph var17 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var20 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var21 = new demo.pathplanning.model.Location(1, 1);
    boolean var23 = var21.equals((java.lang.Object)0L);
    int var24 = var21.getX();
    int var25 = var21.getX();
    demo.pathplanning.model.CartesianGraph var28 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var29 = var28.getXSize();
    int var30 = var28.getYSize();
    int var31 = var28.getYSize();
    demo.pathplanning.model.CartesianGraph var34 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var35 = var34.getXSize();
    int var36 = var34.getYSize();
    int var37 = var34.getYSize();
    demo.pathplanning.model.CartesianGraph var38 = new demo.pathplanning.model.CartesianGraph(var31, var37);
    demo.pathplanning.model.CartesianGraph var41 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var44 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var45 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var46 = new demo.pathplanning.model.CartesianGraph(var31, 1);
    java.lang.String var47 = var46.toString();
    demo.pathplanning.model.CartesianGraph var50 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var53 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var54 = new demo.pathplanning.model.Location(1, 1);
    boolean var56 = var54.equals((java.lang.Object)0L);
    demo.pathplanning.model.Node var57 = var46.getNode(var54);
    demo.pathplanning.model.CartesianGraph var60 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var63 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var64 = new demo.pathplanning.model.Location(1, 1);
    boolean var66 = var64.equals((java.lang.Object)0L);
    int var67 = var64.getX();
    int var68 = var64.getX();
    demo.pathplanning.model.CartesianGraph var71 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var72 = var71.getXSize();
    demo.pathplanning.model.Node var73 = new demo.pathplanning.model.Node(var46, var64, var72);
    int var74 = var73.getCost();
    java.util.Collection var75 = var73.getNeighbors();
    int var76 = var73.getCost();
    demo.pathplanning.model.Location var77 = var73.getLocation();
    java.util.List var78 = var13.getPath(var21, var77);

  }

  public void test55() throws Throwable {

    demo.pathplanning.model.CartesianGraph var2 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var5 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var6 = new demo.pathplanning.model.Location(1, 1);
    boolean var8 = var6.equals((java.lang.Object)0L);
    int var9 = var6.getX();
    java.lang.String var10 = var6.toString();
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      demo.pathplanning.model.Direction var11 = demo.pathplanning.model.Direction.valueOf(var10);
      fail("Expected exception of type java.lang.IllegalArgumentException");
    } catch (java.lang.IllegalArgumentException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var9 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var10 + "' != '" + "(1,1)"+ "'", var10.equals("(1,1)"));

  }

  public void test56() throws Throwable {

    demo.pathplanning.model.CartesianGraph var2 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var5 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var6 = new demo.pathplanning.model.Location(1, 1);
    boolean var8 = var6.equals((java.lang.Object)0L);
    int var9 = var6.getX();
    int var10 = var6.getX();
    java.lang.String var11 = var6.toString();
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      demo.pathplanning.model.Direction var12 = demo.pathplanning.model.Direction.valueOf(var11);
      fail("Expected exception of type java.lang.IllegalArgumentException");
    } catch (java.lang.IllegalArgumentException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var9 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var11 + "' != '" + "(1,1)"+ "'", var11.equals("(1,1)"));

  }

  public void test57() throws Throwable {

    demo.pathplanning.model.CartesianGraph var2 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var3 = var2.getXSize();
    demo.pathplanning.algorithms.AStar var4 = new demo.pathplanning.algorithms.AStar(var2);
    demo.pathplanning.model.CartesianGraph var7 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var10 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var11 = new demo.pathplanning.model.Location(1, 1);
    boolean var13 = var11.equals((java.lang.Object)0L);
    demo.pathplanning.model.Node var14 = var2.getNode(var11);
    demo.pathplanning.algorithms.AStar var15 = new demo.pathplanning.algorithms.AStar(var2);
    demo.pathplanning.algorithms.PathPlanningContext var16 = new demo.pathplanning.algorithms.PathPlanningContext((demo.pathplanning.algorithms.PathPlanner)var15);
    demo.pathplanning.model.CartesianGraph var19 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var22 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var23 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var26 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var27 = var26.getXSize();
    demo.pathplanning.model.CartesianGraph var30 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var31 = new demo.pathplanning.model.CartesianGraph(var27, 1);
    demo.pathplanning.model.Location var32 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var35 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var36 = var35.getXSize();
    demo.pathplanning.model.CartesianGraph var39 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var40 = new demo.pathplanning.model.CartesianGraph(var36, 1);
    demo.pathplanning.model.CartesianGraph var43 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.algorithms.AStar var44 = new demo.pathplanning.algorithms.AStar(var43);
    demo.pathplanning.model.CartesianGraph var45 = var44.getGraph();
    demo.pathplanning.model.CartesianGraph var46 = var44.getGraph();
    demo.pathplanning.algorithms.PathPlanningContext var47 = new demo.pathplanning.algorithms.PathPlanningContext((demo.pathplanning.algorithms.PathPlanner)var44);
    demo.pathplanning.model.CartesianGraph var48 = var44.getGraph();
    int var49 = var48.getYSize();
    demo.pathplanning.model.CartesianGraph var50 = new demo.pathplanning.model.CartesianGraph(var36, var49);
    demo.pathplanning.model.CartesianGraph var53 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var56 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var57 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var60 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var61 = var60.getXSize();
    demo.pathplanning.model.CartesianGraph var64 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var65 = new demo.pathplanning.model.CartesianGraph(var61, 1);
    demo.pathplanning.model.Location var66 = new demo.pathplanning.model.Location(1, 1);
    int var67 = var66.getX();
    int var68 = var66.getY();
    demo.pathplanning.model.Node var69 = var50.getNode(var66);
    int var70 = var66.getY();
    java.util.List var71 = var15.getPath(var32, var66);

  }

  public void test58() throws Throwable {

    demo.pathplanning.model.CartesianGraph var2 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var3 = var2.getXSize();
    int var4 = var2.getYSize();
    int var5 = var2.getYSize();
    demo.pathplanning.model.CartesianGraph var8 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var9 = var8.getXSize();
    int var10 = var8.getYSize();
    int var11 = var8.getYSize();
    demo.pathplanning.model.CartesianGraph var12 = new demo.pathplanning.model.CartesianGraph(var5, var11);
    demo.pathplanning.model.CartesianGraph var15 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var18 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var19 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var20 = new demo.pathplanning.model.CartesianGraph(var5, 1);
    java.lang.String var21 = var20.toString();
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      demo.pathplanning.model.Direction var22 = demo.pathplanning.model.Direction.valueOf(var21);
      fail("Expected exception of type java.lang.IllegalArgumentException");
    } catch (java.lang.IllegalArgumentException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var3 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var4 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var5 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var9 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var11 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var21 + "' != '" + "0,\n"+ "'", var21.equals("0,\n"));

  }

  public void test59() throws Throwable {

    demo.pathplanning.model.CartesianGraph var2 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.algorithms.AStar var3 = new demo.pathplanning.algorithms.AStar(var2);
    demo.pathplanning.model.CartesianGraph var4 = var3.getGraph();
    demo.pathplanning.model.CartesianGraph var5 = var3.getGraph();
    demo.pathplanning.algorithms.PathPlanningContext var6 = new demo.pathplanning.algorithms.PathPlanningContext((demo.pathplanning.algorithms.PathPlanner)var3);
    demo.pathplanning.model.CartesianGraph var9 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var10 = var9.getXSize();
    int var11 = var9.getYSize();
    int var12 = var9.getYSize();
    demo.pathplanning.model.CartesianGraph var15 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var16 = var15.getXSize();
    int var17 = var15.getYSize();
    int var18 = var15.getYSize();
    demo.pathplanning.model.CartesianGraph var19 = new demo.pathplanning.model.CartesianGraph(var12, var18);
    demo.pathplanning.model.CartesianGraph var22 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var25 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var26 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var27 = new demo.pathplanning.model.CartesianGraph(var12, 1);
    java.lang.String var28 = var27.toString();
    demo.pathplanning.model.CartesianGraph var31 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var34 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var35 = new demo.pathplanning.model.Location(1, 1);
    boolean var37 = var35.equals((java.lang.Object)0L);
    demo.pathplanning.model.Node var38 = var27.getNode(var35);
    demo.pathplanning.model.CartesianGraph var41 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var44 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var45 = new demo.pathplanning.model.Location(1, 1);
    boolean var47 = var45.equals((java.lang.Object)0L);
    int var48 = var45.getX();
    int var49 = var45.getX();
    demo.pathplanning.model.CartesianGraph var52 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var53 = var52.getXSize();
    demo.pathplanning.model.Node var54 = new demo.pathplanning.model.Node(var27, var45, var53);
    int var55 = var54.getCost();
    java.util.Collection var56 = var54.getNeighbors();
    demo.pathplanning.model.Location var57 = var54.getLocation();
    demo.pathplanning.model.CartesianGraph var60 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var63 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var64 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var67 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var68 = var67.getXSize();
    demo.pathplanning.model.CartesianGraph var71 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var72 = new demo.pathplanning.model.CartesianGraph(var68, 1);
    demo.pathplanning.model.Location var73 = new demo.pathplanning.model.Location(1, 1);
    int var74 = var73.getX();
    int var75 = var73.getY();
    demo.pathplanning.model.CartesianGraph var78 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.algorithms.AStar var79 = new demo.pathplanning.algorithms.AStar(var78);
    boolean var80 = var73.equals((java.lang.Object)var79);
    java.util.List var81 = var3.getPath(var57, var73);

  }

  public void test60() throws Throwable {

    demo.pathplanning.model.CartesianGraph var2 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.algorithms.AStar var3 = new demo.pathplanning.algorithms.AStar(var2);
    demo.pathplanning.model.CartesianGraph var4 = var3.getGraph();
    demo.pathplanning.model.CartesianGraph var5 = var3.getGraph();
    demo.pathplanning.algorithms.PathPlanningContext var6 = new demo.pathplanning.algorithms.PathPlanningContext((demo.pathplanning.algorithms.PathPlanner)var3);
    demo.pathplanning.model.CartesianGraph var9 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.algorithms.AStar var10 = new demo.pathplanning.algorithms.AStar(var9);
    demo.pathplanning.model.CartesianGraph var11 = var10.getGraph();
    demo.pathplanning.model.CartesianGraph var12 = var10.getGraph();
    demo.pathplanning.algorithms.PathPlanningContext var13 = new demo.pathplanning.algorithms.PathPlanningContext((demo.pathplanning.algorithms.PathPlanner)var10);
    demo.pathplanning.model.CartesianGraph var14 = var10.getGraph();
    int var15 = var14.getYSize();
    demo.pathplanning.model.CartesianGraph var18 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var21 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var22 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var25 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var28 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var29 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.Node var30 = new demo.pathplanning.model.Node(var14, var22, 1);
    java.util.Collection var31 = var30.getNeighbors();
    int var32 = var30.getCost();
    java.lang.String var33 = var30.toString();
    java.lang.String var34 = var30.toString();
    java.util.Collection var35 = var30.getNeighbors();
    demo.pathplanning.model.Location var36 = var30.getLocation();
    demo.pathplanning.model.CartesianGraph var39 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var42 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var43 = new demo.pathplanning.model.Location(1, 1);
    boolean var45 = var43.equals((java.lang.Object)0L);
    int var46 = var43.getX();
    java.lang.String var47 = var43.toString();
    java.util.List var48 = var3.getPath(var36, var43);

  }

  public void test61() throws Throwable {

    demo.pathplanning.model.CartesianGraph var2 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var3 = var2.getXSize();
    int var4 = var2.getYSize();
    demo.pathplanning.model.CartesianGraph var7 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var8 = var7.getXSize();
    int var9 = var7.getYSize();
    demo.pathplanning.model.CartesianGraph var12 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.algorithms.AStar var13 = new demo.pathplanning.algorithms.AStar(var12);
    java.lang.String var14 = var12.toString();
    demo.pathplanning.model.CartesianGraph var17 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var20 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var21 = new demo.pathplanning.model.Location(1, 1);
    boolean var23 = var21.equals((java.lang.Object)0L);
    demo.pathplanning.model.Node var24 = var12.getNode(var21);
    demo.pathplanning.model.CartesianGraph var27 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var30 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var31 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var34 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var35 = var34.getXSize();
    demo.pathplanning.model.CartesianGraph var38 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var39 = new demo.pathplanning.model.CartesianGraph(var35, 1);
    demo.pathplanning.model.Location var40 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.Node var41 = new demo.pathplanning.model.Node(var7, var21, 1);
    demo.pathplanning.model.CartesianGraph var42 = new demo.pathplanning.model.CartesianGraph(var4, 1);
    demo.pathplanning.model.CartesianGraph var45 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.algorithms.AStar var46 = new demo.pathplanning.algorithms.AStar(var45);
    demo.pathplanning.model.CartesianGraph var47 = var46.getGraph();
    demo.pathplanning.model.CartesianGraph var48 = var46.getGraph();
    demo.pathplanning.algorithms.PathPlanningContext var49 = new demo.pathplanning.algorithms.PathPlanningContext((demo.pathplanning.algorithms.PathPlanner)var46);
    demo.pathplanning.model.CartesianGraph var50 = var46.getGraph();
    int var51 = var50.getYSize();
    demo.pathplanning.model.CartesianGraph var54 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var57 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var58 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var61 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var64 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var65 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.Node var66 = new demo.pathplanning.model.Node(var50, var58, 1);
    java.util.Collection var67 = var66.getNeighbors();
    int var68 = var66.getCost();
    demo.pathplanning.model.Location var69 = new demo.pathplanning.model.Location(1, var68);
    java.lang.String var70 = var69.toString();
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      demo.pathplanning.model.Direction var71 = demo.pathplanning.model.Direction.valueOf(var70);
      fail("Expected exception of type java.lang.IllegalArgumentException");
    } catch (java.lang.IllegalArgumentException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var3 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var4 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var8 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var9 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var14 + "' != '" + "0,\n"+ "'", var14.equals("0,\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var23 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var24);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var35 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var47);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var48);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var50);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var51 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var67);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var68 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var70 + "' != '" + "(1,1)"+ "'", var70.equals("(1,1)"));

  }

  public void test62() throws Throwable {

    demo.pathplanning.model.CartesianGraph var2 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.algorithms.AStar var3 = new demo.pathplanning.algorithms.AStar(var2);
    demo.pathplanning.model.CartesianGraph var4 = var3.getGraph();
    demo.pathplanning.model.CartesianGraph var5 = var3.getGraph();
    demo.pathplanning.algorithms.PathPlanningContext var6 = new demo.pathplanning.algorithms.PathPlanningContext((demo.pathplanning.algorithms.PathPlanner)var3);
    demo.pathplanning.model.CartesianGraph var7 = var3.getGraph();
    int var8 = var7.getYSize();
    demo.pathplanning.model.CartesianGraph var11 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var14 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var15 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var18 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var21 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var22 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.Node var23 = new demo.pathplanning.model.Node(var7, var15, 1);
    int var24 = var23.getCost();
    demo.pathplanning.model.CartesianGraph var27 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var28 = var27.getXSize();
    int var29 = var27.getYSize();
    int var30 = var27.getYSize();
    demo.pathplanning.model.CartesianGraph var33 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var34 = new demo.pathplanning.model.Location(var30, 1);
    demo.pathplanning.model.CartesianGraph var35 = new demo.pathplanning.model.CartesianGraph(var24, 1);
    demo.pathplanning.model.CartesianGraph var38 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var41 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var42 = new demo.pathplanning.model.Location(1, 1);
    boolean var44 = var42.equals((java.lang.Object)0L);
    demo.pathplanning.model.Node var45 = var35.getNode(var42);
    demo.pathplanning.model.CartesianGraph var48 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var51 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var52 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var55 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var56 = var55.getXSize();
    int var57 = var55.getYSize();
    int var58 = var55.getYSize();
    demo.pathplanning.model.CartesianGraph var61 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var62 = var61.getXSize();
    int var63 = var61.getYSize();
    int var64 = var61.getYSize();
    demo.pathplanning.model.CartesianGraph var65 = new demo.pathplanning.model.CartesianGraph(var58, var64);
    demo.pathplanning.model.CartesianGraph var66 = new demo.pathplanning.model.CartesianGraph(1, var58);
    int var67 = var66.getYSize();
    demo.pathplanning.model.CartesianGraph var70 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var71 = var70.getXSize();
    int var72 = var70.getYSize();
    int var73 = var70.getYSize();
    demo.pathplanning.model.CartesianGraph var76 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var77 = new demo.pathplanning.model.Location(var73, 1);
    java.lang.String var78 = var77.toString();
    demo.pathplanning.model.Node var79 = var66.getNode(var77);
    int var80 = var77.getY();
    java.lang.String var81 = var77.toString();
    demo.pathplanning.model.CartesianGraph var84 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var85 = var84.getXSize();
    demo.pathplanning.algorithms.AStar var86 = new demo.pathplanning.algorithms.AStar(var84);
    demo.pathplanning.model.CartesianGraph var87 = var86.getGraph();
    boolean var88 = var77.equals((java.lang.Object)var86);
    int var89 = var77.getX();
    boolean var90 = var42.equals((java.lang.Object)var89);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var8 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var24 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var28 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var29 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var30 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var44 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var45);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var56 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var57 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var58 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var62 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var63 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var64 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var67 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var71 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var72 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var73 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var78 + "' != '" + "(1,1)"+ "'", var78.equals("(1,1)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var79);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var80 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var81 + "' != '" + "(1,1)"+ "'", var81.equals("(1,1)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var85 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var87);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var88 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var89 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var90 == false);

  }

  public void test63() throws Throwable {

    demo.pathplanning.model.CartesianGraph var2 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var5 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var6 = new demo.pathplanning.model.Location(1, 1);
    int var7 = var6.getX();
    demo.pathplanning.model.CartesianGraph var10 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var13 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var14 = new demo.pathplanning.model.Location(1, 1);
    boolean var16 = var14.equals((java.lang.Object)0L);
    int var17 = var14.getX();
    int var18 = var14.getX();
    int var19 = var14.getY();
    demo.pathplanning.model.CartesianGraph var22 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var23 = var22.getXSize();
    demo.pathplanning.algorithms.AStar var24 = new demo.pathplanning.algorithms.AStar(var22);
    demo.pathplanning.model.CartesianGraph var27 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var30 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var31 = new demo.pathplanning.model.Location(1, 1);
    boolean var33 = var31.equals((java.lang.Object)0L);
    demo.pathplanning.model.Node var34 = var22.getNode(var31);
    boolean var35 = var14.equals((java.lang.Object)var31);
    int var36 = var31.getY();
    boolean var37 = var6.equals((java.lang.Object)var31);
    java.lang.String var38 = var6.toString();
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      demo.pathplanning.model.Direction var39 = demo.pathplanning.model.Direction.valueOf(var38);
      fail("Expected exception of type java.lang.IllegalArgumentException");
    } catch (java.lang.IllegalArgumentException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var7 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var16 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var17 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var18 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var19 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var23 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var33 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var34);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var35 == true);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var36 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var37 == true);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var38 + "' != '" + "(1,1)"+ "'", var38.equals("(1,1)"));

  }

  public void test64() throws Throwable {

    demo.pathplanning.model.CartesianGraph var2 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var3 = var2.getXSize();
    demo.pathplanning.algorithms.AStar var4 = new demo.pathplanning.algorithms.AStar(var2);
    demo.pathplanning.model.CartesianGraph var7 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var10 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var11 = new demo.pathplanning.model.Location(1, 1);
    boolean var13 = var11.equals((java.lang.Object)0L);
    demo.pathplanning.model.Node var14 = var2.getNode(var11);
    demo.pathplanning.algorithms.AStar var15 = new demo.pathplanning.algorithms.AStar(var2);
    demo.pathplanning.algorithms.PathPlanningContext var16 = new demo.pathplanning.algorithms.PathPlanningContext((demo.pathplanning.algorithms.PathPlanner)var15);
    demo.pathplanning.model.CartesianGraph var17 = var15.getGraph();
    int var18 = var17.getXSize();
    demo.pathplanning.model.CartesianGraph var21 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var22 = var21.getXSize();
    demo.pathplanning.algorithms.AStar var23 = new demo.pathplanning.algorithms.AStar(var21);
    demo.pathplanning.model.CartesianGraph var26 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var29 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var30 = new demo.pathplanning.model.Location(1, 1);
    boolean var32 = var30.equals((java.lang.Object)0L);
    demo.pathplanning.model.Node var33 = var21.getNode(var30);
    int var34 = var21.getYSize();
    demo.pathplanning.model.CartesianGraph var37 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var38 = var37.getXSize();
    int var39 = var37.getYSize();
    int var40 = var37.getYSize();
    demo.pathplanning.model.CartesianGraph var43 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var44 = var43.getXSize();
    int var45 = var43.getYSize();
    int var46 = var43.getYSize();
    demo.pathplanning.model.CartesianGraph var47 = new demo.pathplanning.model.CartesianGraph(var40, var46);
    demo.pathplanning.model.CartesianGraph var50 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var53 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var54 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var55 = new demo.pathplanning.model.CartesianGraph(var40, 1);
    int var56 = var55.getXSize();
    demo.pathplanning.model.CartesianGraph var59 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var60 = var59.getXSize();
    int var61 = var59.getYSize();
    int var62 = var59.getYSize();
    demo.pathplanning.model.CartesianGraph var63 = new demo.pathplanning.model.CartesianGraph(var56, var62);
    demo.pathplanning.model.CartesianGraph var64 = new demo.pathplanning.model.CartesianGraph(var34, var56);
    demo.pathplanning.model.CartesianGraph var67 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var68 = var67.getXSize();
    int var69 = var67.getYSize();
    int var70 = var67.getYSize();
    demo.pathplanning.model.CartesianGraph var73 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var74 = var73.getXSize();
    int var75 = var73.getYSize();
    int var76 = var73.getYSize();
    demo.pathplanning.model.CartesianGraph var77 = new demo.pathplanning.model.CartesianGraph(var70, var76);
    demo.pathplanning.model.CartesianGraph var80 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var83 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var84 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var85 = new demo.pathplanning.model.CartesianGraph(var70, 1);
    int var86 = var85.getXSize();
    demo.pathplanning.model.CartesianGraph var89 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var90 = var89.getXSize();
    int var91 = var89.getYSize();
    int var92 = var89.getYSize();
    demo.pathplanning.model.CartesianGraph var93 = new demo.pathplanning.model.CartesianGraph(var86, var92);
    demo.pathplanning.model.CartesianGraph var94 = new demo.pathplanning.model.CartesianGraph(var34, var86);
    demo.pathplanning.model.CartesianGraph var95 = new demo.pathplanning.model.CartesianGraph(var18, var34);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var3 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var13 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var14);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var17);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var18 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var22 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var32 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var33);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var34 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var38 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var39 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var40 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var44 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var45 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var46 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var56 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var60 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var61 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var62 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var68 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var69 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var70 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var74 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var75 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var76 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var86 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var90 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var91 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var92 == 1);

  }

  public void test65() throws Throwable {

    demo.pathplanning.model.CartesianGraph var2 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.algorithms.AStar var3 = new demo.pathplanning.algorithms.AStar(var2);
    demo.pathplanning.model.CartesianGraph var4 = var3.getGraph();
    demo.pathplanning.model.CartesianGraph var5 = var3.getGraph();
    demo.pathplanning.algorithms.PathPlanningContext var6 = new demo.pathplanning.algorithms.PathPlanningContext((demo.pathplanning.algorithms.PathPlanner)var3);
    demo.pathplanning.model.CartesianGraph var7 = var3.getGraph();
    int var8 = var7.getYSize();
    demo.pathplanning.model.CartesianGraph var11 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var14 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var15 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var18 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var21 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var22 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.Node var23 = new demo.pathplanning.model.Node(var7, var15, 1);
    java.util.Collection var24 = var23.getNeighbors();
    int var25 = var23.getCost();
    int var26 = var23.getCost();
    demo.pathplanning.model.CartesianGraph var29 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var30 = var29.getXSize();
    int var31 = var29.getYSize();
    int var32 = var29.getYSize();
    demo.pathplanning.model.CartesianGraph var35 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var36 = var35.getXSize();
    int var37 = var35.getYSize();
    int var38 = var35.getYSize();
    demo.pathplanning.model.CartesianGraph var39 = new demo.pathplanning.model.CartesianGraph(var32, var38);
    demo.pathplanning.model.CartesianGraph var42 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var45 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var46 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var47 = new demo.pathplanning.model.CartesianGraph(var32, 1);
    java.lang.String var48 = var47.toString();
    demo.pathplanning.model.CartesianGraph var51 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var54 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var55 = new demo.pathplanning.model.Location(1, 1);
    boolean var57 = var55.equals((java.lang.Object)0L);
    demo.pathplanning.model.Node var58 = var47.getNode(var55);
    demo.pathplanning.model.CartesianGraph var61 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var64 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var65 = new demo.pathplanning.model.Location(1, 1);
    boolean var67 = var65.equals((java.lang.Object)0L);
    int var68 = var65.getX();
    int var69 = var65.getX();
    demo.pathplanning.model.CartesianGraph var72 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var73 = var72.getXSize();
    demo.pathplanning.model.Node var74 = new demo.pathplanning.model.Node(var47, var65, var73);
    boolean var75 = var23.equals((java.lang.Object)var73);
    java.lang.String var76 = var23.toString();
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      demo.pathplanning.model.Direction var77 = demo.pathplanning.model.Direction.valueOf(var76);
      fail("Expected exception of type java.lang.IllegalArgumentException");
    } catch (java.lang.IllegalArgumentException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var8 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var24);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var25 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var26 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var30 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var31 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var32 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var36 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var37 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var38 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var48 + "' != '" + "0,\n"+ "'", var48.equals("0,\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var57 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var58);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var67 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var68 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var69 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var73 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var75 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var76 + "' != '" + "(1,1)=1"+ "'", var76.equals("(1,1)=1"));

  }

  public void test66() throws Throwable {

    demo.pathplanning.model.CartesianGraph var2 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var3 = var2.getXSize();
    int var4 = var2.getYSize();
    int var5 = var2.getYSize();
    demo.pathplanning.model.CartesianGraph var8 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var9 = var8.getXSize();
    int var10 = var8.getYSize();
    int var11 = var8.getYSize();
    demo.pathplanning.model.CartesianGraph var12 = new demo.pathplanning.model.CartesianGraph(var5, var11);
    demo.pathplanning.model.CartesianGraph var15 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var18 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var19 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var20 = new demo.pathplanning.model.CartesianGraph(var5, 1);
    java.lang.String var21 = var20.toString();
    demo.pathplanning.model.CartesianGraph var24 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var27 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var28 = new demo.pathplanning.model.Location(1, 1);
    boolean var30 = var28.equals((java.lang.Object)0L);
    demo.pathplanning.model.Node var31 = var20.getNode(var28);
    demo.pathplanning.model.CartesianGraph var34 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var37 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var38 = new demo.pathplanning.model.Location(1, 1);
    boolean var40 = var38.equals((java.lang.Object)0L);
    int var41 = var38.getX();
    int var42 = var38.getX();
    demo.pathplanning.model.CartesianGraph var45 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var46 = var45.getXSize();
    demo.pathplanning.model.Node var47 = new demo.pathplanning.model.Node(var20, var38, var46);
    int var48 = var47.getCost();
    demo.pathplanning.model.CartesianGraph var51 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var52 = var51.getXSize();
    int var53 = var51.getYSize();
    int var54 = var51.getYSize();
    demo.pathplanning.model.CartesianGraph var57 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var58 = new demo.pathplanning.model.Location(var54, 1);
    java.lang.String var59 = var58.toString();
    boolean var60 = var47.equals((java.lang.Object)var58);
    java.lang.String var61 = var47.toString();
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      demo.pathplanning.model.Direction var62 = demo.pathplanning.model.Direction.valueOf(var61);
      fail("Expected exception of type java.lang.IllegalArgumentException");
    } catch (java.lang.IllegalArgumentException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var3 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var4 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var5 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var9 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var11 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var21 + "' != '" + "0,\n"+ "'", var21.equals("0,\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var30 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var31);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var40 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var41 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var42 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var46 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var48 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var52 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var53 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var54 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var59 + "' != '" + "(1,1)"+ "'", var59.equals("(1,1)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var60 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var61 + "' != '" + "(1,1)=1"+ "'", var61.equals("(1,1)=1"));

  }

  public void test67() throws Throwable {

    demo.pathplanning.model.CartesianGraph var2 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.algorithms.AStar var3 = new demo.pathplanning.algorithms.AStar(var2);
    demo.pathplanning.model.CartesianGraph var4 = var3.getGraph();
    demo.pathplanning.model.CartesianGraph var5 = var3.getGraph();
    demo.pathplanning.model.CartesianGraph var6 = var3.getGraph();
    demo.pathplanning.algorithms.PathPlanningContext var7 = new demo.pathplanning.algorithms.PathPlanningContext((demo.pathplanning.algorithms.PathPlanner)var3);
    demo.pathplanning.algorithms.PathPlanningContext var8 = new demo.pathplanning.algorithms.PathPlanningContext((demo.pathplanning.algorithms.PathPlanner)var3);
    demo.pathplanning.model.CartesianGraph var11 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var12 = var11.getXSize();
    int var13 = var11.getYSize();
    demo.pathplanning.model.CartesianGraph var16 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.algorithms.AStar var17 = new demo.pathplanning.algorithms.AStar(var16);
    java.lang.String var18 = var16.toString();
    demo.pathplanning.model.CartesianGraph var21 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var24 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var25 = new demo.pathplanning.model.Location(1, 1);
    boolean var27 = var25.equals((java.lang.Object)0L);
    demo.pathplanning.model.Node var28 = var16.getNode(var25);
    demo.pathplanning.model.CartesianGraph var31 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var34 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var35 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var38 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var39 = var38.getXSize();
    demo.pathplanning.model.CartesianGraph var42 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var43 = new demo.pathplanning.model.CartesianGraph(var39, 1);
    demo.pathplanning.model.Location var44 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.Node var45 = new demo.pathplanning.model.Node(var11, var25, 1);
    int var46 = var25.getX();
    demo.pathplanning.model.CartesianGraph var49 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var50 = var49.getXSize();
    demo.pathplanning.model.CartesianGraph var53 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var54 = new demo.pathplanning.model.CartesianGraph(var50, 1);
    demo.pathplanning.model.CartesianGraph var57 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.algorithms.AStar var58 = new demo.pathplanning.algorithms.AStar(var57);
    demo.pathplanning.model.CartesianGraph var59 = var58.getGraph();
    demo.pathplanning.model.CartesianGraph var60 = var58.getGraph();
    demo.pathplanning.algorithms.PathPlanningContext var61 = new demo.pathplanning.algorithms.PathPlanningContext((demo.pathplanning.algorithms.PathPlanner)var58);
    demo.pathplanning.model.CartesianGraph var62 = var58.getGraph();
    int var63 = var62.getYSize();
    demo.pathplanning.model.CartesianGraph var64 = new demo.pathplanning.model.CartesianGraph(var50, var63);
    demo.pathplanning.model.CartesianGraph var67 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var70 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var71 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var74 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var75 = var74.getXSize();
    demo.pathplanning.model.CartesianGraph var78 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var79 = new demo.pathplanning.model.CartesianGraph(var75, 1);
    demo.pathplanning.model.Location var80 = new demo.pathplanning.model.Location(1, 1);
    int var81 = var80.getX();
    int var82 = var80.getY();
    demo.pathplanning.model.Node var83 = var64.getNode(var80);
    int var84 = var80.getY();
    java.util.List var85 = var8.getPath(var25, var80);

  }

  public void test68() throws Throwable {

    demo.pathplanning.model.CartesianGraph var2 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var3 = var2.getXSize();
    int var4 = var2.getYSize();
    int var5 = var2.getYSize();
    demo.pathplanning.model.CartesianGraph var8 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var9 = var8.getXSize();
    int var10 = var8.getYSize();
    int var11 = var8.getYSize();
    demo.pathplanning.model.CartesianGraph var12 = new demo.pathplanning.model.CartesianGraph(var5, var11);
    int var13 = var12.getXSize();
    demo.pathplanning.model.CartesianGraph var16 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.algorithms.AStar var17 = new demo.pathplanning.algorithms.AStar(var16);
    java.lang.String var18 = var16.toString();
    demo.pathplanning.model.CartesianGraph var21 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var24 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var25 = new demo.pathplanning.model.Location(1, 1);
    boolean var27 = var25.equals((java.lang.Object)0L);
    demo.pathplanning.model.Node var28 = var16.getNode(var25);
    demo.pathplanning.model.CartesianGraph var31 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var32 = var31.getXSize();
    demo.pathplanning.algorithms.AStar var33 = new demo.pathplanning.algorithms.AStar(var31);
    demo.pathplanning.model.CartesianGraph var36 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var39 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var40 = new demo.pathplanning.model.Location(1, 1);
    boolean var42 = var40.equals((java.lang.Object)0L);
    demo.pathplanning.model.Node var43 = var31.getNode(var40);
    int var44 = var31.getXSize();
    demo.pathplanning.model.Node var45 = new demo.pathplanning.model.Node(var12, var25, var44);
    int var46 = var12.getXSize();
    demo.pathplanning.algorithms.AStar var47 = new demo.pathplanning.algorithms.AStar(var12);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var3 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var4 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var5 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var9 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var11 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var13 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var18 + "' != '" + "0,\n"+ "'", var18.equals("0,\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var27 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var28);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var32 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var42 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var43);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var44 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var46 == 1);

  }

  public void test69() throws Throwable {

    demo.pathplanning.model.CartesianGraph var2 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.algorithms.AStar var3 = new demo.pathplanning.algorithms.AStar(var2);
    demo.pathplanning.model.CartesianGraph var4 = var3.getGraph();
    demo.pathplanning.model.CartesianGraph var5 = var3.getGraph();
    demo.pathplanning.algorithms.PathPlanningContext var6 = new demo.pathplanning.algorithms.PathPlanningContext((demo.pathplanning.algorithms.PathPlanner)var3);
    demo.pathplanning.model.CartesianGraph var7 = var3.getGraph();
    int var8 = var7.getYSize();
    demo.pathplanning.model.CartesianGraph var11 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var14 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var15 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var18 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var21 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var22 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.Node var23 = new demo.pathplanning.model.Node(var7, var15, 1);
    java.util.Collection var24 = var23.getNeighbors();
    int var25 = var23.getCost();
    java.lang.String var26 = var23.toString();
    java.lang.String var27 = var23.toString();
    java.util.Collection var28 = var23.getNeighbors();
    java.lang.String var29 = var23.toString();
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      demo.pathplanning.model.Direction var30 = demo.pathplanning.model.Direction.valueOf(var29);
      fail("Expected exception of type java.lang.IllegalArgumentException");
    } catch (java.lang.IllegalArgumentException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var8 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var24);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var25 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var26 + "' != '" + "(1,1)=1"+ "'", var26.equals("(1,1)=1"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var27 + "' != '" + "(1,1)=1"+ "'", var27.equals("(1,1)=1"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var28);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var29 + "' != '" + "(1,1)=1"+ "'", var29.equals("(1,1)=1"));

  }

  public void test70() throws Throwable {

    demo.pathplanning.model.CartesianGraph var2 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var5 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var6 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var9 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var10 = var9.getXSize();
    int var11 = var9.getYSize();
    int var12 = var9.getYSize();
    demo.pathplanning.model.CartesianGraph var15 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var16 = var15.getXSize();
    int var17 = var15.getYSize();
    int var18 = var15.getYSize();
    demo.pathplanning.model.CartesianGraph var19 = new demo.pathplanning.model.CartesianGraph(var12, var18);
    demo.pathplanning.model.CartesianGraph var20 = new demo.pathplanning.model.CartesianGraph(1, var12);
    demo.pathplanning.model.CartesianGraph var23 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var26 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var27 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var30 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var31 = var30.getXSize();
    int var32 = var30.getYSize();
    int var33 = var30.getYSize();
    demo.pathplanning.model.CartesianGraph var36 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var37 = var36.getXSize();
    int var38 = var36.getYSize();
    int var39 = var36.getYSize();
    demo.pathplanning.model.CartesianGraph var40 = new demo.pathplanning.model.CartesianGraph(var33, var39);
    demo.pathplanning.model.CartesianGraph var41 = new demo.pathplanning.model.CartesianGraph(1, var33);
    demo.pathplanning.model.Location var42 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var45 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.algorithms.AStar var46 = new demo.pathplanning.algorithms.AStar(var45);
    demo.pathplanning.model.CartesianGraph var47 = var46.getGraph();
    demo.pathplanning.model.CartesianGraph var48 = var46.getGraph();
    demo.pathplanning.algorithms.PathPlanningContext var49 = new demo.pathplanning.algorithms.PathPlanningContext((demo.pathplanning.algorithms.PathPlanner)var46);
    demo.pathplanning.model.CartesianGraph var50 = var46.getGraph();
    int var51 = var50.getYSize();
    demo.pathplanning.model.CartesianGraph var54 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var57 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var58 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var61 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var64 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var65 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.Node var66 = new demo.pathplanning.model.Node(var50, var58, 1);
    java.util.Collection var67 = var66.getNeighbors();
    int var68 = var66.getCost();
    demo.pathplanning.model.CartesianGraph var69 = new demo.pathplanning.model.CartesianGraph(1, var68);
    java.lang.String var70 = var69.toString();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var11 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var12 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var16 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var17 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var18 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var31 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var32 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var33 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var37 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var38 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var39 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var47);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var48);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var50);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var51 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var67);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var68 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var70 + "' != '" + "0,\n"+ "'", var70.equals("0,\n"));

  }

  public void test71() throws Throwable {

    demo.pathplanning.model.CartesianGraph var2 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var3 = var2.getXSize();
    int var4 = var2.getYSize();
    int var5 = var2.getYSize();
    demo.pathplanning.model.CartesianGraph var8 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var9 = var8.getXSize();
    int var10 = var8.getYSize();
    int var11 = var8.getYSize();
    demo.pathplanning.model.CartesianGraph var12 = new demo.pathplanning.model.CartesianGraph(var5, var11);
    java.lang.String var13 = var12.toString();
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      demo.pathplanning.model.Direction var14 = demo.pathplanning.model.Direction.valueOf(var13);
      fail("Expected exception of type java.lang.IllegalArgumentException");
    } catch (java.lang.IllegalArgumentException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var3 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var4 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var5 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var9 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var11 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var13 + "' != '" + "0,\n"+ "'", var13.equals("0,\n"));

  }

  public void test72() throws Throwable {

    demo.pathplanning.model.CartesianGraph var3 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var4 = var3.getXSize();
    int var5 = var3.getYSize();
    int var6 = var3.getYSize();
    demo.pathplanning.model.CartesianGraph var9 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var10 = var9.getXSize();
    int var11 = var9.getYSize();
    int var12 = var9.getYSize();
    demo.pathplanning.model.CartesianGraph var13 = new demo.pathplanning.model.CartesianGraph(var6, var12);
    demo.pathplanning.model.CartesianGraph var16 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var19 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var20 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var21 = new demo.pathplanning.model.CartesianGraph(var6, 1);
    demo.pathplanning.model.CartesianGraph var22 = new demo.pathplanning.model.CartesianGraph(0, 1);
    demo.pathplanning.model.CartesianGraph var25 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.algorithms.AStar var26 = new demo.pathplanning.algorithms.AStar(var25);
    java.lang.String var27 = var25.toString();
    demo.pathplanning.model.CartesianGraph var30 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var33 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var34 = new demo.pathplanning.model.Location(1, 1);
    boolean var36 = var34.equals((java.lang.Object)0L);
    int var37 = var34.getX();
    int var38 = var34.getX();
    demo.pathplanning.model.CartesianGraph var41 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.algorithms.AStar var42 = new demo.pathplanning.algorithms.AStar(var41);
    demo.pathplanning.model.CartesianGraph var43 = var42.getGraph();
    demo.pathplanning.model.CartesianGraph var44 = var42.getGraph();
    demo.pathplanning.algorithms.PathPlanningContext var45 = new demo.pathplanning.algorithms.PathPlanningContext((demo.pathplanning.algorithms.PathPlanner)var42);
    demo.pathplanning.model.CartesianGraph var46 = var42.getGraph();
    int var47 = var46.getYSize();
    demo.pathplanning.model.CartesianGraph var50 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var53 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var54 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var57 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var60 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var61 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.Node var62 = new demo.pathplanning.model.Node(var46, var54, 1);
    demo.pathplanning.model.CartesianGraph var65 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var68 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var69 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var72 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var73 = var72.getXSize();
    int var74 = var72.getYSize();
    int var75 = var72.getYSize();
    demo.pathplanning.model.CartesianGraph var78 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var79 = var78.getXSize();
    int var80 = var78.getYSize();
    int var81 = var78.getYSize();
    demo.pathplanning.model.CartesianGraph var82 = new demo.pathplanning.model.CartesianGraph(var75, var81);
    demo.pathplanning.model.CartesianGraph var83 = new demo.pathplanning.model.CartesianGraph(1, var75);
    demo.pathplanning.model.CartesianGraph var84 = new demo.pathplanning.model.CartesianGraph(1, var75);
    demo.pathplanning.model.Node var85 = new demo.pathplanning.model.Node(var25, var34, var75);
    demo.pathplanning.model.CartesianGraph var86 = new demo.pathplanning.model.CartesianGraph(0, var75);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var4 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var5 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var6 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var11 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var12 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var27 + "' != '" + "0,\n"+ "'", var27.equals("0,\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var36 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var37 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var38 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var43);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var44);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var46);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var47 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var73 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var74 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var75 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var79 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var80 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var81 == 1);

  }

  public void test73() throws Throwable {

    demo.pathplanning.model.CartesianGraph var2 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.algorithms.AStar var3 = new demo.pathplanning.algorithms.AStar(var2);
    demo.pathplanning.model.CartesianGraph var4 = var3.getGraph();
    demo.pathplanning.model.CartesianGraph var5 = var3.getGraph();
    demo.pathplanning.algorithms.PathPlanningContext var6 = new demo.pathplanning.algorithms.PathPlanningContext((demo.pathplanning.algorithms.PathPlanner)var3);
    demo.pathplanning.model.CartesianGraph var7 = var3.getGraph();
    demo.pathplanning.algorithms.PathPlanningContext var8 = new demo.pathplanning.algorithms.PathPlanningContext((demo.pathplanning.algorithms.PathPlanner)var3);
    demo.pathplanning.model.CartesianGraph var11 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.algorithms.AStar var12 = new demo.pathplanning.algorithms.AStar(var11);
    java.lang.String var13 = var11.toString();
    demo.pathplanning.model.CartesianGraph var16 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var19 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var20 = new demo.pathplanning.model.Location(1, 1);
    boolean var22 = var20.equals((java.lang.Object)0L);
    demo.pathplanning.model.Node var23 = var11.getNode(var20);
    demo.pathplanning.model.CartesianGraph var26 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var29 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var30 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var33 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var34 = var33.getXSize();
    int var35 = var33.getYSize();
    int var36 = var33.getYSize();
    demo.pathplanning.model.CartesianGraph var39 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var40 = var39.getXSize();
    int var41 = var39.getYSize();
    int var42 = var39.getYSize();
    demo.pathplanning.model.CartesianGraph var43 = new demo.pathplanning.model.CartesianGraph(var36, var42);
    demo.pathplanning.model.CartesianGraph var44 = new demo.pathplanning.model.CartesianGraph(1, var36);
    int var45 = var44.getYSize();
    demo.pathplanning.model.CartesianGraph var48 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.algorithms.AStar var49 = new demo.pathplanning.algorithms.AStar(var48);
    java.lang.String var50 = var48.toString();
    demo.pathplanning.model.CartesianGraph var53 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var56 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var57 = new demo.pathplanning.model.Location(1, 1);
    boolean var59 = var57.equals((java.lang.Object)0L);
    demo.pathplanning.model.Node var60 = var48.getNode(var57);
    demo.pathplanning.model.CartesianGraph var63 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var64 = var63.getXSize();
    int var65 = var63.getYSize();
    int var66 = var63.getYSize();
    demo.pathplanning.model.CartesianGraph var69 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var70 = var69.getXSize();
    int var71 = var69.getYSize();
    int var72 = var69.getYSize();
    demo.pathplanning.model.CartesianGraph var73 = new demo.pathplanning.model.CartesianGraph(var66, var72);
    demo.pathplanning.model.CartesianGraph var76 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var79 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var80 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var81 = new demo.pathplanning.model.CartesianGraph(var66, 1);
    demo.pathplanning.model.Node var82 = new demo.pathplanning.model.Node(var44, var57, 1);
    java.util.List var83 = var8.getPath(var20, var57);

  }

  public void test74() throws Throwable {

    demo.pathplanning.model.CartesianGraph var2 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.algorithms.AStar var3 = new demo.pathplanning.algorithms.AStar(var2);
    demo.pathplanning.model.CartesianGraph var4 = var3.getGraph();
    demo.pathplanning.model.CartesianGraph var5 = var3.getGraph();
    demo.pathplanning.model.CartesianGraph var6 = var3.getGraph();
    demo.pathplanning.algorithms.PathPlanningContext var7 = new demo.pathplanning.algorithms.PathPlanningContext((demo.pathplanning.algorithms.PathPlanner)var3);
    demo.pathplanning.model.CartesianGraph var10 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var11 = var10.getXSize();
    int var12 = var10.getYSize();
    int var13 = var10.getYSize();
    demo.pathplanning.model.CartesianGraph var16 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var17 = var16.getXSize();
    int var18 = var16.getYSize();
    int var19 = var16.getYSize();
    demo.pathplanning.model.CartesianGraph var20 = new demo.pathplanning.model.CartesianGraph(var13, var19);
    demo.pathplanning.model.CartesianGraph var23 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var26 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var27 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var28 = new demo.pathplanning.model.CartesianGraph(var13, 1);
    java.lang.String var29 = var28.toString();
    demo.pathplanning.model.CartesianGraph var32 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var35 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var36 = new demo.pathplanning.model.Location(1, 1);
    boolean var38 = var36.equals((java.lang.Object)0L);
    demo.pathplanning.model.Node var39 = var28.getNode(var36);
    demo.pathplanning.model.CartesianGraph var42 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var43 = var42.getXSize();
    demo.pathplanning.algorithms.AStar var44 = new demo.pathplanning.algorithms.AStar(var42);
    demo.pathplanning.model.CartesianGraph var47 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var50 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var51 = new demo.pathplanning.model.Location(1, 1);
    boolean var53 = var51.equals((java.lang.Object)0L);
    demo.pathplanning.model.Node var54 = var42.getNode(var51);
    int var55 = var51.getY();
    int var56 = var51.getY();
    java.util.List var57 = var7.getPath(var36, var51);

  }

  public void test75() throws Throwable {

    demo.pathplanning.model.CartesianGraph var2 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var3 = var2.getXSize();
    demo.pathplanning.algorithms.AStar var4 = new demo.pathplanning.algorithms.AStar(var2);
    demo.pathplanning.model.CartesianGraph var7 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var10 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var11 = new demo.pathplanning.model.Location(1, 1);
    boolean var13 = var11.equals((java.lang.Object)0L);
    demo.pathplanning.model.Node var14 = var2.getNode(var11);
    int var15 = var2.getYSize();
    demo.pathplanning.model.CartesianGraph var18 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var19 = var18.getXSize();
    int var20 = var18.getYSize();
    int var21 = var18.getYSize();
    demo.pathplanning.model.CartesianGraph var24 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var25 = new demo.pathplanning.model.Location(var21, 1);
    java.lang.String var26 = var25.toString();
    demo.pathplanning.model.CartesianGraph var29 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var32 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var33 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var36 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var37 = var36.getXSize();
    int var38 = var36.getYSize();
    int var39 = var36.getYSize();
    demo.pathplanning.model.CartesianGraph var42 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var43 = var42.getXSize();
    int var44 = var42.getYSize();
    int var45 = var42.getYSize();
    demo.pathplanning.model.CartesianGraph var46 = new demo.pathplanning.model.CartesianGraph(var39, var45);
    demo.pathplanning.model.CartesianGraph var47 = new demo.pathplanning.model.CartesianGraph(1, var39);
    demo.pathplanning.model.Node var48 = new demo.pathplanning.model.Node(var2, var25, var39);
    demo.pathplanning.model.CartesianGraph var51 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.algorithms.AStar var52 = new demo.pathplanning.algorithms.AStar(var51);
    demo.pathplanning.model.CartesianGraph var53 = var52.getGraph();
    demo.pathplanning.model.CartesianGraph var54 = var52.getGraph();
    demo.pathplanning.algorithms.PathPlanningContext var55 = new demo.pathplanning.algorithms.PathPlanningContext((demo.pathplanning.algorithms.PathPlanner)var52);
    demo.pathplanning.model.CartesianGraph var56 = var52.getGraph();
    int var57 = var56.getYSize();
    demo.pathplanning.model.CartesianGraph var60 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var63 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var64 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var67 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var70 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var71 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.Node var72 = new demo.pathplanning.model.Node(var56, var64, 1);
    demo.pathplanning.model.Node var73 = var2.getNode(var64);
    int var74 = var2.getXSize();
    java.lang.String var75 = var2.toString();
    int var76 = var2.getYSize();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var3 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var13 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var14);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var15 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var19 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var20 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var21 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var26 + "' != '" + "(1,1)"+ "'", var26.equals("(1,1)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var37 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var38 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var39 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var43 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var44 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var45 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var53);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var54);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var56);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var57 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var73);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var74 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var75 + "' != '" + "0,\n"+ "'", var75.equals("0,\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var76 == 1);

  }

  public void test76() throws Throwable {

    demo.pathplanning.model.CartesianGraph var2 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.algorithms.AStar var3 = new demo.pathplanning.algorithms.AStar(var2);
    demo.pathplanning.model.CartesianGraph var4 = var3.getGraph();
    demo.pathplanning.model.CartesianGraph var5 = var3.getGraph();
    demo.pathplanning.algorithms.PathPlanningContext var6 = new demo.pathplanning.algorithms.PathPlanningContext((demo.pathplanning.algorithms.PathPlanner)var3);
    demo.pathplanning.model.CartesianGraph var7 = var3.getGraph();
    int var8 = var7.getYSize();
    demo.pathplanning.model.CartesianGraph var11 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var14 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var15 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var18 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var21 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var22 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.Node var23 = new demo.pathplanning.model.Node(var7, var15, 1);
    int var24 = var23.getCost();
    demo.pathplanning.model.CartesianGraph var27 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var28 = var27.getXSize();
    int var29 = var27.getYSize();
    int var30 = var27.getYSize();
    demo.pathplanning.model.CartesianGraph var33 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var34 = new demo.pathplanning.model.Location(var30, 1);
    demo.pathplanning.model.CartesianGraph var35 = new demo.pathplanning.model.CartesianGraph(var24, 1);
    demo.pathplanning.model.CartesianGraph var38 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var39 = var38.getXSize();
    demo.pathplanning.algorithms.AStar var40 = new demo.pathplanning.algorithms.AStar(var38);
    demo.pathplanning.model.CartesianGraph var43 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var46 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var47 = new demo.pathplanning.model.Location(1, 1);
    boolean var49 = var47.equals((java.lang.Object)0L);
    demo.pathplanning.model.Node var50 = var38.getNode(var47);
    int var51 = var38.getYSize();
    demo.pathplanning.model.CartesianGraph var54 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var55 = var54.getXSize();
    int var56 = var54.getYSize();
    int var57 = var54.getYSize();
    demo.pathplanning.model.CartesianGraph var60 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var61 = var60.getXSize();
    int var62 = var60.getYSize();
    int var63 = var60.getYSize();
    demo.pathplanning.model.CartesianGraph var64 = new demo.pathplanning.model.CartesianGraph(var57, var63);
    demo.pathplanning.model.CartesianGraph var67 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var70 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var71 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var72 = new demo.pathplanning.model.CartesianGraph(var57, 1);
    int var73 = var72.getXSize();
    demo.pathplanning.model.CartesianGraph var76 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var77 = var76.getXSize();
    int var78 = var76.getYSize();
    int var79 = var76.getYSize();
    demo.pathplanning.model.CartesianGraph var80 = new demo.pathplanning.model.CartesianGraph(var73, var79);
    demo.pathplanning.model.CartesianGraph var81 = new demo.pathplanning.model.CartesianGraph(var51, var73);
    demo.pathplanning.model.Location var82 = new demo.pathplanning.model.Location(1, var73);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var8 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var24 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var28 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var29 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var30 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var39 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var49 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var50);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var51 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var55 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var56 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var57 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var61 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var62 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var63 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var73 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var77 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var78 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var79 == 1);

  }

  public void test77() throws Throwable {

    demo.pathplanning.model.CartesianGraph var2 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.algorithms.AStar var3 = new demo.pathplanning.algorithms.AStar(var2);
    demo.pathplanning.model.CartesianGraph var4 = var3.getGraph();
    demo.pathplanning.model.CartesianGraph var5 = var3.getGraph();
    demo.pathplanning.algorithms.PathPlanningContext var6 = new demo.pathplanning.algorithms.PathPlanningContext((demo.pathplanning.algorithms.PathPlanner)var3);
    demo.pathplanning.model.CartesianGraph var7 = var3.getGraph();
    int var8 = var7.getYSize();
    demo.pathplanning.model.CartesianGraph var11 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var14 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var15 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var18 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var21 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var22 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.Node var23 = new demo.pathplanning.model.Node(var7, var15, 1);
    java.util.Collection var24 = var23.getNeighbors();
    java.lang.String var25 = var23.toString();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var8 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var24);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var25 + "' != '" + "(1,1)=1"+ "'", var25.equals("(1,1)=1"));

  }

  public void test78() throws Throwable {

    demo.pathplanning.model.CartesianGraph var2 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var3 = var2.getXSize();
    demo.pathplanning.algorithms.AStar var4 = new demo.pathplanning.algorithms.AStar(var2);
    demo.pathplanning.model.CartesianGraph var7 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var10 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var11 = new demo.pathplanning.model.Location(1, 1);
    boolean var13 = var11.equals((java.lang.Object)0L);
    demo.pathplanning.model.Node var14 = var2.getNode(var11);
    demo.pathplanning.algorithms.AStar var15 = new demo.pathplanning.algorithms.AStar(var2);
    demo.pathplanning.algorithms.PathPlanningContext var16 = new demo.pathplanning.algorithms.PathPlanningContext((demo.pathplanning.algorithms.PathPlanner)var15);
    demo.pathplanning.algorithms.PathPlanningContext var17 = new demo.pathplanning.algorithms.PathPlanningContext((demo.pathplanning.algorithms.PathPlanner)var15);
    demo.pathplanning.model.CartesianGraph var20 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var23 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var24 = new demo.pathplanning.model.Location(1, 1);
    boolean var26 = var24.equals((java.lang.Object)0L);
    int var27 = var24.getX();
    int var28 = var24.getX();
    demo.pathplanning.model.CartesianGraph var31 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var34 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var35 = new demo.pathplanning.model.Location(1, 1);
    boolean var37 = var35.equals((java.lang.Object)0L);
    int var38 = var35.getX();
    int var39 = var35.getX();
    int var40 = var35.getY();
    demo.pathplanning.model.CartesianGraph var43 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var44 = var43.getXSize();
    demo.pathplanning.algorithms.AStar var45 = new demo.pathplanning.algorithms.AStar(var43);
    demo.pathplanning.model.CartesianGraph var48 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var51 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var52 = new demo.pathplanning.model.Location(1, 1);
    boolean var54 = var52.equals((java.lang.Object)0L);
    demo.pathplanning.model.Node var55 = var43.getNode(var52);
    boolean var56 = var35.equals((java.lang.Object)var52);
    int var57 = var52.getY();
    int var58 = var52.getX();
    java.util.List var59 = var15.getPath(var24, var52);

  }

  public void test79() throws Throwable {

    demo.pathplanning.model.CartesianGraph var2 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var5 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var6 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var9 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var10 = var9.getXSize();
    int var11 = var9.getYSize();
    int var12 = var9.getYSize();
    demo.pathplanning.model.CartesianGraph var15 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var16 = var15.getXSize();
    int var17 = var15.getYSize();
    int var18 = var15.getYSize();
    demo.pathplanning.model.CartesianGraph var19 = new demo.pathplanning.model.CartesianGraph(var12, var18);
    java.lang.String var20 = var19.toString();
    demo.pathplanning.model.CartesianGraph var23 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.algorithms.AStar var24 = new demo.pathplanning.algorithms.AStar(var23);
    java.lang.String var25 = var23.toString();
    demo.pathplanning.model.CartesianGraph var28 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var31 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var32 = new demo.pathplanning.model.Location(1, 1);
    boolean var34 = var32.equals((java.lang.Object)0L);
    demo.pathplanning.model.Node var35 = var23.getNode(var32);
    java.lang.String var36 = var32.toString();
    demo.pathplanning.model.CartesianGraph var39 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.algorithms.AStar var40 = new demo.pathplanning.algorithms.AStar(var39);
    demo.pathplanning.model.CartesianGraph var41 = var40.getGraph();
    demo.pathplanning.model.CartesianGraph var42 = var40.getGraph();
    demo.pathplanning.algorithms.PathPlanningContext var43 = new demo.pathplanning.algorithms.PathPlanningContext((demo.pathplanning.algorithms.PathPlanner)var40);
    demo.pathplanning.model.CartesianGraph var44 = var40.getGraph();
    int var45 = var44.getYSize();
    demo.pathplanning.model.CartesianGraph var48 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var51 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var52 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var55 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var58 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var59 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.Node var60 = new demo.pathplanning.model.Node(var44, var52, 1);
    boolean var61 = var32.equals((java.lang.Object)1);
    int var62 = var32.getX();
    demo.pathplanning.model.CartesianGraph var65 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var66 = var65.getXSize();
    int var67 = var65.getYSize();
    int var68 = var65.getYSize();
    demo.pathplanning.model.CartesianGraph var71 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var72 = new demo.pathplanning.model.Location(var68, 1);
    demo.pathplanning.model.Node var73 = new demo.pathplanning.model.Node(var19, var32, var68);
    int var74 = var19.getXSize();
    demo.pathplanning.model.Location var75 = new demo.pathplanning.model.Location(1, var74);
    int var76 = var75.getY();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var11 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var12 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var16 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var17 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var18 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var20 + "' != '" + "0,\n"+ "'", var20.equals("0,\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var25 + "' != '" + "0,\n"+ "'", var25.equals("0,\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var34 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var35);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var36 + "' != '" + "(1,1)"+ "'", var36.equals("(1,1)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var41);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var42);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var44);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var45 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var61 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var62 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var66 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var67 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var68 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var74 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var76 == 1);

  }

  public void test80() throws Throwable {

    demo.pathplanning.model.CartesianGraph var2 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var5 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var6 = new demo.pathplanning.model.Location(1, 1);
    boolean var8 = var6.equals((java.lang.Object)0L);
    int var9 = var6.getX();
    int var10 = var6.getX();
    int var11 = var6.getY();
    demo.pathplanning.model.CartesianGraph var14 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var15 = var14.getXSize();
    demo.pathplanning.algorithms.AStar var16 = new demo.pathplanning.algorithms.AStar(var14);
    demo.pathplanning.model.CartesianGraph var19 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var22 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var23 = new demo.pathplanning.model.Location(1, 1);
    boolean var25 = var23.equals((java.lang.Object)0L);
    demo.pathplanning.model.Node var26 = var14.getNode(var23);
    boolean var27 = var6.equals((java.lang.Object)var23);
    int var28 = var23.getY();
    demo.pathplanning.model.CartesianGraph var31 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var32 = var31.getXSize();
    int var33 = var31.getYSize();
    int var34 = var31.getYSize();
    demo.pathplanning.model.CartesianGraph var37 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var38 = var37.getXSize();
    int var39 = var37.getYSize();
    int var40 = var37.getYSize();
    demo.pathplanning.model.CartesianGraph var41 = new demo.pathplanning.model.CartesianGraph(var34, var40);
    demo.pathplanning.model.CartesianGraph var44 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var47 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var48 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var49 = new demo.pathplanning.model.CartesianGraph(var34, 1);
    java.lang.String var50 = var49.toString();
    demo.pathplanning.model.CartesianGraph var53 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var56 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var57 = new demo.pathplanning.model.Location(1, 1);
    boolean var59 = var57.equals((java.lang.Object)0L);
    demo.pathplanning.model.Node var60 = var49.getNode(var57);
    demo.pathplanning.model.CartesianGraph var63 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var66 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var67 = new demo.pathplanning.model.Location(1, 1);
    boolean var69 = var67.equals((java.lang.Object)0L);
    int var70 = var67.getX();
    int var71 = var67.getX();
    demo.pathplanning.model.CartesianGraph var74 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var75 = var74.getXSize();
    demo.pathplanning.model.Node var76 = new demo.pathplanning.model.Node(var49, var67, var75);
    int var77 = var76.getCost();
    java.util.Collection var78 = var76.getNeighbors();
    int var79 = var76.getCost();
    demo.pathplanning.model.CartesianGraph var80 = new demo.pathplanning.model.CartesianGraph(var28, var79);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var9 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var11 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var15 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var25 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var26);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var27 == true);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var28 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var32 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var33 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var34 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var38 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var39 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var40 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var50 + "' != '" + "0,\n"+ "'", var50.equals("0,\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var59 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var60);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var69 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var70 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var71 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var75 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var77 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var78);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var79 == 1);

  }

  public void test81() throws Throwable {

    demo.pathplanning.model.CartesianGraph var2 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.algorithms.AStar var3 = new demo.pathplanning.algorithms.AStar(var2);
    demo.pathplanning.model.CartesianGraph var4 = var3.getGraph();
    demo.pathplanning.model.CartesianGraph var5 = var3.getGraph();
    demo.pathplanning.algorithms.PathPlanningContext var6 = new demo.pathplanning.algorithms.PathPlanningContext((demo.pathplanning.algorithms.PathPlanner)var3);
    demo.pathplanning.model.CartesianGraph var7 = var3.getGraph();
    int var8 = var7.getYSize();
    int var9 = var7.getYSize();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var8 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var9 == 1);

  }

  public void test82() throws Throwable {

    demo.pathplanning.model.CartesianGraph var2 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var5 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var6 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var9 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var10 = var9.getXSize();
    int var11 = var9.getYSize();
    int var12 = var9.getYSize();
    demo.pathplanning.model.CartesianGraph var15 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var16 = var15.getXSize();
    int var17 = var15.getYSize();
    int var18 = var15.getYSize();
    demo.pathplanning.model.CartesianGraph var19 = new demo.pathplanning.model.CartesianGraph(var12, var18);
    demo.pathplanning.model.CartesianGraph var20 = new demo.pathplanning.model.CartesianGraph(1, var12);
    int var21 = var20.getYSize();
    demo.pathplanning.model.CartesianGraph var24 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.algorithms.AStar var25 = new demo.pathplanning.algorithms.AStar(var24);
    java.lang.String var26 = var24.toString();
    demo.pathplanning.model.CartesianGraph var29 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var32 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var33 = new demo.pathplanning.model.Location(1, 1);
    boolean var35 = var33.equals((java.lang.Object)0L);
    demo.pathplanning.model.Node var36 = var24.getNode(var33);
    demo.pathplanning.model.CartesianGraph var39 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var40 = var39.getXSize();
    int var41 = var39.getYSize();
    int var42 = var39.getYSize();
    demo.pathplanning.model.CartesianGraph var45 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var46 = var45.getXSize();
    int var47 = var45.getYSize();
    int var48 = var45.getYSize();
    demo.pathplanning.model.CartesianGraph var49 = new demo.pathplanning.model.CartesianGraph(var42, var48);
    demo.pathplanning.model.CartesianGraph var52 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var55 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var56 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var57 = new demo.pathplanning.model.CartesianGraph(var42, 1);
    demo.pathplanning.model.Node var58 = new demo.pathplanning.model.Node(var20, var33, 1);
    demo.pathplanning.model.CartesianGraph var61 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.algorithms.AStar var62 = new demo.pathplanning.algorithms.AStar(var61);
    demo.pathplanning.model.CartesianGraph var63 = var62.getGraph();
    demo.pathplanning.model.CartesianGraph var64 = var62.getGraph();
    demo.pathplanning.algorithms.PathPlanningContext var65 = new demo.pathplanning.algorithms.PathPlanningContext((demo.pathplanning.algorithms.PathPlanner)var62);
    demo.pathplanning.model.CartesianGraph var66 = var62.getGraph();
    int var67 = var66.getYSize();
    demo.pathplanning.model.CartesianGraph var70 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var73 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var74 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var77 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var80 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var81 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.Node var82 = new demo.pathplanning.model.Node(var66, var74, 1);
    int var83 = var82.getCost();
    demo.pathplanning.model.CartesianGraph var86 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var87 = var86.getXSize();
    int var88 = var86.getYSize();
    int var89 = var86.getYSize();
    demo.pathplanning.model.CartesianGraph var92 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var93 = new demo.pathplanning.model.Location(var89, 1);
    demo.pathplanning.model.CartesianGraph var94 = new demo.pathplanning.model.CartesianGraph(var83, 1);
    demo.pathplanning.model.Location var95 = new demo.pathplanning.model.Location(1, 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var11 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var12 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var16 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var17 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var18 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var21 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var26 + "' != '" + "0,\n"+ "'", var26.equals("0,\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var35 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var36);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var40 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var41 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var42 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var46 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var47 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var48 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var63);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var64);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var66);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var67 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var83 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var87 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var88 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var89 == 1);

  }

  public void test83() throws Throwable {

    demo.pathplanning.model.CartesianGraph var2 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var3 = var2.getXSize();
    int var4 = var2.getYSize();
    demo.pathplanning.algorithms.AStar var5 = new demo.pathplanning.algorithms.AStar(var2);
    demo.pathplanning.model.CartesianGraph var8 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var11 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var12 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var15 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var16 = var15.getXSize();
    demo.pathplanning.model.CartesianGraph var19 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var20 = new demo.pathplanning.model.CartesianGraph(var16, 1);
    demo.pathplanning.model.Location var21 = new demo.pathplanning.model.Location(1, 1);
    int var22 = var21.getX();
    demo.pathplanning.model.CartesianGraph var25 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var26 = var25.getXSize();
    demo.pathplanning.model.CartesianGraph var29 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var30 = new demo.pathplanning.model.CartesianGraph(var26, 1);
    demo.pathplanning.model.CartesianGraph var33 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.algorithms.AStar var34 = new demo.pathplanning.algorithms.AStar(var33);
    demo.pathplanning.model.CartesianGraph var35 = var34.getGraph();
    demo.pathplanning.model.CartesianGraph var36 = var34.getGraph();
    demo.pathplanning.algorithms.PathPlanningContext var37 = new demo.pathplanning.algorithms.PathPlanningContext((demo.pathplanning.algorithms.PathPlanner)var34);
    demo.pathplanning.model.CartesianGraph var38 = var34.getGraph();
    int var39 = var38.getYSize();
    demo.pathplanning.model.CartesianGraph var40 = new demo.pathplanning.model.CartesianGraph(var26, var39);
    demo.pathplanning.model.CartesianGraph var43 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var46 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var47 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var50 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var51 = var50.getXSize();
    demo.pathplanning.model.CartesianGraph var54 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var55 = new demo.pathplanning.model.CartesianGraph(var51, 1);
    demo.pathplanning.model.Location var56 = new demo.pathplanning.model.Location(1, 1);
    int var57 = var56.getX();
    int var58 = var56.getY();
    demo.pathplanning.model.Node var59 = var40.getNode(var56);
    int var60 = var56.getY();
    java.lang.String var61 = var56.toString();
    java.util.List var62 = var5.getPath(var21, var56);

  }

  public void test84() throws Throwable {

    demo.pathplanning.model.CartesianGraph var2 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var5 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var6 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var9 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var10 = var9.getXSize();
    int var11 = var9.getYSize();
    int var12 = var9.getYSize();
    demo.pathplanning.model.CartesianGraph var15 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var16 = var15.getXSize();
    int var17 = var15.getYSize();
    int var18 = var15.getYSize();
    demo.pathplanning.model.CartesianGraph var19 = new demo.pathplanning.model.CartesianGraph(var12, var18);
    demo.pathplanning.model.CartesianGraph var20 = new demo.pathplanning.model.CartesianGraph(1, var12);
    int var21 = var20.getYSize();
    demo.pathplanning.model.CartesianGraph var24 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var25 = var24.getXSize();
    int var26 = var24.getYSize();
    int var27 = var24.getYSize();
    demo.pathplanning.model.CartesianGraph var30 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var31 = new demo.pathplanning.model.Location(var27, 1);
    java.lang.String var32 = var31.toString();
    demo.pathplanning.model.Node var33 = var20.getNode(var31);
    java.lang.String var34 = var31.toString();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var11 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var12 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var16 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var17 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var18 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var21 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var25 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var26 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var27 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var32 + "' != '" + "(1,1)"+ "'", var32.equals("(1,1)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var33);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var34 + "' != '" + "(1,1)"+ "'", var34.equals("(1,1)"));

  }

  public void test85() throws Throwable {

    demo.pathplanning.model.CartesianGraph var2 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.algorithms.AStar var3 = new demo.pathplanning.algorithms.AStar(var2);
    java.lang.String var4 = var2.toString();
    demo.pathplanning.model.CartesianGraph var7 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var10 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var11 = new demo.pathplanning.model.Location(1, 1);
    boolean var13 = var11.equals((java.lang.Object)0L);
    demo.pathplanning.model.Node var14 = var2.getNode(var11);
    demo.pathplanning.model.CartesianGraph var17 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.algorithms.AStar var18 = new demo.pathplanning.algorithms.AStar(var17);
    java.lang.String var19 = var17.toString();
    demo.pathplanning.model.CartesianGraph var22 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var25 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var26 = new demo.pathplanning.model.Location(1, 1);
    boolean var28 = var26.equals((java.lang.Object)0L);
    int var29 = var26.getX();
    int var30 = var26.getX();
    demo.pathplanning.model.CartesianGraph var33 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.algorithms.AStar var34 = new demo.pathplanning.algorithms.AStar(var33);
    demo.pathplanning.model.CartesianGraph var35 = var34.getGraph();
    demo.pathplanning.model.CartesianGraph var36 = var34.getGraph();
    demo.pathplanning.algorithms.PathPlanningContext var37 = new demo.pathplanning.algorithms.PathPlanningContext((demo.pathplanning.algorithms.PathPlanner)var34);
    demo.pathplanning.model.CartesianGraph var38 = var34.getGraph();
    int var39 = var38.getYSize();
    demo.pathplanning.model.CartesianGraph var42 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var45 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var46 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var49 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var52 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var53 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.Node var54 = new demo.pathplanning.model.Node(var38, var46, 1);
    demo.pathplanning.model.CartesianGraph var57 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var60 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var61 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var64 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var65 = var64.getXSize();
    int var66 = var64.getYSize();
    int var67 = var64.getYSize();
    demo.pathplanning.model.CartesianGraph var70 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var71 = var70.getXSize();
    int var72 = var70.getYSize();
    int var73 = var70.getYSize();
    demo.pathplanning.model.CartesianGraph var74 = new demo.pathplanning.model.CartesianGraph(var67, var73);
    demo.pathplanning.model.CartesianGraph var75 = new demo.pathplanning.model.CartesianGraph(1, var67);
    demo.pathplanning.model.CartesianGraph var76 = new demo.pathplanning.model.CartesianGraph(1, var67);
    demo.pathplanning.model.Node var77 = new demo.pathplanning.model.Node(var17, var26, var67);
    demo.pathplanning.model.CartesianGraph var80 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var81 = var80.getXSize();
    demo.pathplanning.model.CartesianGraph var84 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var85 = new demo.pathplanning.model.CartesianGraph(var81, 1);
    demo.pathplanning.model.CartesianGraph var88 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.algorithms.AStar var89 = new demo.pathplanning.algorithms.AStar(var88);
    demo.pathplanning.model.CartesianGraph var90 = var89.getGraph();
    demo.pathplanning.model.CartesianGraph var91 = var89.getGraph();
    demo.pathplanning.algorithms.PathPlanningContext var92 = new demo.pathplanning.algorithms.PathPlanningContext((demo.pathplanning.algorithms.PathPlanner)var89);
    demo.pathplanning.model.CartesianGraph var93 = var89.getGraph();
    int var94 = var93.getYSize();
    demo.pathplanning.model.Location var95 = new demo.pathplanning.model.Location(var81, var94);
    demo.pathplanning.model.CartesianGraph var96 = new demo.pathplanning.model.CartesianGraph(var67, var94);
    boolean var97 = var11.equals((java.lang.Object)var94);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var4 + "' != '" + "0,\n"+ "'", var4.equals("0,\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var13 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var14);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var19 + "' != '" + "0,\n"+ "'", var19.equals("0,\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var28 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var29 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var30 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var35);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var36);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var38);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var39 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var65 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var66 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var67 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var71 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var72 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var73 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var81 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var90);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var91);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var93);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var94 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var97 == false);

  }

  public void test86() throws Throwable {

    demo.pathplanning.model.CartesianGraph var2 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.algorithms.AStar var3 = new demo.pathplanning.algorithms.AStar(var2);
    demo.pathplanning.model.CartesianGraph var4 = var3.getGraph();
    demo.pathplanning.model.CartesianGraph var5 = var3.getGraph();
    demo.pathplanning.algorithms.PathPlanningContext var6 = new demo.pathplanning.algorithms.PathPlanningContext((demo.pathplanning.algorithms.PathPlanner)var3);
    demo.pathplanning.model.CartesianGraph var7 = var3.getGraph();
    demo.pathplanning.algorithms.PathPlanningContext var8 = new demo.pathplanning.algorithms.PathPlanningContext((demo.pathplanning.algorithms.PathPlanner)var3);
    demo.pathplanning.model.CartesianGraph var11 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var14 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var15 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var18 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var19 = var18.getXSize();
    demo.pathplanning.model.CartesianGraph var22 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var23 = new demo.pathplanning.model.CartesianGraph(var19, 1);
    demo.pathplanning.model.Location var24 = new demo.pathplanning.model.Location(1, 1);
    int var25 = var24.getX();
    int var26 = var24.getY();
    demo.pathplanning.model.CartesianGraph var29 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.algorithms.AStar var30 = new demo.pathplanning.algorithms.AStar(var29);
    boolean var31 = var24.equals((java.lang.Object)var30);
    demo.pathplanning.model.CartesianGraph var34 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.algorithms.AStar var35 = new demo.pathplanning.algorithms.AStar(var34);
    demo.pathplanning.model.CartesianGraph var36 = var35.getGraph();
    demo.pathplanning.model.CartesianGraph var37 = var35.getGraph();
    demo.pathplanning.algorithms.PathPlanningContext var38 = new demo.pathplanning.algorithms.PathPlanningContext((demo.pathplanning.algorithms.PathPlanner)var35);
    demo.pathplanning.model.CartesianGraph var39 = var35.getGraph();
    int var40 = var39.getYSize();
    demo.pathplanning.model.CartesianGraph var43 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var46 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var47 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var50 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var53 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var54 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.Node var55 = new demo.pathplanning.model.Node(var39, var47, 1);
    java.lang.String var56 = var47.toString();
    java.util.List var57 = var8.getPath(var24, var47);

  }

  public void test87() throws Throwable {

    demo.pathplanning.model.CartesianGraph var2 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var3 = var2.getXSize();
    int var4 = var2.getYSize();
    demo.pathplanning.model.CartesianGraph var7 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.algorithms.AStar var8 = new demo.pathplanning.algorithms.AStar(var7);
    java.lang.String var9 = var7.toString();
    demo.pathplanning.model.CartesianGraph var12 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var15 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var16 = new demo.pathplanning.model.Location(1, 1);
    boolean var18 = var16.equals((java.lang.Object)0L);
    demo.pathplanning.model.Node var19 = var7.getNode(var16);
    demo.pathplanning.model.CartesianGraph var22 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var25 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var26 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var29 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var30 = var29.getXSize();
    demo.pathplanning.model.CartesianGraph var33 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var34 = new demo.pathplanning.model.CartesianGraph(var30, 1);
    demo.pathplanning.model.Location var35 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.Node var36 = new demo.pathplanning.model.Node(var2, var16, 1);
    demo.pathplanning.algorithms.AStar var37 = new demo.pathplanning.algorithms.AStar(var2);
    demo.pathplanning.model.CartesianGraph var40 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var41 = var40.getXSize();
    int var42 = var40.getYSize();
    int var43 = var40.getYSize();
    demo.pathplanning.model.CartesianGraph var46 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var47 = var46.getXSize();
    int var48 = var46.getYSize();
    int var49 = var46.getYSize();
    demo.pathplanning.model.CartesianGraph var50 = new demo.pathplanning.model.CartesianGraph(var43, var49);
    demo.pathplanning.model.CartesianGraph var53 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var56 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var57 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var58 = new demo.pathplanning.model.CartesianGraph(var43, 1);
    java.lang.String var59 = var58.toString();
    demo.pathplanning.model.CartesianGraph var62 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var65 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var66 = new demo.pathplanning.model.Location(1, 1);
    boolean var68 = var66.equals((java.lang.Object)0L);
    demo.pathplanning.model.Node var69 = var58.getNode(var66);
    demo.pathplanning.model.CartesianGraph var72 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var75 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var76 = new demo.pathplanning.model.Location(1, 1);
    boolean var78 = var76.equals((java.lang.Object)0L);
    int var79 = var76.getX();
    int var80 = var76.getX();
    demo.pathplanning.model.CartesianGraph var83 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var84 = var83.getXSize();
    demo.pathplanning.model.Node var85 = new demo.pathplanning.model.Node(var58, var76, var84);
    int var86 = var85.getCost();
    java.util.Collection var87 = var85.getNeighbors();
    demo.pathplanning.model.Location var88 = var85.getLocation();
    demo.pathplanning.model.Node var89 = var2.getNode(var88);
    java.lang.String var90 = var2.toString();
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      demo.pathplanning.model.Direction var91 = demo.pathplanning.model.Direction.valueOf(var90);
      fail("Expected exception of type java.lang.IllegalArgumentException");
    } catch (java.lang.IllegalArgumentException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var3 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var4 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var9 + "' != '" + "0,\n"+ "'", var9.equals("0,\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var18 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var19);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var30 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var41 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var42 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var43 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var47 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var48 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var49 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var59 + "' != '" + "0,\n"+ "'", var59.equals("0,\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var68 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var69);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var78 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var79 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var80 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var84 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var86 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var87);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var88);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var89);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var90 + "' != '" + "0,\n"+ "'", var90.equals("0,\n"));

  }

  public void test88() throws Throwable {

    demo.pathplanning.model.CartesianGraph var2 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var3 = var2.getXSize();
    int var4 = var2.getYSize();
    demo.pathplanning.model.CartesianGraph var7 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.algorithms.AStar var8 = new demo.pathplanning.algorithms.AStar(var7);
    java.lang.String var9 = var7.toString();
    demo.pathplanning.model.CartesianGraph var12 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var15 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var16 = new demo.pathplanning.model.Location(1, 1);
    boolean var18 = var16.equals((java.lang.Object)0L);
    demo.pathplanning.model.Node var19 = var7.getNode(var16);
    demo.pathplanning.model.CartesianGraph var22 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var25 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var26 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var29 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var30 = var29.getXSize();
    demo.pathplanning.model.CartesianGraph var33 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var34 = new demo.pathplanning.model.CartesianGraph(var30, 1);
    demo.pathplanning.model.Location var35 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.Node var36 = new demo.pathplanning.model.Node(var2, var16, 1);
    demo.pathplanning.model.CartesianGraph var39 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var40 = var39.getXSize();
    demo.pathplanning.algorithms.AStar var41 = new demo.pathplanning.algorithms.AStar(var39);
    demo.pathplanning.model.CartesianGraph var44 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var47 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var48 = new demo.pathplanning.model.Location(1, 1);
    boolean var50 = var48.equals((java.lang.Object)0L);
    demo.pathplanning.model.Node var51 = var39.getNode(var48);
    int var52 = var39.getXSize();
    boolean var53 = var16.equals((java.lang.Object)var39);
    int var54 = var39.getXSize();
    demo.pathplanning.model.CartesianGraph var57 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var60 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var61 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var64 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var65 = var64.getXSize();
    int var66 = var64.getYSize();
    int var67 = var64.getYSize();
    demo.pathplanning.model.CartesianGraph var70 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var71 = var70.getXSize();
    int var72 = var70.getYSize();
    int var73 = var70.getYSize();
    demo.pathplanning.model.CartesianGraph var74 = new demo.pathplanning.model.CartesianGraph(var67, var73);
    demo.pathplanning.model.CartesianGraph var75 = new demo.pathplanning.model.CartesianGraph(1, var67);
    int var76 = var75.getYSize();
    demo.pathplanning.model.CartesianGraph var79 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var80 = var79.getXSize();
    int var81 = var79.getYSize();
    int var82 = var79.getYSize();
    demo.pathplanning.model.CartesianGraph var85 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var86 = new demo.pathplanning.model.Location(var82, 1);
    java.lang.String var87 = var86.toString();
    demo.pathplanning.model.Node var88 = var75.getNode(var86);
    int var89 = var86.getY();
    java.lang.String var90 = var86.toString();
    int var91 = var86.getX();
    int var92 = var86.getY();
    demo.pathplanning.model.Node var93 = var39.getNode(var86);
    java.lang.String var94 = var86.toString();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var3 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var4 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var9 + "' != '" + "0,\n"+ "'", var9.equals("0,\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var18 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var19);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var30 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var40 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var50 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var51);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var52 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var53 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var54 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var65 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var66 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var67 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var71 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var72 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var73 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var76 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var80 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var81 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var82 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var87 + "' != '" + "(1,1)"+ "'", var87.equals("(1,1)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var88);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var89 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var90 + "' != '" + "(1,1)"+ "'", var90.equals("(1,1)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var91 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var92 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var93);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var94 + "' != '" + "(1,1)"+ "'", var94.equals("(1,1)"));

  }

  public void test89() throws Throwable {

    demo.pathplanning.model.CartesianGraph var2 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var3 = var2.getXSize();
    demo.pathplanning.algorithms.AStar var4 = new demo.pathplanning.algorithms.AStar(var2);
    demo.pathplanning.model.CartesianGraph var7 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var10 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var11 = new demo.pathplanning.model.Location(1, 1);
    boolean var13 = var11.equals((java.lang.Object)0L);
    demo.pathplanning.model.Node var14 = var2.getNode(var11);
    int var15 = var2.getXSize();
    java.lang.String var16 = var2.toString();
    demo.pathplanning.model.CartesianGraph var19 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var22 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var23 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var26 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var27 = var26.getXSize();
    int var28 = var26.getYSize();
    int var29 = var26.getYSize();
    demo.pathplanning.model.CartesianGraph var32 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var33 = var32.getXSize();
    int var34 = var32.getYSize();
    int var35 = var32.getYSize();
    demo.pathplanning.model.CartesianGraph var36 = new demo.pathplanning.model.CartesianGraph(var29, var35);
    demo.pathplanning.model.CartesianGraph var37 = new demo.pathplanning.model.CartesianGraph(1, var29);
    demo.pathplanning.model.CartesianGraph var40 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var43 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var44 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var47 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var48 = var47.getXSize();
    int var49 = var47.getYSize();
    int var50 = var47.getYSize();
    demo.pathplanning.model.CartesianGraph var53 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var54 = var53.getXSize();
    int var55 = var53.getYSize();
    int var56 = var53.getYSize();
    demo.pathplanning.model.CartesianGraph var57 = new demo.pathplanning.model.CartesianGraph(var50, var56);
    demo.pathplanning.model.CartesianGraph var58 = new demo.pathplanning.model.CartesianGraph(1, var50);
    demo.pathplanning.model.Location var59 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var62 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var65 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var66 = new demo.pathplanning.model.Location(1, 1);
    int var67 = var66.getY();
    demo.pathplanning.model.Node var68 = new demo.pathplanning.model.Node(var2, var59, var67);
    java.lang.String var69 = var2.toString();
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      demo.pathplanning.model.Direction var70 = demo.pathplanning.model.Direction.valueOf(var69);
      fail("Expected exception of type java.lang.IllegalArgumentException");
    } catch (java.lang.IllegalArgumentException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var3 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var13 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var14);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var15 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var16 + "' != '" + "0,\n"+ "'", var16.equals("0,\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var27 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var28 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var29 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var33 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var34 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var35 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var48 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var49 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var50 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var54 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var55 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var56 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var67 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var69 + "' != '" + "0,\n"+ "'", var69.equals("0,\n"));

  }

  public void test90() throws Throwable {

    demo.pathplanning.model.CartesianGraph var2 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.algorithms.AStar var3 = new demo.pathplanning.algorithms.AStar(var2);
    demo.pathplanning.model.CartesianGraph var4 = var3.getGraph();
    demo.pathplanning.model.CartesianGraph var5 = var3.getGraph();
    demo.pathplanning.algorithms.PathPlanningContext var6 = new demo.pathplanning.algorithms.PathPlanningContext((demo.pathplanning.algorithms.PathPlanner)var3);
    demo.pathplanning.model.CartesianGraph var7 = var3.getGraph();
    int var8 = var7.getYSize();
    demo.pathplanning.model.CartesianGraph var11 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var14 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var15 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var18 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var21 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var22 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.Node var23 = new demo.pathplanning.model.Node(var7, var15, 1);
    java.lang.String var24 = var23.toString();
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      demo.pathplanning.model.Direction var25 = demo.pathplanning.model.Direction.valueOf(var24);
      fail("Expected exception of type java.lang.IllegalArgumentException");
    } catch (java.lang.IllegalArgumentException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var8 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var24 + "' != '" + "(1,1)=1"+ "'", var24.equals("(1,1)=1"));

  }

  public void test91() throws Throwable {

    demo.pathplanning.model.CartesianGraph var2 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var3 = var2.getXSize();
    int var4 = var2.getYSize();
    int var5 = var2.getYSize();
    demo.pathplanning.model.CartesianGraph var8 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var9 = var8.getXSize();
    int var10 = var8.getYSize();
    int var11 = var8.getYSize();
    demo.pathplanning.model.CartesianGraph var12 = new demo.pathplanning.model.CartesianGraph(var5, var11);
    demo.pathplanning.algorithms.AStar var13 = new demo.pathplanning.algorithms.AStar(var12);
    demo.pathplanning.model.CartesianGraph var16 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var17 = var16.getXSize();
    int var18 = var16.getYSize();
    int var19 = var16.getYSize();
    demo.pathplanning.model.CartesianGraph var22 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var23 = var22.getXSize();
    int var24 = var22.getYSize();
    int var25 = var22.getYSize();
    demo.pathplanning.model.CartesianGraph var26 = new demo.pathplanning.model.CartesianGraph(var19, var25);
    demo.pathplanning.model.CartesianGraph var29 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var32 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var33 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var34 = new demo.pathplanning.model.CartesianGraph(var19, 1);
    java.lang.String var35 = var34.toString();
    demo.pathplanning.model.CartesianGraph var38 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var41 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var42 = new demo.pathplanning.model.Location(1, 1);
    boolean var44 = var42.equals((java.lang.Object)0L);
    demo.pathplanning.model.Node var45 = var34.getNode(var42);
    int var46 = var42.getY();
    demo.pathplanning.model.CartesianGraph var49 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var50 = var49.getXSize();
    demo.pathplanning.algorithms.AStar var51 = new demo.pathplanning.algorithms.AStar(var49);
    demo.pathplanning.model.CartesianGraph var54 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var57 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var58 = new demo.pathplanning.model.Location(1, 1);
    boolean var60 = var58.equals((java.lang.Object)0L);
    demo.pathplanning.model.Node var61 = var49.getNode(var58);
    int var62 = var49.getYSize();
    demo.pathplanning.model.CartesianGraph var65 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var66 = var65.getXSize();
    int var67 = var65.getYSize();
    int var68 = var65.getYSize();
    demo.pathplanning.model.CartesianGraph var71 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var72 = var71.getXSize();
    int var73 = var71.getYSize();
    int var74 = var71.getYSize();
    demo.pathplanning.model.CartesianGraph var75 = new demo.pathplanning.model.CartesianGraph(var68, var74);
    demo.pathplanning.model.CartesianGraph var78 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var81 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var82 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var83 = new demo.pathplanning.model.CartesianGraph(var68, 1);
    int var84 = var83.getXSize();
    demo.pathplanning.model.CartesianGraph var87 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var88 = var87.getXSize();
    int var89 = var87.getYSize();
    int var90 = var87.getYSize();
    demo.pathplanning.model.CartesianGraph var91 = new demo.pathplanning.model.CartesianGraph(var84, var90);
    demo.pathplanning.model.CartesianGraph var92 = new demo.pathplanning.model.CartesianGraph(var62, var84);
    demo.pathplanning.model.Node var93 = new demo.pathplanning.model.Node(var12, var42, var84);
    java.lang.String var94 = var93.toString();
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      demo.pathplanning.model.Direction var95 = demo.pathplanning.model.Direction.valueOf(var94);
      fail("Expected exception of type java.lang.IllegalArgumentException");
    } catch (java.lang.IllegalArgumentException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var3 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var4 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var5 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var9 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var11 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var17 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var18 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var19 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var23 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var24 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var25 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var35 + "' != '" + "0,\n"+ "'", var35.equals("0,\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var44 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var45);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var46 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var50 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var60 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var61);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var62 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var66 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var67 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var68 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var72 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var73 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var74 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var84 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var88 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var89 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var90 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var94 + "' != '" + "(1,1)=1"+ "'", var94.equals("(1,1)=1"));

  }

  public void test92() throws Throwable {

    demo.pathplanning.model.CartesianGraph var2 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.algorithms.AStar var3 = new demo.pathplanning.algorithms.AStar(var2);
    demo.pathplanning.model.CartesianGraph var4 = var3.getGraph();
    demo.pathplanning.model.CartesianGraph var5 = var3.getGraph();
    demo.pathplanning.algorithms.PathPlanningContext var6 = new demo.pathplanning.algorithms.PathPlanningContext((demo.pathplanning.algorithms.PathPlanner)var3);
    demo.pathplanning.model.CartesianGraph var7 = var3.getGraph();
    int var8 = var7.getYSize();
    demo.pathplanning.model.CartesianGraph var11 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var14 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var15 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var18 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var21 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var22 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.Node var23 = new demo.pathplanning.model.Node(var7, var15, 1);
    java.lang.String var24 = var15.toString();
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      demo.pathplanning.model.Direction var25 = demo.pathplanning.model.Direction.valueOf(var24);
      fail("Expected exception of type java.lang.IllegalArgumentException");
    } catch (java.lang.IllegalArgumentException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var8 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var24 + "' != '" + "(1,1)"+ "'", var24.equals("(1,1)"));

  }

  public void test93() throws Throwable {

    demo.pathplanning.model.CartesianGraph var2 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.algorithms.AStar var3 = new demo.pathplanning.algorithms.AStar(var2);
    demo.pathplanning.algorithms.AStar var4 = new demo.pathplanning.algorithms.AStar(var2);
    demo.pathplanning.algorithms.PathPlanningContext var5 = new demo.pathplanning.algorithms.PathPlanningContext((demo.pathplanning.algorithms.PathPlanner)var4);
    demo.pathplanning.model.CartesianGraph var8 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var11 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var12 = new demo.pathplanning.model.Location(1, 1);
    int var13 = var12.getX();
    demo.pathplanning.model.CartesianGraph var16 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var19 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var20 = new demo.pathplanning.model.Location(1, 1);
    boolean var22 = var20.equals((java.lang.Object)0L);
    int var23 = var20.getX();
    int var24 = var20.getX();
    int var25 = var20.getY();
    demo.pathplanning.model.CartesianGraph var28 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var29 = var28.getXSize();
    demo.pathplanning.algorithms.AStar var30 = new demo.pathplanning.algorithms.AStar(var28);
    demo.pathplanning.model.CartesianGraph var33 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var36 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var37 = new demo.pathplanning.model.Location(1, 1);
    boolean var39 = var37.equals((java.lang.Object)0L);
    demo.pathplanning.model.Node var40 = var28.getNode(var37);
    boolean var41 = var20.equals((java.lang.Object)var37);
    int var42 = var37.getY();
    boolean var43 = var12.equals((java.lang.Object)var37);
    demo.pathplanning.model.CartesianGraph var46 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.algorithms.AStar var47 = new demo.pathplanning.algorithms.AStar(var46);
    demo.pathplanning.model.CartesianGraph var48 = var47.getGraph();
    demo.pathplanning.model.CartesianGraph var49 = var47.getGraph();
    demo.pathplanning.algorithms.PathPlanningContext var50 = new demo.pathplanning.algorithms.PathPlanningContext((demo.pathplanning.algorithms.PathPlanner)var47);
    demo.pathplanning.model.CartesianGraph var51 = var47.getGraph();
    int var52 = var51.getYSize();
    demo.pathplanning.model.CartesianGraph var55 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var58 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var59 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var62 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var65 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var66 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.Node var67 = new demo.pathplanning.model.Node(var51, var59, 1);
    java.lang.String var68 = var59.toString();
    java.util.List var69 = var5.getPath(var12, var59);

  }

  public void test94() throws Throwable {

    demo.pathplanning.model.CartesianGraph var2 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var5 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var6 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.Location var8 = new demo.pathplanning.model.Location(1, (-1));
    demo.pathplanning.model.CartesianGraph var11 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var12 = var11.getXSize();
    int var13 = var11.getYSize();
    int var14 = var11.getYSize();
    demo.pathplanning.model.CartesianGraph var17 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var18 = var17.getXSize();
    int var19 = var17.getYSize();
    int var20 = var17.getYSize();
    demo.pathplanning.model.CartesianGraph var21 = new demo.pathplanning.model.CartesianGraph(var14, var20);
    demo.pathplanning.model.CartesianGraph var24 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var27 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var28 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var29 = new demo.pathplanning.model.CartesianGraph(var14, 1);
    int var30 = var29.getXSize();
    demo.pathplanning.model.CartesianGraph var33 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var34 = var33.getXSize();
    int var35 = var33.getYSize();
    int var36 = var33.getYSize();
    demo.pathplanning.model.CartesianGraph var37 = new demo.pathplanning.model.CartesianGraph(var30, var36);
    demo.pathplanning.model.CartesianGraph var40 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var43 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var44 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var47 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var48 = var47.getXSize();
    int var49 = var47.getYSize();
    int var50 = var47.getYSize();
    demo.pathplanning.model.CartesianGraph var53 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var54 = var53.getXSize();
    int var55 = var53.getYSize();
    int var56 = var53.getYSize();
    demo.pathplanning.model.CartesianGraph var57 = new demo.pathplanning.model.CartesianGraph(var50, var56);
    demo.pathplanning.model.CartesianGraph var58 = new demo.pathplanning.model.CartesianGraph(1, var50);
    demo.pathplanning.model.CartesianGraph var61 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var64 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var65 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var68 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var69 = var68.getXSize();
    int var70 = var68.getYSize();
    int var71 = var68.getYSize();
    demo.pathplanning.model.CartesianGraph var74 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var75 = var74.getXSize();
    int var76 = var74.getYSize();
    int var77 = var74.getYSize();
    demo.pathplanning.model.CartesianGraph var78 = new demo.pathplanning.model.CartesianGraph(var71, var77);
    demo.pathplanning.model.CartesianGraph var79 = new demo.pathplanning.model.CartesianGraph(1, var71);
    demo.pathplanning.model.Location var80 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.Location var81 = new demo.pathplanning.model.Location(var30, 1);
    int var82 = var81.getX();
    demo.pathplanning.model.CartesianGraph var85 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var86 = var85.getXSize();
    int var87 = var85.getYSize();
    int var88 = var85.getYSize();
    demo.pathplanning.model.CartesianGraph var91 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var92 = var91.getXSize();
    int var93 = var91.getYSize();
    int var94 = var91.getYSize();
    demo.pathplanning.model.CartesianGraph var95 = new demo.pathplanning.model.CartesianGraph(var88, var94);
    demo.pathplanning.model.Location var96 = new demo.pathplanning.model.Location(var82, var94);
    demo.pathplanning.model.Location var97 = new demo.pathplanning.model.Location((-1), var94);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var12 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var13 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var14 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var18 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var19 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var20 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var30 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var34 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var35 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var36 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var48 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var49 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var50 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var54 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var55 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var56 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var69 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var70 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var71 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var75 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var76 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var77 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var82 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var86 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var87 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var88 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var92 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var93 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var94 == 1);

  }

  public void test95() throws Throwable {

    demo.pathplanning.model.CartesianGraph var2 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var3 = var2.getXSize();
    int var4 = var2.getYSize();
    int var5 = var2.getYSize();
    demo.pathplanning.model.CartesianGraph var8 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var9 = var8.getXSize();
    int var10 = var8.getYSize();
    int var11 = var8.getYSize();
    demo.pathplanning.model.CartesianGraph var12 = new demo.pathplanning.model.CartesianGraph(var5, var11);
    demo.pathplanning.model.CartesianGraph var15 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var18 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var19 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var20 = new demo.pathplanning.model.CartesianGraph(var5, 1);
    java.lang.String var21 = var20.toString();
    demo.pathplanning.model.CartesianGraph var24 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var27 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var28 = new demo.pathplanning.model.Location(1, 1);
    boolean var30 = var28.equals((java.lang.Object)0L);
    demo.pathplanning.model.Node var31 = var20.getNode(var28);
    demo.pathplanning.model.CartesianGraph var34 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var37 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var38 = new demo.pathplanning.model.Location(1, 1);
    boolean var40 = var38.equals((java.lang.Object)0L);
    int var41 = var38.getX();
    int var42 = var38.getX();
    demo.pathplanning.model.CartesianGraph var45 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var46 = var45.getXSize();
    demo.pathplanning.model.Node var47 = new demo.pathplanning.model.Node(var20, var38, var46);
    java.lang.String var48 = var47.toString();
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      demo.pathplanning.model.Direction var49 = demo.pathplanning.model.Direction.valueOf(var48);
      fail("Expected exception of type java.lang.IllegalArgumentException");
    } catch (java.lang.IllegalArgumentException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var3 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var4 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var5 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var9 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var11 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var21 + "' != '" + "0,\n"+ "'", var21.equals("0,\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var30 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var31);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var40 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var41 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var42 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var46 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var48 + "' != '" + "(1,1)=1"+ "'", var48.equals("(1,1)=1"));

  }

  public void test96() throws Throwable {

    demo.pathplanning.model.CartesianGraph var2 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.algorithms.AStar var3 = new demo.pathplanning.algorithms.AStar(var2);
    demo.pathplanning.model.CartesianGraph var4 = var3.getGraph();
    demo.pathplanning.model.CartesianGraph var5 = var3.getGraph();
    demo.pathplanning.model.CartesianGraph var6 = var3.getGraph();
    demo.pathplanning.algorithms.PathPlanningContext var7 = new demo.pathplanning.algorithms.PathPlanningContext((demo.pathplanning.algorithms.PathPlanner)var3);
    demo.pathplanning.model.CartesianGraph var10 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var11 = var10.getXSize();
    demo.pathplanning.algorithms.AStar var12 = new demo.pathplanning.algorithms.AStar(var10);
    demo.pathplanning.model.CartesianGraph var15 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var18 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var19 = new demo.pathplanning.model.Location(1, 1);
    boolean var21 = var19.equals((java.lang.Object)0L);
    demo.pathplanning.model.Node var22 = var10.getNode(var19);
    int var23 = var19.getY();
    demo.pathplanning.model.CartesianGraph var26 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.algorithms.AStar var27 = new demo.pathplanning.algorithms.AStar(var26);
    demo.pathplanning.model.CartesianGraph var28 = var27.getGraph();
    demo.pathplanning.model.CartesianGraph var29 = var27.getGraph();
    demo.pathplanning.algorithms.PathPlanningContext var30 = new demo.pathplanning.algorithms.PathPlanningContext((demo.pathplanning.algorithms.PathPlanner)var27);
    demo.pathplanning.model.CartesianGraph var31 = var27.getGraph();
    int var32 = var31.getYSize();
    demo.pathplanning.model.CartesianGraph var35 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var38 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var39 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var42 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var45 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var46 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.Node var47 = new demo.pathplanning.model.Node(var31, var39, 1);
    int var48 = var47.getCost();
    demo.pathplanning.model.CartesianGraph var51 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var52 = var51.getXSize();
    int var53 = var51.getYSize();
    int var54 = var51.getYSize();
    demo.pathplanning.model.CartesianGraph var57 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var58 = new demo.pathplanning.model.Location(var54, 1);
    demo.pathplanning.model.CartesianGraph var59 = new demo.pathplanning.model.CartesianGraph(var48, 1);
    demo.pathplanning.model.CartesianGraph var62 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var65 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var66 = new demo.pathplanning.model.Location(1, 1);
    boolean var68 = var66.equals((java.lang.Object)0L);
    int var69 = var66.getX();
    demo.pathplanning.model.Node var70 = var59.getNode(var66);
    java.util.List var71 = var7.getPath(var19, var66);

  }

  public void test97() throws Throwable {

    demo.pathplanning.model.CartesianGraph var2 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var3 = var2.getXSize();
    demo.pathplanning.algorithms.AStar var4 = new demo.pathplanning.algorithms.AStar(var2);
    demo.pathplanning.model.CartesianGraph var7 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var10 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var11 = new demo.pathplanning.model.Location(1, 1);
    boolean var13 = var11.equals((java.lang.Object)0L);
    demo.pathplanning.model.Node var14 = var2.getNode(var11);
    int var15 = var2.getYSize();
    demo.pathplanning.model.CartesianGraph var18 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var19 = var18.getXSize();
    int var20 = var18.getYSize();
    int var21 = var18.getYSize();
    demo.pathplanning.model.CartesianGraph var24 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var25 = new demo.pathplanning.model.Location(var21, 1);
    java.lang.String var26 = var25.toString();
    demo.pathplanning.model.CartesianGraph var29 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var32 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var33 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var36 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var37 = var36.getXSize();
    int var38 = var36.getYSize();
    int var39 = var36.getYSize();
    demo.pathplanning.model.CartesianGraph var42 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var43 = var42.getXSize();
    int var44 = var42.getYSize();
    int var45 = var42.getYSize();
    demo.pathplanning.model.CartesianGraph var46 = new demo.pathplanning.model.CartesianGraph(var39, var45);
    demo.pathplanning.model.CartesianGraph var47 = new demo.pathplanning.model.CartesianGraph(1, var39);
    demo.pathplanning.model.Node var48 = new demo.pathplanning.model.Node(var2, var25, var39);
    demo.pathplanning.algorithms.AStar var49 = new demo.pathplanning.algorithms.AStar(var2);
    demo.pathplanning.model.CartesianGraph var50 = var49.getGraph();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var3 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var13 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var14);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var15 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var19 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var20 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var21 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var26 + "' != '" + "(1,1)"+ "'", var26.equals("(1,1)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var37 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var38 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var39 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var43 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var44 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var45 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var50);

  }

  public void test98() throws Throwable {

    demo.pathplanning.model.CartesianGraph var2 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var3 = var2.getXSize();
    int var4 = var2.getYSize();
    int var5 = var2.getYSize();
    demo.pathplanning.model.CartesianGraph var8 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var9 = var8.getXSize();
    int var10 = var8.getYSize();
    int var11 = var8.getYSize();
    demo.pathplanning.model.CartesianGraph var12 = new demo.pathplanning.model.CartesianGraph(var5, var11);
    demo.pathplanning.model.CartesianGraph var15 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var18 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var19 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var20 = new demo.pathplanning.model.CartesianGraph(var5, 1);
    int var21 = var20.getXSize();
    demo.pathplanning.model.CartesianGraph var24 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var25 = var24.getXSize();
    int var26 = var24.getYSize();
    int var27 = var24.getYSize();
    demo.pathplanning.model.CartesianGraph var28 = new demo.pathplanning.model.CartesianGraph(var21, var27);
    demo.pathplanning.model.CartesianGraph var31 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var34 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var35 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var38 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var39 = var38.getXSize();
    int var40 = var38.getYSize();
    int var41 = var38.getYSize();
    demo.pathplanning.model.CartesianGraph var44 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var45 = var44.getXSize();
    int var46 = var44.getYSize();
    int var47 = var44.getYSize();
    demo.pathplanning.model.CartesianGraph var48 = new demo.pathplanning.model.CartesianGraph(var41, var47);
    demo.pathplanning.model.CartesianGraph var49 = new demo.pathplanning.model.CartesianGraph(1, var41);
    demo.pathplanning.model.CartesianGraph var52 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var55 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var56 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var59 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var60 = var59.getXSize();
    int var61 = var59.getYSize();
    int var62 = var59.getYSize();
    demo.pathplanning.model.CartesianGraph var65 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var66 = var65.getXSize();
    int var67 = var65.getYSize();
    int var68 = var65.getYSize();
    demo.pathplanning.model.CartesianGraph var69 = new demo.pathplanning.model.CartesianGraph(var62, var68);
    demo.pathplanning.model.CartesianGraph var70 = new demo.pathplanning.model.CartesianGraph(1, var62);
    demo.pathplanning.model.Location var71 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.Location var72 = new demo.pathplanning.model.Location(var21, 1);
    int var73 = var72.getX();
    demo.pathplanning.model.CartesianGraph var76 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var77 = var76.getXSize();
    int var78 = var76.getYSize();
    int var79 = var76.getYSize();
    demo.pathplanning.model.CartesianGraph var82 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var83 = var82.getXSize();
    int var84 = var82.getYSize();
    int var85 = var82.getYSize();
    demo.pathplanning.model.CartesianGraph var86 = new demo.pathplanning.model.CartesianGraph(var79, var85);
    demo.pathplanning.model.CartesianGraph var89 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var92 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var93 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var94 = new demo.pathplanning.model.CartesianGraph(var79, 1);
    demo.pathplanning.model.Location var95 = new demo.pathplanning.model.Location(var73, 1);
    boolean var97 = var95.equals((java.lang.Object)0);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var3 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var4 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var5 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var9 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var11 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var21 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var25 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var26 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var27 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var39 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var40 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var41 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var45 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var46 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var47 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var60 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var61 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var62 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var66 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var67 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var68 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var73 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var77 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var78 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var79 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var83 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var84 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var85 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var97 == false);

  }

  public void test99() throws Throwable {

    demo.pathplanning.model.CartesianGraph var3 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var4 = var3.getXSize();
    int var5 = var3.getYSize();
    int var6 = var3.getYSize();
    demo.pathplanning.model.CartesianGraph var9 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var10 = var9.getXSize();
    int var11 = var9.getYSize();
    int var12 = var9.getYSize();
    demo.pathplanning.model.CartesianGraph var13 = new demo.pathplanning.model.CartesianGraph(var6, var12);
    demo.pathplanning.model.CartesianGraph var16 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var19 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var20 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var21 = new demo.pathplanning.model.CartesianGraph(var6, 1);
    demo.pathplanning.model.CartesianGraph var22 = new demo.pathplanning.model.CartesianGraph(0, 1);
    demo.pathplanning.model.CartesianGraph var25 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var26 = var25.getXSize();
    demo.pathplanning.algorithms.AStar var27 = new demo.pathplanning.algorithms.AStar(var25);
    demo.pathplanning.model.CartesianGraph var30 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var33 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var34 = new demo.pathplanning.model.Location(1, 1);
    boolean var36 = var34.equals((java.lang.Object)0L);
    demo.pathplanning.model.Node var37 = var25.getNode(var34);
    demo.pathplanning.algorithms.AStar var38 = new demo.pathplanning.algorithms.AStar(var25);
    demo.pathplanning.algorithms.PathPlanningContext var39 = new demo.pathplanning.algorithms.PathPlanningContext((demo.pathplanning.algorithms.PathPlanner)var38);
    demo.pathplanning.model.CartesianGraph var40 = var38.getGraph();
    java.lang.String var41 = var40.toString();
    int var42 = var40.getXSize();
    demo.pathplanning.model.CartesianGraph var43 = new demo.pathplanning.model.CartesianGraph(1, var42);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var4 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var5 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var6 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var11 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var12 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var26 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var36 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var37);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var40);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var41 + "' != '" + "0,\n"+ "'", var41.equals("0,\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var42 == 1);

  }

  public void test100() throws Throwable {

    demo.pathplanning.model.CartesianGraph var2 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var3 = var2.getXSize();
    int var4 = var2.getYSize();
    int var5 = var2.getYSize();
    demo.pathplanning.model.CartesianGraph var8 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var9 = var8.getXSize();
    int var10 = var8.getYSize();
    int var11 = var8.getYSize();
    demo.pathplanning.model.CartesianGraph var12 = new demo.pathplanning.model.CartesianGraph(var5, var11);
    java.lang.String var13 = var12.toString();
    demo.pathplanning.model.CartesianGraph var16 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.algorithms.AStar var17 = new demo.pathplanning.algorithms.AStar(var16);
    java.lang.String var18 = var16.toString();
    demo.pathplanning.model.CartesianGraph var21 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var24 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var25 = new demo.pathplanning.model.Location(1, 1);
    boolean var27 = var25.equals((java.lang.Object)0L);
    demo.pathplanning.model.Node var28 = var16.getNode(var25);
    java.lang.String var29 = var25.toString();
    demo.pathplanning.model.CartesianGraph var32 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.algorithms.AStar var33 = new demo.pathplanning.algorithms.AStar(var32);
    demo.pathplanning.model.CartesianGraph var34 = var33.getGraph();
    demo.pathplanning.model.CartesianGraph var35 = var33.getGraph();
    demo.pathplanning.algorithms.PathPlanningContext var36 = new demo.pathplanning.algorithms.PathPlanningContext((demo.pathplanning.algorithms.PathPlanner)var33);
    demo.pathplanning.model.CartesianGraph var37 = var33.getGraph();
    int var38 = var37.getYSize();
    demo.pathplanning.model.CartesianGraph var41 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var44 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var45 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var48 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var51 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var52 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.Node var53 = new demo.pathplanning.model.Node(var37, var45, 1);
    boolean var54 = var25.equals((java.lang.Object)1);
    int var55 = var25.getX();
    demo.pathplanning.model.CartesianGraph var58 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var59 = var58.getXSize();
    int var60 = var58.getYSize();
    int var61 = var58.getYSize();
    demo.pathplanning.model.CartesianGraph var64 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var65 = new demo.pathplanning.model.Location(var61, 1);
    demo.pathplanning.model.Node var66 = new demo.pathplanning.model.Node(var12, var25, var61);
    demo.pathplanning.model.CartesianGraph var69 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var70 = var69.getXSize();
    int var71 = var69.getYSize();
    int var72 = var69.getYSize();
    demo.pathplanning.model.CartesianGraph var75 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var76 = new demo.pathplanning.model.Location(var72, 1);
    demo.pathplanning.model.CartesianGraph var77 = new demo.pathplanning.model.CartesianGraph(var61, 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var3 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var4 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var5 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var9 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var11 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var13 + "' != '" + "0,\n"+ "'", var13.equals("0,\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var18 + "' != '" + "0,\n"+ "'", var18.equals("0,\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var27 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var28);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var29 + "' != '" + "(1,1)"+ "'", var29.equals("(1,1)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var34);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var35);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var37);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var38 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var54 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var55 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var59 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var60 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var61 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var70 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var71 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var72 == 1);

  }

  public void test101() throws Throwable {

    demo.pathplanning.model.CartesianGraph var2 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.algorithms.AStar var3 = new demo.pathplanning.algorithms.AStar(var2);
    demo.pathplanning.model.CartesianGraph var4 = var3.getGraph();
    demo.pathplanning.model.CartesianGraph var5 = var3.getGraph();
    demo.pathplanning.algorithms.PathPlanningContext var6 = new demo.pathplanning.algorithms.PathPlanningContext((demo.pathplanning.algorithms.PathPlanner)var3);
    demo.pathplanning.model.CartesianGraph var7 = var3.getGraph();
    int var8 = var7.getYSize();
    demo.pathplanning.model.CartesianGraph var11 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var14 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var15 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var18 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var21 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var22 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.Node var23 = new demo.pathplanning.model.Node(var7, var15, 1);
    java.util.Collection var24 = var23.getNeighbors();
    int var25 = var23.getCost();
    int var26 = var23.getCost();
    demo.pathplanning.model.CartesianGraph var29 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var30 = var29.getXSize();
    int var31 = var29.getYSize();
    int var32 = var29.getYSize();
    demo.pathplanning.model.CartesianGraph var35 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var36 = var35.getXSize();
    int var37 = var35.getYSize();
    int var38 = var35.getYSize();
    demo.pathplanning.model.CartesianGraph var39 = new demo.pathplanning.model.CartesianGraph(var32, var38);
    demo.pathplanning.model.CartesianGraph var42 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var45 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var46 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var47 = new demo.pathplanning.model.CartesianGraph(var32, 1);
    java.lang.String var48 = var47.toString();
    demo.pathplanning.model.CartesianGraph var51 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var54 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var55 = new demo.pathplanning.model.Location(1, 1);
    boolean var57 = var55.equals((java.lang.Object)0L);
    demo.pathplanning.model.Node var58 = var47.getNode(var55);
    demo.pathplanning.model.CartesianGraph var61 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var64 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var65 = new demo.pathplanning.model.Location(1, 1);
    boolean var67 = var65.equals((java.lang.Object)0L);
    int var68 = var65.getX();
    int var69 = var65.getX();
    demo.pathplanning.model.CartesianGraph var72 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var73 = var72.getXSize();
    demo.pathplanning.model.Node var74 = new demo.pathplanning.model.Node(var47, var65, var73);
    boolean var75 = var23.equals((java.lang.Object)var73);
    java.util.Collection var76 = var23.getNeighbors();
    int var77 = var23.getCost();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var8 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var24);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var25 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var26 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var30 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var31 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var32 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var36 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var37 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var38 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var48 + "' != '" + "0,\n"+ "'", var48.equals("0,\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var57 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var58);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var67 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var68 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var69 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var73 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var75 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var76);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var77 == 1);

  }

  public void test102() throws Throwable {

    demo.pathplanning.model.CartesianGraph var2 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.algorithms.AStar var3 = new demo.pathplanning.algorithms.AStar(var2);
    demo.pathplanning.model.CartesianGraph var4 = var3.getGraph();
    demo.pathplanning.model.CartesianGraph var5 = var3.getGraph();
    demo.pathplanning.algorithms.PathPlanningContext var6 = new demo.pathplanning.algorithms.PathPlanningContext((demo.pathplanning.algorithms.PathPlanner)var3);
    demo.pathplanning.model.CartesianGraph var7 = var3.getGraph();
    int var8 = var7.getYSize();
    demo.pathplanning.model.CartesianGraph var11 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var14 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var15 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var18 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var21 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var22 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.Node var23 = new demo.pathplanning.model.Node(var7, var15, 1);
    int var24 = var23.getCost();
    demo.pathplanning.model.CartesianGraph var27 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var28 = var27.getXSize();
    int var29 = var27.getYSize();
    int var30 = var27.getYSize();
    demo.pathplanning.model.CartesianGraph var33 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var34 = new demo.pathplanning.model.Location(var30, 1);
    demo.pathplanning.model.CartesianGraph var35 = new demo.pathplanning.model.CartesianGraph(var24, 1);
    demo.pathplanning.model.CartesianGraph var38 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.algorithms.AStar var39 = new demo.pathplanning.algorithms.AStar(var38);
    demo.pathplanning.model.CartesianGraph var40 = var39.getGraph();
    demo.pathplanning.model.CartesianGraph var41 = var39.getGraph();
    demo.pathplanning.algorithms.PathPlanningContext var42 = new demo.pathplanning.algorithms.PathPlanningContext((demo.pathplanning.algorithms.PathPlanner)var39);
    demo.pathplanning.model.CartesianGraph var43 = var39.getGraph();
    int var44 = var43.getYSize();
    demo.pathplanning.model.CartesianGraph var45 = new demo.pathplanning.model.CartesianGraph(1, var44);
    int var46 = var45.getXSize();
    demo.pathplanning.model.CartesianGraph var49 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.algorithms.AStar var50 = new demo.pathplanning.algorithms.AStar(var49);
    demo.pathplanning.model.CartesianGraph var51 = var50.getGraph();
    demo.pathplanning.model.CartesianGraph var52 = var50.getGraph();
    demo.pathplanning.algorithms.PathPlanningContext var53 = new demo.pathplanning.algorithms.PathPlanningContext((demo.pathplanning.algorithms.PathPlanner)var50);
    demo.pathplanning.model.CartesianGraph var54 = var50.getGraph();
    int var55 = var54.getYSize();
    demo.pathplanning.model.CartesianGraph var58 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var61 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var62 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var65 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var68 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var69 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.Node var70 = new demo.pathplanning.model.Node(var54, var62, 1);
    int var71 = var70.getCost();
    demo.pathplanning.model.CartesianGraph var74 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var75 = var74.getXSize();
    int var76 = var74.getYSize();
    int var77 = var74.getYSize();
    demo.pathplanning.model.CartesianGraph var80 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var81 = new demo.pathplanning.model.Location(var77, 1);
    demo.pathplanning.model.CartesianGraph var82 = new demo.pathplanning.model.CartesianGraph(var71, 1);
    demo.pathplanning.model.CartesianGraph var85 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var88 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var89 = new demo.pathplanning.model.Location(1, 1);
    boolean var91 = var89.equals((java.lang.Object)0L);
    demo.pathplanning.model.Node var92 = var82.getNode(var89);
    demo.pathplanning.model.Node var93 = var45.getNode(var89);
    demo.pathplanning.algorithms.AStar var94 = new demo.pathplanning.algorithms.AStar(var45);
    int var95 = var45.getYSize();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var8 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var24 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var28 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var29 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var30 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var40);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var41);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var43);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var44 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var46 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var51);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var52);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var54);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var55 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var71 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var75 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var76 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var77 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var91 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var92);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var93);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var95 == 1);

  }

  public void test103() throws Throwable {

    demo.pathplanning.model.CartesianGraph var2 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.algorithms.AStar var3 = new demo.pathplanning.algorithms.AStar(var2);
    demo.pathplanning.model.CartesianGraph var4 = var3.getGraph();
    demo.pathplanning.model.CartesianGraph var5 = var3.getGraph();
    demo.pathplanning.algorithms.PathPlanningContext var6 = new demo.pathplanning.algorithms.PathPlanningContext((demo.pathplanning.algorithms.PathPlanner)var3);
    demo.pathplanning.model.CartesianGraph var7 = var3.getGraph();
    int var8 = var7.getYSize();
    demo.pathplanning.model.CartesianGraph var11 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var14 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var15 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var18 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var21 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var22 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.Node var23 = new demo.pathplanning.model.Node(var7, var15, 1);
    int var24 = var23.getCost();
    demo.pathplanning.model.CartesianGraph var27 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var28 = var27.getXSize();
    int var29 = var27.getYSize();
    int var30 = var27.getYSize();
    demo.pathplanning.model.CartesianGraph var33 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var34 = new demo.pathplanning.model.Location(var30, 1);
    demo.pathplanning.model.CartesianGraph var35 = new demo.pathplanning.model.CartesianGraph(var24, 1);
    demo.pathplanning.model.CartesianGraph var38 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.algorithms.AStar var39 = new demo.pathplanning.algorithms.AStar(var38);
    demo.pathplanning.model.CartesianGraph var40 = var39.getGraph();
    demo.pathplanning.model.CartesianGraph var41 = var39.getGraph();
    demo.pathplanning.algorithms.PathPlanningContext var42 = new demo.pathplanning.algorithms.PathPlanningContext((demo.pathplanning.algorithms.PathPlanner)var39);
    demo.pathplanning.model.CartesianGraph var43 = var39.getGraph();
    int var44 = var43.getYSize();
    demo.pathplanning.model.CartesianGraph var45 = new demo.pathplanning.model.CartesianGraph(1, var44);
    int var46 = var45.getXSize();
    demo.pathplanning.model.CartesianGraph var49 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.algorithms.AStar var50 = new demo.pathplanning.algorithms.AStar(var49);
    demo.pathplanning.model.CartesianGraph var51 = var50.getGraph();
    demo.pathplanning.model.CartesianGraph var52 = var50.getGraph();
    demo.pathplanning.algorithms.PathPlanningContext var53 = new demo.pathplanning.algorithms.PathPlanningContext((demo.pathplanning.algorithms.PathPlanner)var50);
    demo.pathplanning.model.CartesianGraph var54 = var50.getGraph();
    int var55 = var54.getYSize();
    demo.pathplanning.model.CartesianGraph var58 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var61 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var62 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var65 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var68 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var69 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.Node var70 = new demo.pathplanning.model.Node(var54, var62, 1);
    int var71 = var70.getCost();
    demo.pathplanning.model.CartesianGraph var74 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var75 = var74.getXSize();
    int var76 = var74.getYSize();
    int var77 = var74.getYSize();
    demo.pathplanning.model.CartesianGraph var80 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var81 = new demo.pathplanning.model.Location(var77, 1);
    demo.pathplanning.model.CartesianGraph var82 = new demo.pathplanning.model.CartesianGraph(var71, 1);
    demo.pathplanning.model.CartesianGraph var85 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var88 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var89 = new demo.pathplanning.model.Location(1, 1);
    boolean var91 = var89.equals((java.lang.Object)0L);
    demo.pathplanning.model.Node var92 = var82.getNode(var89);
    demo.pathplanning.model.Node var93 = var45.getNode(var89);
    int var94 = var89.getY();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var8 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var24 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var28 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var29 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var30 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var40);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var41);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var43);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var44 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var46 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var51);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var52);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var54);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var55 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var71 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var75 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var76 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var77 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var91 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var92);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var93);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var94 == 1);

  }

  public void test104() throws Throwable {

    demo.pathplanning.model.CartesianGraph var2 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var3 = var2.getXSize();
    int var4 = var2.getYSize();
    int var5 = var2.getYSize();
    demo.pathplanning.model.CartesianGraph var8 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var9 = var8.getXSize();
    int var10 = var8.getYSize();
    int var11 = var8.getYSize();
    demo.pathplanning.model.CartesianGraph var12 = new demo.pathplanning.model.CartesianGraph(var5, var11);
    demo.pathplanning.model.CartesianGraph var15 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var18 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var19 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var20 = new demo.pathplanning.model.CartesianGraph(var5, 1);
    java.lang.String var21 = var20.toString();
    demo.pathplanning.model.CartesianGraph var24 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var27 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var28 = new demo.pathplanning.model.Location(1, 1);
    boolean var30 = var28.equals((java.lang.Object)0L);
    demo.pathplanning.model.Node var31 = var20.getNode(var28);
    demo.pathplanning.model.CartesianGraph var34 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var37 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var38 = new demo.pathplanning.model.Location(1, 1);
    boolean var40 = var38.equals((java.lang.Object)0L);
    int var41 = var38.getX();
    int var42 = var38.getX();
    demo.pathplanning.model.CartesianGraph var45 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var46 = var45.getXSize();
    demo.pathplanning.model.Node var47 = new demo.pathplanning.model.Node(var20, var38, var46);
    demo.pathplanning.algorithms.AStar var48 = new demo.pathplanning.algorithms.AStar(var20);
    int var49 = var20.getYSize();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var3 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var4 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var5 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var9 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var11 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var21 + "' != '" + "0,\n"+ "'", var21.equals("0,\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var30 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var31);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var40 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var41 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var42 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var46 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var49 == 1);

  }

  public void test105() throws Throwable {

    demo.pathplanning.model.CartesianGraph var2 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var3 = var2.getXSize();
    demo.pathplanning.model.CartesianGraph var6 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var7 = new demo.pathplanning.model.CartesianGraph(var3, 1);
    demo.pathplanning.model.CartesianGraph var10 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.algorithms.AStar var11 = new demo.pathplanning.algorithms.AStar(var10);
    demo.pathplanning.model.CartesianGraph var12 = var11.getGraph();
    demo.pathplanning.model.CartesianGraph var13 = var11.getGraph();
    demo.pathplanning.algorithms.PathPlanningContext var14 = new demo.pathplanning.algorithms.PathPlanningContext((demo.pathplanning.algorithms.PathPlanner)var11);
    demo.pathplanning.model.CartesianGraph var15 = var11.getGraph();
    int var16 = var15.getYSize();
    demo.pathplanning.model.CartesianGraph var17 = new demo.pathplanning.model.CartesianGraph(var3, var16);
    demo.pathplanning.model.CartesianGraph var20 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var23 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var24 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var27 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var28 = var27.getXSize();
    demo.pathplanning.model.CartesianGraph var31 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var32 = new demo.pathplanning.model.CartesianGraph(var28, 1);
    demo.pathplanning.model.Location var33 = new demo.pathplanning.model.Location(1, 1);
    int var34 = var33.getX();
    int var35 = var33.getY();
    demo.pathplanning.model.Node var36 = var17.getNode(var33);
    java.lang.String var37 = var17.toString();
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      demo.pathplanning.model.Direction var38 = demo.pathplanning.model.Direction.valueOf(var37);
      fail("Expected exception of type java.lang.IllegalArgumentException");
    } catch (java.lang.IllegalArgumentException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var3 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var12);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var13);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var15);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var16 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var28 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var34 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var35 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var36);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var37 + "' != '" + "0,\n"+ "'", var37.equals("0,\n"));

  }

  public void test106() throws Throwable {

    demo.pathplanning.model.CartesianGraph var2 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var3 = var2.getXSize();
    demo.pathplanning.algorithms.AStar var4 = new demo.pathplanning.algorithms.AStar(var2);
    demo.pathplanning.model.CartesianGraph var7 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var10 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var11 = new demo.pathplanning.model.Location(1, 1);
    boolean var13 = var11.equals((java.lang.Object)0L);
    demo.pathplanning.model.Node var14 = var2.getNode(var11);
    int var15 = var2.getYSize();
    demo.pathplanning.model.CartesianGraph var18 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var19 = var18.getXSize();
    int var20 = var18.getYSize();
    int var21 = var18.getYSize();
    demo.pathplanning.model.CartesianGraph var24 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var25 = var24.getXSize();
    int var26 = var24.getYSize();
    int var27 = var24.getYSize();
    demo.pathplanning.model.CartesianGraph var28 = new demo.pathplanning.model.CartesianGraph(var21, var27);
    demo.pathplanning.model.CartesianGraph var31 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var34 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var35 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var36 = new demo.pathplanning.model.CartesianGraph(var21, 1);
    int var37 = var36.getXSize();
    demo.pathplanning.model.CartesianGraph var40 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var41 = var40.getXSize();
    int var42 = var40.getYSize();
    int var43 = var40.getYSize();
    demo.pathplanning.model.CartesianGraph var44 = new demo.pathplanning.model.CartesianGraph(var37, var43);
    demo.pathplanning.model.CartesianGraph var45 = new demo.pathplanning.model.CartesianGraph(var15, var37);
    demo.pathplanning.model.CartesianGraph var48 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var49 = var48.getXSize();
    int var50 = var48.getYSize();
    int var51 = var48.getYSize();
    demo.pathplanning.model.CartesianGraph var54 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var55 = var54.getXSize();
    int var56 = var54.getYSize();
    int var57 = var54.getYSize();
    demo.pathplanning.model.CartesianGraph var58 = new demo.pathplanning.model.CartesianGraph(var51, var57);
    demo.pathplanning.model.CartesianGraph var61 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var64 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var65 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var66 = new demo.pathplanning.model.CartesianGraph(var51, 1);
    int var67 = var66.getXSize();
    demo.pathplanning.model.CartesianGraph var70 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var71 = var70.getXSize();
    int var72 = var70.getYSize();
    int var73 = var70.getYSize();
    demo.pathplanning.model.CartesianGraph var74 = new demo.pathplanning.model.CartesianGraph(var67, var73);
    demo.pathplanning.model.CartesianGraph var75 = new demo.pathplanning.model.CartesianGraph(var15, var67);
    int var76 = var75.getYSize();
    java.lang.String var77 = var75.toString();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var3 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var13 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var14);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var15 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var19 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var20 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var21 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var25 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var26 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var27 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var37 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var41 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var42 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var43 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var49 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var50 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var51 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var55 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var56 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var57 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var67 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var71 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var72 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var73 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var76 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var77 + "' != '" + "0,\n"+ "'", var77.equals("0,\n"));

  }

  public void test107() throws Throwable {

    demo.pathplanning.model.CartesianGraph var2 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.algorithms.AStar var3 = new demo.pathplanning.algorithms.AStar(var2);
    demo.pathplanning.model.CartesianGraph var4 = var3.getGraph();
    demo.pathplanning.model.CartesianGraph var5 = var3.getGraph();
    demo.pathplanning.model.CartesianGraph var6 = var3.getGraph();
    demo.pathplanning.model.CartesianGraph var9 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var12 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var13 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var16 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var17 = var16.getXSize();
    int var18 = var16.getYSize();
    int var19 = var16.getYSize();
    demo.pathplanning.model.CartesianGraph var22 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var23 = var22.getXSize();
    int var24 = var22.getYSize();
    int var25 = var22.getYSize();
    demo.pathplanning.model.CartesianGraph var26 = new demo.pathplanning.model.CartesianGraph(var19, var25);
    demo.pathplanning.model.CartesianGraph var27 = new demo.pathplanning.model.CartesianGraph(1, var19);
    demo.pathplanning.model.CartesianGraph var30 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var31 = var30.getXSize();
    int var32 = var30.getYSize();
    demo.pathplanning.model.CartesianGraph var35 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var36 = var35.getXSize();
    int var37 = var35.getYSize();
    demo.pathplanning.model.CartesianGraph var40 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.algorithms.AStar var41 = new demo.pathplanning.algorithms.AStar(var40);
    java.lang.String var42 = var40.toString();
    demo.pathplanning.model.CartesianGraph var45 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var48 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var49 = new demo.pathplanning.model.Location(1, 1);
    boolean var51 = var49.equals((java.lang.Object)0L);
    demo.pathplanning.model.Node var52 = var40.getNode(var49);
    demo.pathplanning.model.CartesianGraph var55 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var58 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var59 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var62 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var63 = var62.getXSize();
    demo.pathplanning.model.CartesianGraph var66 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var67 = new demo.pathplanning.model.CartesianGraph(var63, 1);
    demo.pathplanning.model.Location var68 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.Node var69 = new demo.pathplanning.model.Node(var35, var49, 1);
    demo.pathplanning.model.CartesianGraph var70 = new demo.pathplanning.model.CartesianGraph(var32, 1);
    demo.pathplanning.model.CartesianGraph var73 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.algorithms.AStar var74 = new demo.pathplanning.algorithms.AStar(var73);
    demo.pathplanning.model.CartesianGraph var75 = var74.getGraph();
    demo.pathplanning.model.CartesianGraph var76 = var74.getGraph();
    demo.pathplanning.algorithms.PathPlanningContext var77 = new demo.pathplanning.algorithms.PathPlanningContext((demo.pathplanning.algorithms.PathPlanner)var74);
    demo.pathplanning.model.CartesianGraph var78 = var74.getGraph();
    int var79 = var78.getYSize();
    demo.pathplanning.model.CartesianGraph var82 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var85 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var86 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var89 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var92 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var93 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.Node var94 = new demo.pathplanning.model.Node(var78, var86, 1);
    java.util.Collection var95 = var94.getNeighbors();
    int var96 = var94.getCost();
    demo.pathplanning.model.Location var97 = new demo.pathplanning.model.Location(1, var96);
    demo.pathplanning.model.Location var98 = new demo.pathplanning.model.Location(var19, var96);
    demo.pathplanning.model.Node var99 = var6.getNode(var98);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var6);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var17 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var18 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var19 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var23 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var24 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var25 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var31 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var32 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var36 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var37 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var42 + "' != '" + "0,\n"+ "'", var42.equals("0,\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var51 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var52);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var63 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var75);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var76);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var78);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var79 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var95);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var96 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var99);

  }

  public void test108() throws Throwable {

    demo.pathplanning.model.CartesianGraph var2 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var3 = var2.getXSize();
    int var4 = var2.getYSize();
    demo.pathplanning.model.CartesianGraph var7 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.algorithms.AStar var8 = new demo.pathplanning.algorithms.AStar(var7);
    java.lang.String var9 = var7.toString();
    demo.pathplanning.model.CartesianGraph var12 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var15 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var16 = new demo.pathplanning.model.Location(1, 1);
    boolean var18 = var16.equals((java.lang.Object)0L);
    demo.pathplanning.model.Node var19 = var7.getNode(var16);
    demo.pathplanning.model.CartesianGraph var22 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var25 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var26 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var29 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var30 = var29.getXSize();
    demo.pathplanning.model.CartesianGraph var33 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var34 = new demo.pathplanning.model.CartesianGraph(var30, 1);
    demo.pathplanning.model.Location var35 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.Node var36 = new demo.pathplanning.model.Node(var2, var16, 1);
    demo.pathplanning.algorithms.AStar var37 = new demo.pathplanning.algorithms.AStar(var2);
    demo.pathplanning.algorithms.PathPlanningContext var38 = new demo.pathplanning.algorithms.PathPlanningContext((demo.pathplanning.algorithms.PathPlanner)var37);
    demo.pathplanning.model.CartesianGraph var41 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.algorithms.AStar var42 = new demo.pathplanning.algorithms.AStar(var41);
    demo.pathplanning.model.CartesianGraph var43 = var42.getGraph();
    demo.pathplanning.model.CartesianGraph var44 = var42.getGraph();
    demo.pathplanning.algorithms.PathPlanningContext var45 = new demo.pathplanning.algorithms.PathPlanningContext((demo.pathplanning.algorithms.PathPlanner)var42);
    demo.pathplanning.model.CartesianGraph var46 = var42.getGraph();
    int var47 = var46.getYSize();
    demo.pathplanning.model.CartesianGraph var50 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var53 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var54 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var57 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var60 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var61 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.Node var62 = new demo.pathplanning.model.Node(var46, var54, 1);
    java.util.Collection var63 = var62.getNeighbors();
    demo.pathplanning.model.Location var64 = var62.getLocation();
    demo.pathplanning.model.CartesianGraph var67 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var68 = var67.getXSize();
    int var69 = var67.getYSize();
    int var70 = var67.getYSize();
    demo.pathplanning.model.CartesianGraph var73 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var74 = var73.getXSize();
    int var75 = var73.getYSize();
    int var76 = var73.getYSize();
    demo.pathplanning.model.CartesianGraph var77 = new demo.pathplanning.model.CartesianGraph(var70, var76);
    demo.pathplanning.model.CartesianGraph var80 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var83 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var84 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var85 = new demo.pathplanning.model.CartesianGraph(var70, 1);
    java.lang.String var86 = var85.toString();
    demo.pathplanning.model.CartesianGraph var89 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var92 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var93 = new demo.pathplanning.model.Location(1, 1);
    boolean var95 = var93.equals((java.lang.Object)0L);
    demo.pathplanning.model.Node var96 = var85.getNode(var93);
    java.util.List var97 = var38.getPath(var64, var93);

  }

  public void test109() throws Throwable {

    demo.pathplanning.model.CartesianGraph var2 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var3 = var2.getXSize();
    demo.pathplanning.algorithms.AStar var4 = new demo.pathplanning.algorithms.AStar(var2);
    demo.pathplanning.model.CartesianGraph var7 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var10 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var11 = new demo.pathplanning.model.Location(1, 1);
    boolean var13 = var11.equals((java.lang.Object)0L);
    demo.pathplanning.model.Node var14 = var2.getNode(var11);
    int var15 = var2.getYSize();
    demo.pathplanning.model.CartesianGraph var18 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var19 = var18.getXSize();
    int var20 = var18.getYSize();
    int var21 = var18.getYSize();
    demo.pathplanning.model.CartesianGraph var24 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var25 = new demo.pathplanning.model.Location(var21, 1);
    java.lang.String var26 = var25.toString();
    demo.pathplanning.model.CartesianGraph var29 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var32 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var33 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var36 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var37 = var36.getXSize();
    int var38 = var36.getYSize();
    int var39 = var36.getYSize();
    demo.pathplanning.model.CartesianGraph var42 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var43 = var42.getXSize();
    int var44 = var42.getYSize();
    int var45 = var42.getYSize();
    demo.pathplanning.model.CartesianGraph var46 = new demo.pathplanning.model.CartesianGraph(var39, var45);
    demo.pathplanning.model.CartesianGraph var47 = new demo.pathplanning.model.CartesianGraph(1, var39);
    demo.pathplanning.model.Node var48 = new demo.pathplanning.model.Node(var2, var25, var39);
    demo.pathplanning.model.CartesianGraph var51 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.algorithms.AStar var52 = new demo.pathplanning.algorithms.AStar(var51);
    demo.pathplanning.model.CartesianGraph var53 = var52.getGraph();
    demo.pathplanning.model.CartesianGraph var54 = var52.getGraph();
    demo.pathplanning.algorithms.PathPlanningContext var55 = new demo.pathplanning.algorithms.PathPlanningContext((demo.pathplanning.algorithms.PathPlanner)var52);
    demo.pathplanning.model.CartesianGraph var56 = var52.getGraph();
    int var57 = var56.getYSize();
    demo.pathplanning.model.CartesianGraph var60 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var63 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var64 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var67 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var70 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var71 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.Node var72 = new demo.pathplanning.model.Node(var56, var64, 1);
    demo.pathplanning.model.Node var73 = var2.getNode(var64);
    int var74 = var2.getXSize();
    java.lang.String var75 = var2.toString();
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      demo.pathplanning.model.Direction var76 = demo.pathplanning.model.Direction.valueOf(var75);
      fail("Expected exception of type java.lang.IllegalArgumentException");
    } catch (java.lang.IllegalArgumentException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var3 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var13 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var14);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var15 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var19 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var20 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var21 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var26 + "' != '" + "(1,1)"+ "'", var26.equals("(1,1)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var37 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var38 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var39 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var43 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var44 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var45 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var53);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var54);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var56);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var57 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var73);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var74 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var75 + "' != '" + "0,\n"+ "'", var75.equals("0,\n"));

  }

  public void test110() throws Throwable {

    demo.pathplanning.model.CartesianGraph var2 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var5 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var6 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var9 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var10 = var9.getXSize();
    int var11 = var9.getYSize();
    int var12 = var9.getYSize();
    demo.pathplanning.model.CartesianGraph var15 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var16 = var15.getXSize();
    int var17 = var15.getYSize();
    int var18 = var15.getYSize();
    demo.pathplanning.model.CartesianGraph var19 = new demo.pathplanning.model.CartesianGraph(var12, var18);
    demo.pathplanning.model.CartesianGraph var20 = new demo.pathplanning.model.CartesianGraph(1, var12);
    int var21 = var20.getYSize();
    demo.pathplanning.model.CartesianGraph var24 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.algorithms.AStar var25 = new demo.pathplanning.algorithms.AStar(var24);
    java.lang.String var26 = var24.toString();
    demo.pathplanning.model.CartesianGraph var29 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var32 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var33 = new demo.pathplanning.model.Location(1, 1);
    boolean var35 = var33.equals((java.lang.Object)0L);
    demo.pathplanning.model.Node var36 = var24.getNode(var33);
    demo.pathplanning.model.CartesianGraph var39 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var40 = var39.getXSize();
    int var41 = var39.getYSize();
    int var42 = var39.getYSize();
    demo.pathplanning.model.CartesianGraph var45 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var46 = var45.getXSize();
    int var47 = var45.getYSize();
    int var48 = var45.getYSize();
    demo.pathplanning.model.CartesianGraph var49 = new demo.pathplanning.model.CartesianGraph(var42, var48);
    demo.pathplanning.model.CartesianGraph var52 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var55 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var56 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var57 = new demo.pathplanning.model.CartesianGraph(var42, 1);
    demo.pathplanning.model.Node var58 = new demo.pathplanning.model.Node(var20, var33, 1);
    demo.pathplanning.model.Location var59 = var58.getLocation();
    demo.pathplanning.model.CartesianGraph var62 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var65 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var66 = new demo.pathplanning.model.Location(1, 1);
    int var67 = var66.getX();
    boolean var68 = var58.equals((java.lang.Object)var66);
    demo.pathplanning.model.CartesianGraph var71 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.algorithms.AStar var72 = new demo.pathplanning.algorithms.AStar(var71);
    demo.pathplanning.model.CartesianGraph var73 = var72.getGraph();
    demo.pathplanning.model.CartesianGraph var74 = var72.getGraph();
    demo.pathplanning.algorithms.PathPlanningContext var75 = new demo.pathplanning.algorithms.PathPlanningContext((demo.pathplanning.algorithms.PathPlanner)var72);
    demo.pathplanning.model.CartesianGraph var76 = var72.getGraph();
    int var77 = var76.getYSize();
    demo.pathplanning.model.CartesianGraph var80 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var83 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var84 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var87 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var90 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var91 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.Node var92 = new demo.pathplanning.model.Node(var76, var84, 1);
    int var93 = var92.getCost();
    java.util.Collection var94 = var92.getNeighbors();
    java.util.Collection var95 = var92.getNeighbors();
    boolean var97 = var92.equals((java.lang.Object)(-1L));
    demo.pathplanning.model.Location var98 = var92.getLocation();
    boolean var99 = var66.equals((java.lang.Object)var98);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var11 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var12 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var16 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var17 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var18 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var21 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var26 + "' != '" + "0,\n"+ "'", var26.equals("0,\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var35 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var36);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var40 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var41 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var42 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var46 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var47 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var48 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var59);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var67 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var68 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var73);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var74);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var76);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var77 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var93 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var94);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var95);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var97 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var98);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var99 == true);

  }

  public void test111() throws Throwable {

    demo.pathplanning.model.CartesianGraph var2 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var3 = var2.getXSize();
    int var4 = var2.getYSize();
    int var5 = var2.getYSize();
    demo.pathplanning.model.CartesianGraph var8 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var9 = var8.getXSize();
    int var10 = var8.getYSize();
    int var11 = var8.getYSize();
    demo.pathplanning.model.CartesianGraph var12 = new demo.pathplanning.model.CartesianGraph(var5, var11);
    demo.pathplanning.model.CartesianGraph var15 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var18 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var19 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var20 = new demo.pathplanning.model.CartesianGraph(var5, 1);
    java.lang.String var21 = var20.toString();
    demo.pathplanning.model.CartesianGraph var24 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var27 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var28 = new demo.pathplanning.model.Location(1, 1);
    boolean var30 = var28.equals((java.lang.Object)0L);
    demo.pathplanning.model.Node var31 = var20.getNode(var28);
    demo.pathplanning.model.CartesianGraph var34 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var37 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var38 = new demo.pathplanning.model.Location(1, 1);
    boolean var40 = var38.equals((java.lang.Object)0L);
    int var41 = var38.getX();
    int var42 = var38.getX();
    demo.pathplanning.model.CartesianGraph var45 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var46 = var45.getXSize();
    demo.pathplanning.model.Node var47 = new demo.pathplanning.model.Node(var20, var38, var46);
    int var48 = var47.getCost();
    java.util.Collection var49 = var47.getNeighbors();
    demo.pathplanning.model.CartesianGraph var52 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var53 = var52.getXSize();
    demo.pathplanning.algorithms.AStar var54 = new demo.pathplanning.algorithms.AStar(var52);
    demo.pathplanning.model.CartesianGraph var57 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var60 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var61 = new demo.pathplanning.model.Location(1, 1);
    boolean var63 = var61.equals((java.lang.Object)0L);
    demo.pathplanning.model.Node var64 = var52.getNode(var61);
    demo.pathplanning.algorithms.AStar var65 = new demo.pathplanning.algorithms.AStar(var52);
    demo.pathplanning.model.CartesianGraph var66 = var65.getGraph();
    boolean var67 = var47.equals((java.lang.Object)var65);
    demo.pathplanning.algorithms.PathPlanningContext var68 = new demo.pathplanning.algorithms.PathPlanningContext((demo.pathplanning.algorithms.PathPlanner)var65);
    demo.pathplanning.model.CartesianGraph var69 = var65.getGraph();
    int var70 = var69.getYSize();
    int var71 = var69.getXSize();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var3 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var4 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var5 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var9 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var11 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var21 + "' != '" + "0,\n"+ "'", var21.equals("0,\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var30 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var31);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var40 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var41 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var42 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var46 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var48 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var49);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var53 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var63 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var64);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var66);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var67 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var69);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var70 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var71 == 1);

  }

  public void test112() throws Throwable {

    demo.pathplanning.model.CartesianGraph var2 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var3 = var2.getXSize();
    int var4 = var2.getYSize();
    int var5 = var2.getYSize();
    demo.pathplanning.model.CartesianGraph var8 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var9 = var8.getXSize();
    int var10 = var8.getYSize();
    int var11 = var8.getYSize();
    demo.pathplanning.model.CartesianGraph var14 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var15 = var14.getXSize();
    int var16 = var14.getYSize();
    int var17 = var14.getYSize();
    demo.pathplanning.model.CartesianGraph var18 = new demo.pathplanning.model.CartesianGraph(var11, var17);
    demo.pathplanning.model.CartesianGraph var21 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var24 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var25 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var26 = new demo.pathplanning.model.CartesianGraph(var11, 1);
    demo.pathplanning.model.CartesianGraph var27 = new demo.pathplanning.model.CartesianGraph(var5, var11);
    demo.pathplanning.model.CartesianGraph var30 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var31 = var30.getXSize();
    int var32 = var30.getYSize();
    int var33 = var30.getYSize();
    demo.pathplanning.model.CartesianGraph var36 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var37 = var36.getXSize();
    int var38 = var36.getYSize();
    int var39 = var36.getYSize();
    demo.pathplanning.model.CartesianGraph var40 = new demo.pathplanning.model.CartesianGraph(var33, var39);
    demo.pathplanning.model.CartesianGraph var43 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var46 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var47 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var48 = new demo.pathplanning.model.CartesianGraph(var33, 1);
    demo.pathplanning.model.CartesianGraph var49 = new demo.pathplanning.model.CartesianGraph(var5, 1);
    demo.pathplanning.algorithms.AStar var50 = new demo.pathplanning.algorithms.AStar(var49);
    demo.pathplanning.model.CartesianGraph var51 = var50.getGraph();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var3 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var4 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var5 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var9 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var11 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var15 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var16 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var17 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var31 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var32 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var33 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var37 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var38 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var39 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var51);

  }

  public void test113() throws Throwable {

    demo.pathplanning.model.CartesianGraph var2 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var3 = var2.getXSize();
    demo.pathplanning.algorithms.AStar var4 = new demo.pathplanning.algorithms.AStar(var2);
    demo.pathplanning.model.CartesianGraph var7 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var10 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var11 = new demo.pathplanning.model.Location(1, 1);
    boolean var13 = var11.equals((java.lang.Object)0L);
    demo.pathplanning.model.Node var14 = var2.getNode(var11);
    int var15 = var2.getXSize();
    java.lang.String var16 = var2.toString();
    demo.pathplanning.model.CartesianGraph var19 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var22 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var23 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var26 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var27 = var26.getXSize();
    int var28 = var26.getYSize();
    int var29 = var26.getYSize();
    demo.pathplanning.model.CartesianGraph var32 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var33 = var32.getXSize();
    int var34 = var32.getYSize();
    int var35 = var32.getYSize();
    demo.pathplanning.model.CartesianGraph var36 = new demo.pathplanning.model.CartesianGraph(var29, var35);
    demo.pathplanning.model.CartesianGraph var37 = new demo.pathplanning.model.CartesianGraph(1, var29);
    demo.pathplanning.model.CartesianGraph var40 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var43 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var44 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var47 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var48 = var47.getXSize();
    int var49 = var47.getYSize();
    int var50 = var47.getYSize();
    demo.pathplanning.model.CartesianGraph var53 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var54 = var53.getXSize();
    int var55 = var53.getYSize();
    int var56 = var53.getYSize();
    demo.pathplanning.model.CartesianGraph var57 = new demo.pathplanning.model.CartesianGraph(var50, var56);
    demo.pathplanning.model.CartesianGraph var58 = new demo.pathplanning.model.CartesianGraph(1, var50);
    demo.pathplanning.model.Location var59 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var62 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var65 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var66 = new demo.pathplanning.model.Location(1, 1);
    int var67 = var66.getY();
    demo.pathplanning.model.Node var68 = new demo.pathplanning.model.Node(var2, var59, var67);
    demo.pathplanning.model.CartesianGraph var71 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var72 = var71.getXSize();
    demo.pathplanning.algorithms.AStar var73 = new demo.pathplanning.algorithms.AStar(var71);
    demo.pathplanning.model.CartesianGraph var76 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var79 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var80 = new demo.pathplanning.model.Location(1, 1);
    boolean var82 = var80.equals((java.lang.Object)0L);
    demo.pathplanning.model.Node var83 = var71.getNode(var80);
    boolean var84 = var59.equals((java.lang.Object)var71);
    java.lang.String var85 = var59.toString();
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      demo.pathplanning.model.Direction var86 = demo.pathplanning.model.Direction.valueOf(var85);
      fail("Expected exception of type java.lang.IllegalArgumentException");
    } catch (java.lang.IllegalArgumentException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var3 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var13 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var14);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var15 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var16 + "' != '" + "0,\n"+ "'", var16.equals("0,\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var27 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var28 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var29 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var33 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var34 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var35 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var48 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var49 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var50 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var54 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var55 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var56 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var67 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var72 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var82 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var83);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var84 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var85 + "' != '" + "(1,1)"+ "'", var85.equals("(1,1)"));

  }

  public void test114() throws Throwable {

    demo.pathplanning.model.CartesianGraph var2 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.algorithms.AStar var3 = new demo.pathplanning.algorithms.AStar(var2);
    java.lang.String var4 = var2.toString();
    demo.pathplanning.model.CartesianGraph var7 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var10 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var11 = new demo.pathplanning.model.Location(1, 1);
    boolean var13 = var11.equals((java.lang.Object)0L);
    demo.pathplanning.model.Node var14 = var2.getNode(var11);
    java.lang.String var15 = var11.toString();
    demo.pathplanning.model.CartesianGraph var18 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.algorithms.AStar var19 = new demo.pathplanning.algorithms.AStar(var18);
    demo.pathplanning.model.CartesianGraph var20 = var19.getGraph();
    demo.pathplanning.model.CartesianGraph var21 = var19.getGraph();
    demo.pathplanning.algorithms.PathPlanningContext var22 = new demo.pathplanning.algorithms.PathPlanningContext((demo.pathplanning.algorithms.PathPlanner)var19);
    demo.pathplanning.model.CartesianGraph var23 = var19.getGraph();
    int var24 = var23.getYSize();
    demo.pathplanning.model.CartesianGraph var27 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var30 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var31 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var34 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var37 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var38 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.Node var39 = new demo.pathplanning.model.Node(var23, var31, 1);
    boolean var40 = var11.equals((java.lang.Object)1);
    int var41 = var11.getX();
    int var42 = var11.getX();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var4 + "' != '" + "0,\n"+ "'", var4.equals("0,\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var13 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var14);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var15 + "' != '" + "(1,1)"+ "'", var15.equals("(1,1)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var20);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var21);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var23);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var24 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var40 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var41 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var42 == 1);

  }

  public void test115() throws Throwable {

    demo.pathplanning.model.CartesianGraph var2 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var3 = var2.getXSize();
    demo.pathplanning.algorithms.AStar var4 = new demo.pathplanning.algorithms.AStar(var2);
    demo.pathplanning.model.CartesianGraph var7 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var10 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var11 = new demo.pathplanning.model.Location(1, 1);
    boolean var13 = var11.equals((java.lang.Object)0L);
    demo.pathplanning.model.Node var14 = var2.getNode(var11);
    int var15 = var2.getYSize();
    demo.pathplanning.model.CartesianGraph var18 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var19 = var18.getXSize();
    int var20 = var18.getYSize();
    int var21 = var18.getYSize();
    demo.pathplanning.model.CartesianGraph var24 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var25 = new demo.pathplanning.model.Location(var21, 1);
    java.lang.String var26 = var25.toString();
    demo.pathplanning.model.CartesianGraph var29 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var32 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var33 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var36 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var37 = var36.getXSize();
    int var38 = var36.getYSize();
    int var39 = var36.getYSize();
    demo.pathplanning.model.CartesianGraph var42 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var43 = var42.getXSize();
    int var44 = var42.getYSize();
    int var45 = var42.getYSize();
    demo.pathplanning.model.CartesianGraph var46 = new demo.pathplanning.model.CartesianGraph(var39, var45);
    demo.pathplanning.model.CartesianGraph var47 = new demo.pathplanning.model.CartesianGraph(1, var39);
    demo.pathplanning.model.Node var48 = new demo.pathplanning.model.Node(var2, var25, var39);
    demo.pathplanning.model.CartesianGraph var51 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.algorithms.AStar var52 = new demo.pathplanning.algorithms.AStar(var51);
    demo.pathplanning.model.CartesianGraph var53 = var52.getGraph();
    demo.pathplanning.model.CartesianGraph var54 = var52.getGraph();
    demo.pathplanning.algorithms.PathPlanningContext var55 = new demo.pathplanning.algorithms.PathPlanningContext((demo.pathplanning.algorithms.PathPlanner)var52);
    demo.pathplanning.model.CartesianGraph var56 = var52.getGraph();
    int var57 = var56.getYSize();
    demo.pathplanning.model.CartesianGraph var60 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var63 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var64 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var67 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var70 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var71 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.Node var72 = new demo.pathplanning.model.Node(var56, var64, 1);
    demo.pathplanning.model.Node var73 = var2.getNode(var64);
    java.lang.String var74 = var64.toString();
    int var75 = var64.getY();
    java.lang.String var76 = var64.toString();
    int var77 = var64.getX();
    demo.pathplanning.model.CartesianGraph var80 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var81 = var80.getXSize();
    demo.pathplanning.algorithms.AStar var82 = new demo.pathplanning.algorithms.AStar(var80);
    int var83 = var80.getYSize();
    int var84 = var80.getXSize();
    demo.pathplanning.model.Location var85 = new demo.pathplanning.model.Location(var77, var84);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var3 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var13 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var14);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var15 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var19 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var20 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var21 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var26 + "' != '" + "(1,1)"+ "'", var26.equals("(1,1)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var37 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var38 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var39 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var43 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var44 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var45 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var53);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var54);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var56);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var57 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var73);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var74 + "' != '" + "(1,1)"+ "'", var74.equals("(1,1)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var75 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var76 + "' != '" + "(1,1)"+ "'", var76.equals("(1,1)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var77 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var81 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var83 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var84 == 1);

  }

  public void test116() throws Throwable {

    demo.pathplanning.model.CartesianGraph var2 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.algorithms.AStar var3 = new demo.pathplanning.algorithms.AStar(var2);
    demo.pathplanning.model.CartesianGraph var4 = var3.getGraph();
    demo.pathplanning.model.CartesianGraph var5 = var3.getGraph();
    demo.pathplanning.algorithms.PathPlanningContext var6 = new demo.pathplanning.algorithms.PathPlanningContext((demo.pathplanning.algorithms.PathPlanner)var3);
    demo.pathplanning.model.CartesianGraph var7 = var3.getGraph();
    int var8 = var7.getYSize();
    demo.pathplanning.model.CartesianGraph var11 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var14 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var15 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var18 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var21 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var22 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.Node var23 = new demo.pathplanning.model.Node(var7, var15, 1);
    int var24 = var23.getCost();
    java.util.Collection var25 = var23.getNeighbors();
    java.util.Collection var26 = var23.getNeighbors();
    boolean var28 = var23.equals((java.lang.Object)(-1L));
    int var29 = var23.getCost();
    demo.pathplanning.model.CartesianGraph var32 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var33 = var32.getXSize();
    int var34 = var32.getYSize();
    demo.pathplanning.model.CartesianGraph var37 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.algorithms.AStar var38 = new demo.pathplanning.algorithms.AStar(var37);
    java.lang.String var39 = var37.toString();
    demo.pathplanning.model.CartesianGraph var42 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var45 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var46 = new demo.pathplanning.model.Location(1, 1);
    boolean var48 = var46.equals((java.lang.Object)0L);
    demo.pathplanning.model.Node var49 = var37.getNode(var46);
    demo.pathplanning.model.CartesianGraph var52 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var55 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var56 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var59 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var60 = var59.getXSize();
    demo.pathplanning.model.CartesianGraph var63 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var64 = new demo.pathplanning.model.CartesianGraph(var60, 1);
    demo.pathplanning.model.Location var65 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.Node var66 = new demo.pathplanning.model.Node(var32, var46, 1);
    demo.pathplanning.model.CartesianGraph var69 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var70 = var69.getXSize();
    demo.pathplanning.algorithms.AStar var71 = new demo.pathplanning.algorithms.AStar(var69);
    demo.pathplanning.model.CartesianGraph var74 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var77 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var78 = new demo.pathplanning.model.Location(1, 1);
    boolean var80 = var78.equals((java.lang.Object)0L);
    demo.pathplanning.model.Node var81 = var69.getNode(var78);
    int var82 = var69.getXSize();
    boolean var83 = var46.equals((java.lang.Object)var69);
    int var84 = var69.getXSize();
    int var85 = var69.getYSize();
    demo.pathplanning.model.CartesianGraph var86 = new demo.pathplanning.model.CartesianGraph(var29, var85);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var8 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var24 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var25);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var26);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var28 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var29 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var33 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var34 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var39 + "' != '" + "0,\n"+ "'", var39.equals("0,\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var48 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var49);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var60 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var70 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var80 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var81);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var82 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var83 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var84 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var85 == 1);

  }

  public void test117() throws Throwable {

    demo.pathplanning.model.CartesianGraph var2 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.algorithms.AStar var3 = new demo.pathplanning.algorithms.AStar(var2);
    demo.pathplanning.model.CartesianGraph var4 = var3.getGraph();
    demo.pathplanning.model.CartesianGraph var5 = var3.getGraph();
    demo.pathplanning.algorithms.PathPlanningContext var6 = new demo.pathplanning.algorithms.PathPlanningContext((demo.pathplanning.algorithms.PathPlanner)var3);
    demo.pathplanning.model.CartesianGraph var7 = var3.getGraph();
    int var8 = var7.getYSize();
    demo.pathplanning.model.CartesianGraph var11 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var14 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var15 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var18 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var21 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var22 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.Node var23 = new demo.pathplanning.model.Node(var7, var15, 1);
    int var24 = var23.getCost();
    java.util.Collection var25 = var23.getNeighbors();
    java.util.Collection var26 = var23.getNeighbors();
    demo.pathplanning.model.CartesianGraph var29 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var30 = var29.getXSize();
    int var31 = var29.getYSize();
    int var32 = var29.getYSize();
    demo.pathplanning.model.CartesianGraph var35 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var36 = var35.getXSize();
    int var37 = var35.getYSize();
    int var38 = var35.getYSize();
    demo.pathplanning.model.CartesianGraph var39 = new demo.pathplanning.model.CartesianGraph(var32, var38);
    demo.pathplanning.model.CartesianGraph var42 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var45 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var46 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var47 = new demo.pathplanning.model.CartesianGraph(var32, 1);
    java.lang.String var48 = var47.toString();
    demo.pathplanning.model.CartesianGraph var51 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var54 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var55 = new demo.pathplanning.model.Location(1, 1);
    boolean var57 = var55.equals((java.lang.Object)0L);
    demo.pathplanning.model.Node var58 = var47.getNode(var55);
    demo.pathplanning.model.CartesianGraph var61 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var64 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var65 = new demo.pathplanning.model.Location(1, 1);
    boolean var67 = var65.equals((java.lang.Object)0L);
    int var68 = var65.getX();
    int var69 = var65.getX();
    demo.pathplanning.model.CartesianGraph var72 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var73 = var72.getXSize();
    demo.pathplanning.model.Node var74 = new demo.pathplanning.model.Node(var47, var65, var73);
    int var75 = var74.getCost();
    java.util.Collection var76 = var74.getNeighbors();
    demo.pathplanning.model.CartesianGraph var79 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var80 = var79.getXSize();
    demo.pathplanning.algorithms.AStar var81 = new demo.pathplanning.algorithms.AStar(var79);
    demo.pathplanning.model.CartesianGraph var84 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var87 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var88 = new demo.pathplanning.model.Location(1, 1);
    boolean var90 = var88.equals((java.lang.Object)0L);
    demo.pathplanning.model.Node var91 = var79.getNode(var88);
    demo.pathplanning.algorithms.AStar var92 = new demo.pathplanning.algorithms.AStar(var79);
    demo.pathplanning.model.CartesianGraph var93 = var92.getGraph();
    boolean var94 = var74.equals((java.lang.Object)var92);
    java.lang.String var95 = var74.toString();
    java.lang.String var96 = var74.toString();
    boolean var97 = var23.equals((java.lang.Object)var74);
    int var98 = var74.getCost();
    java.util.Collection var99 = var74.getNeighbors();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var8 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var24 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var25);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var26);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var30 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var31 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var32 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var36 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var37 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var38 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var48 + "' != '" + "0,\n"+ "'", var48.equals("0,\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var57 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var58);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var67 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var68 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var69 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var73 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var75 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var76);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var80 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var90 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var91);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var93);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var94 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var95 + "' != '" + "(1,1)=1"+ "'", var95.equals("(1,1)=1"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var96 + "' != '" + "(1,1)=1"+ "'", var96.equals("(1,1)=1"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var97 == true);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var98 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var99);

  }

  public void test118() throws Throwable {

    demo.pathplanning.model.CartesianGraph var2 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var3 = var2.getXSize();
    int var4 = var2.getYSize();
    int var5 = var2.getYSize();
    demo.pathplanning.model.CartesianGraph var8 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var9 = var8.getXSize();
    int var10 = var8.getYSize();
    int var11 = var8.getYSize();
    demo.pathplanning.model.CartesianGraph var12 = new demo.pathplanning.model.CartesianGraph(var5, var11);
    demo.pathplanning.algorithms.AStar var13 = new demo.pathplanning.algorithms.AStar(var12);
    demo.pathplanning.algorithms.PathPlanningContext var14 = new demo.pathplanning.algorithms.PathPlanningContext((demo.pathplanning.algorithms.PathPlanner)var13);
    demo.pathplanning.model.CartesianGraph var17 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.algorithms.AStar var18 = new demo.pathplanning.algorithms.AStar(var17);
    java.lang.String var19 = var17.toString();
    demo.pathplanning.model.CartesianGraph var22 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var25 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var26 = new demo.pathplanning.model.Location(1, 1);
    boolean var28 = var26.equals((java.lang.Object)0L);
    demo.pathplanning.model.Node var29 = var17.getNode(var26);
    java.lang.String var30 = var26.toString();
    demo.pathplanning.model.CartesianGraph var33 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.algorithms.AStar var34 = new demo.pathplanning.algorithms.AStar(var33);
    demo.pathplanning.model.CartesianGraph var35 = var34.getGraph();
    demo.pathplanning.model.CartesianGraph var36 = var34.getGraph();
    demo.pathplanning.algorithms.PathPlanningContext var37 = new demo.pathplanning.algorithms.PathPlanningContext((demo.pathplanning.algorithms.PathPlanner)var34);
    demo.pathplanning.model.CartesianGraph var38 = var34.getGraph();
    int var39 = var38.getYSize();
    demo.pathplanning.model.CartesianGraph var42 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var45 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var46 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var49 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var52 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var53 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.Node var54 = new demo.pathplanning.model.Node(var38, var46, 1);
    boolean var55 = var26.equals((java.lang.Object)1);
    int var56 = var26.getX();
    int var57 = var26.getY();
    demo.pathplanning.model.CartesianGraph var60 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var63 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var64 = new demo.pathplanning.model.Location(1, 1);
    int var65 = var64.getX();
    demo.pathplanning.model.CartesianGraph var68 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var71 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var72 = new demo.pathplanning.model.Location(1, 1);
    boolean var74 = var72.equals((java.lang.Object)0L);
    int var75 = var72.getX();
    int var76 = var72.getX();
    int var77 = var72.getY();
    demo.pathplanning.model.CartesianGraph var80 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var81 = var80.getXSize();
    demo.pathplanning.algorithms.AStar var82 = new demo.pathplanning.algorithms.AStar(var80);
    demo.pathplanning.model.CartesianGraph var85 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var88 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var89 = new demo.pathplanning.model.Location(1, 1);
    boolean var91 = var89.equals((java.lang.Object)0L);
    demo.pathplanning.model.Node var92 = var80.getNode(var89);
    boolean var93 = var72.equals((java.lang.Object)var89);
    int var94 = var89.getY();
    boolean var95 = var64.equals((java.lang.Object)var89);
    java.util.List var96 = var14.getPath(var26, var64);

  }

  public void test119() throws Throwable {

    demo.pathplanning.model.CartesianGraph var2 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.algorithms.AStar var3 = new demo.pathplanning.algorithms.AStar(var2);
    demo.pathplanning.model.CartesianGraph var4 = var3.getGraph();
    demo.pathplanning.model.CartesianGraph var5 = var3.getGraph();
    demo.pathplanning.algorithms.PathPlanningContext var6 = new demo.pathplanning.algorithms.PathPlanningContext((demo.pathplanning.algorithms.PathPlanner)var3);
    demo.pathplanning.model.CartesianGraph var7 = var3.getGraph();
    int var8 = var7.getYSize();
    demo.pathplanning.model.CartesianGraph var11 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var14 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var15 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var18 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var21 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var22 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.Node var23 = new demo.pathplanning.model.Node(var7, var15, 1);
    int var24 = var23.getCost();
    java.util.Collection var25 = var23.getNeighbors();
    java.util.Collection var26 = var23.getNeighbors();
    demo.pathplanning.model.CartesianGraph var29 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var30 = var29.getXSize();
    int var31 = var29.getYSize();
    int var32 = var29.getYSize();
    demo.pathplanning.model.CartesianGraph var35 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var36 = var35.getXSize();
    int var37 = var35.getYSize();
    int var38 = var35.getYSize();
    demo.pathplanning.model.CartesianGraph var39 = new demo.pathplanning.model.CartesianGraph(var32, var38);
    demo.pathplanning.model.CartesianGraph var42 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var45 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var46 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var47 = new demo.pathplanning.model.CartesianGraph(var32, 1);
    java.lang.String var48 = var47.toString();
    demo.pathplanning.model.CartesianGraph var51 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var54 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var55 = new demo.pathplanning.model.Location(1, 1);
    boolean var57 = var55.equals((java.lang.Object)0L);
    demo.pathplanning.model.Node var58 = var47.getNode(var55);
    demo.pathplanning.model.CartesianGraph var61 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var64 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var65 = new demo.pathplanning.model.Location(1, 1);
    boolean var67 = var65.equals((java.lang.Object)0L);
    int var68 = var65.getX();
    int var69 = var65.getX();
    demo.pathplanning.model.CartesianGraph var72 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var73 = var72.getXSize();
    demo.pathplanning.model.Node var74 = new demo.pathplanning.model.Node(var47, var65, var73);
    int var75 = var74.getCost();
    java.util.Collection var76 = var74.getNeighbors();
    demo.pathplanning.model.CartesianGraph var79 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var80 = var79.getXSize();
    demo.pathplanning.algorithms.AStar var81 = new demo.pathplanning.algorithms.AStar(var79);
    demo.pathplanning.model.CartesianGraph var84 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var87 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var88 = new demo.pathplanning.model.Location(1, 1);
    boolean var90 = var88.equals((java.lang.Object)0L);
    demo.pathplanning.model.Node var91 = var79.getNode(var88);
    demo.pathplanning.algorithms.AStar var92 = new demo.pathplanning.algorithms.AStar(var79);
    demo.pathplanning.model.CartesianGraph var93 = var92.getGraph();
    boolean var94 = var74.equals((java.lang.Object)var92);
    java.lang.String var95 = var74.toString();
    java.lang.String var96 = var74.toString();
    boolean var97 = var23.equals((java.lang.Object)var74);
    int var98 = var74.getCost();
    demo.pathplanning.model.Location var99 = var74.getLocation();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var8 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var24 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var25);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var26);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var30 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var31 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var32 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var36 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var37 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var38 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var48 + "' != '" + "0,\n"+ "'", var48.equals("0,\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var57 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var58);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var67 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var68 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var69 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var73 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var75 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var76);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var80 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var90 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var91);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var93);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var94 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var95 + "' != '" + "(1,1)=1"+ "'", var95.equals("(1,1)=1"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var96 + "' != '" + "(1,1)=1"+ "'", var96.equals("(1,1)=1"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var97 == true);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var98 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var99);

  }

  public void test120() throws Throwable {

    demo.pathplanning.model.CartesianGraph var2 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.algorithms.AStar var3 = new demo.pathplanning.algorithms.AStar(var2);
    demo.pathplanning.algorithms.PathPlanningContext var4 = new demo.pathplanning.algorithms.PathPlanningContext((demo.pathplanning.algorithms.PathPlanner)var3);
    demo.pathplanning.model.CartesianGraph var7 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var10 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var11 = new demo.pathplanning.model.Location(1, 1);
    boolean var13 = var11.equals((java.lang.Object)0L);
    demo.pathplanning.model.CartesianGraph var16 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var17 = var16.getXSize();
    demo.pathplanning.algorithms.AStar var18 = new demo.pathplanning.algorithms.AStar(var16);
    demo.pathplanning.model.CartesianGraph var21 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var24 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var25 = new demo.pathplanning.model.Location(1, 1);
    boolean var27 = var25.equals((java.lang.Object)0L);
    demo.pathplanning.model.Node var28 = var16.getNode(var25);
    int var29 = var16.getYSize();
    demo.pathplanning.model.CartesianGraph var32 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var33 = var32.getXSize();
    int var34 = var32.getYSize();
    int var35 = var32.getYSize();
    demo.pathplanning.model.CartesianGraph var38 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var39 = new demo.pathplanning.model.Location(var35, 1);
    java.lang.String var40 = var39.toString();
    demo.pathplanning.model.CartesianGraph var43 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var46 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var47 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var50 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var51 = var50.getXSize();
    int var52 = var50.getYSize();
    int var53 = var50.getYSize();
    demo.pathplanning.model.CartesianGraph var56 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var57 = var56.getXSize();
    int var58 = var56.getYSize();
    int var59 = var56.getYSize();
    demo.pathplanning.model.CartesianGraph var60 = new demo.pathplanning.model.CartesianGraph(var53, var59);
    demo.pathplanning.model.CartesianGraph var61 = new demo.pathplanning.model.CartesianGraph(1, var53);
    demo.pathplanning.model.Node var62 = new demo.pathplanning.model.Node(var16, var39, var53);
    java.lang.String var63 = var39.toString();
    java.util.List var64 = var3.getPath(var11, var39);

  }

  public void test121() throws Throwable {

    demo.pathplanning.model.CartesianGraph var2 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.algorithms.AStar var3 = new demo.pathplanning.algorithms.AStar(var2);
    demo.pathplanning.model.CartesianGraph var4 = var3.getGraph();
    demo.pathplanning.model.CartesianGraph var5 = var3.getGraph();
    demo.pathplanning.algorithms.PathPlanningContext var6 = new demo.pathplanning.algorithms.PathPlanningContext((demo.pathplanning.algorithms.PathPlanner)var3);
    demo.pathplanning.model.CartesianGraph var7 = var3.getGraph();
    int var8 = var7.getYSize();
    demo.pathplanning.model.CartesianGraph var11 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var14 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var15 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var18 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var21 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var22 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.Node var23 = new demo.pathplanning.model.Node(var7, var15, 1);
    int var24 = var23.getCost();
    java.util.Collection var25 = var23.getNeighbors();
    java.util.Collection var26 = var23.getNeighbors();
    demo.pathplanning.model.CartesianGraph var29 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var30 = var29.getXSize();
    int var31 = var29.getYSize();
    int var32 = var29.getYSize();
    demo.pathplanning.model.CartesianGraph var35 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var36 = var35.getXSize();
    int var37 = var35.getYSize();
    int var38 = var35.getYSize();
    demo.pathplanning.model.CartesianGraph var39 = new demo.pathplanning.model.CartesianGraph(var32, var38);
    demo.pathplanning.model.CartesianGraph var42 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var45 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var46 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var47 = new demo.pathplanning.model.CartesianGraph(var32, 1);
    java.lang.String var48 = var47.toString();
    demo.pathplanning.model.CartesianGraph var51 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var54 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var55 = new demo.pathplanning.model.Location(1, 1);
    boolean var57 = var55.equals((java.lang.Object)0L);
    demo.pathplanning.model.Node var58 = var47.getNode(var55);
    demo.pathplanning.model.CartesianGraph var61 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var64 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var65 = new demo.pathplanning.model.Location(1, 1);
    boolean var67 = var65.equals((java.lang.Object)0L);
    int var68 = var65.getX();
    int var69 = var65.getX();
    demo.pathplanning.model.CartesianGraph var72 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var73 = var72.getXSize();
    demo.pathplanning.model.Node var74 = new demo.pathplanning.model.Node(var47, var65, var73);
    int var75 = var74.getCost();
    java.util.Collection var76 = var74.getNeighbors();
    demo.pathplanning.model.CartesianGraph var79 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var80 = var79.getXSize();
    demo.pathplanning.algorithms.AStar var81 = new demo.pathplanning.algorithms.AStar(var79);
    demo.pathplanning.model.CartesianGraph var84 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var87 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var88 = new demo.pathplanning.model.Location(1, 1);
    boolean var90 = var88.equals((java.lang.Object)0L);
    demo.pathplanning.model.Node var91 = var79.getNode(var88);
    demo.pathplanning.algorithms.AStar var92 = new demo.pathplanning.algorithms.AStar(var79);
    demo.pathplanning.model.CartesianGraph var93 = var92.getGraph();
    boolean var94 = var74.equals((java.lang.Object)var92);
    java.lang.String var95 = var74.toString();
    java.lang.String var96 = var74.toString();
    boolean var97 = var23.equals((java.lang.Object)var74);
    java.util.Collection var98 = var74.getNeighbors();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var8 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var24 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var25);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var26);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var30 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var31 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var32 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var36 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var37 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var38 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var48 + "' != '" + "0,\n"+ "'", var48.equals("0,\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var57 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var58);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var67 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var68 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var69 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var73 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var75 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var76);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var80 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var90 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var91);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var93);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var94 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var95 + "' != '" + "(1,1)=1"+ "'", var95.equals("(1,1)=1"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var96 + "' != '" + "(1,1)=1"+ "'", var96.equals("(1,1)=1"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var97 == true);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var98);

  }

  public void test122() throws Throwable {

    demo.pathplanning.model.CartesianGraph var2 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var3 = var2.getXSize();
    int var4 = var2.getYSize();
    int var5 = var2.getYSize();
    demo.pathplanning.model.CartesianGraph var8 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var9 = var8.getXSize();
    int var10 = var8.getYSize();
    int var11 = var8.getYSize();
    demo.pathplanning.model.CartesianGraph var12 = new demo.pathplanning.model.CartesianGraph(var5, var11);
    demo.pathplanning.algorithms.AStar var13 = new demo.pathplanning.algorithms.AStar(var12);
    demo.pathplanning.algorithms.PathPlanningContext var14 = new demo.pathplanning.algorithms.PathPlanningContext((demo.pathplanning.algorithms.PathPlanner)var13);
    demo.pathplanning.model.CartesianGraph var15 = var13.getGraph();
    demo.pathplanning.algorithms.PathPlanningContext var16 = new demo.pathplanning.algorithms.PathPlanningContext((demo.pathplanning.algorithms.PathPlanner)var13);
    demo.pathplanning.model.CartesianGraph var19 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var22 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var23 = new demo.pathplanning.model.Location(1, 1);
    boolean var25 = var23.equals((java.lang.Object)0L);
    int var26 = var23.getX();
    int var27 = var23.getX();
    java.lang.String var28 = var23.toString();
    int var29 = var23.getY();
    demo.pathplanning.model.CartesianGraph var32 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.algorithms.AStar var33 = new demo.pathplanning.algorithms.AStar(var32);
    demo.pathplanning.model.CartesianGraph var34 = var33.getGraph();
    demo.pathplanning.model.CartesianGraph var35 = var33.getGraph();
    demo.pathplanning.algorithms.PathPlanningContext var36 = new demo.pathplanning.algorithms.PathPlanningContext((demo.pathplanning.algorithms.PathPlanner)var33);
    demo.pathplanning.model.CartesianGraph var37 = var33.getGraph();
    int var38 = var37.getYSize();
    demo.pathplanning.model.CartesianGraph var41 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var44 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var45 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var48 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var51 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var52 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.Node var53 = new demo.pathplanning.model.Node(var37, var45, 1);
    java.util.Collection var54 = var53.getNeighbors();
    demo.pathplanning.model.Location var55 = var53.getLocation();
    java.lang.String var56 = var55.toString();
    java.util.List var57 = var16.getPath(var23, var55);

  }

  public void test123() throws Throwable {

    demo.pathplanning.model.CartesianGraph var2 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var3 = var2.getXSize();
    int var4 = var2.getYSize();
    int var5 = var2.getYSize();
    demo.pathplanning.model.CartesianGraph var8 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var9 = var8.getXSize();
    int var10 = var8.getYSize();
    int var11 = var8.getYSize();
    demo.pathplanning.model.CartesianGraph var12 = new demo.pathplanning.model.CartesianGraph(var5, var11);
    demo.pathplanning.algorithms.AStar var13 = new demo.pathplanning.algorithms.AStar(var12);
    demo.pathplanning.algorithms.PathPlanningContext var14 = new demo.pathplanning.algorithms.PathPlanningContext((demo.pathplanning.algorithms.PathPlanner)var13);
    demo.pathplanning.model.CartesianGraph var15 = var13.getGraph();
    demo.pathplanning.algorithms.PathPlanningContext var16 = new demo.pathplanning.algorithms.PathPlanningContext((demo.pathplanning.algorithms.PathPlanner)var13);
    demo.pathplanning.algorithms.PathPlanningContext var17 = new demo.pathplanning.algorithms.PathPlanningContext((demo.pathplanning.algorithms.PathPlanner)var13);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var3 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var4 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var5 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var9 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var11 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var15);

  }

  public void test124() throws Throwable {

    demo.pathplanning.model.CartesianGraph var2 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.algorithms.AStar var3 = new demo.pathplanning.algorithms.AStar(var2);
    demo.pathplanning.model.CartesianGraph var4 = var3.getGraph();
    demo.pathplanning.model.CartesianGraph var5 = var3.getGraph();
    demo.pathplanning.algorithms.PathPlanningContext var6 = new demo.pathplanning.algorithms.PathPlanningContext((demo.pathplanning.algorithms.PathPlanner)var3);
    demo.pathplanning.model.CartesianGraph var7 = var3.getGraph();
    int var8 = var7.getYSize();
    demo.pathplanning.model.CartesianGraph var11 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var14 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var15 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var18 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var21 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var22 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.Node var23 = new demo.pathplanning.model.Node(var7, var15, 1);
    java.util.Collection var24 = var23.getNeighbors();
    int var25 = var23.getCost();
    int var26 = var23.getCost();
    boolean var28 = var23.equals((java.lang.Object)0L);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var8 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var24);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var25 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var26 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var28 == false);

  }

  public void test125() throws Throwable {

    demo.pathplanning.model.CartesianGraph var2 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var3 = var2.getXSize();
    demo.pathplanning.algorithms.AStar var4 = new demo.pathplanning.algorithms.AStar(var2);
    demo.pathplanning.model.CartesianGraph var7 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var10 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var11 = new demo.pathplanning.model.Location(1, 1);
    boolean var13 = var11.equals((java.lang.Object)0L);
    demo.pathplanning.model.Node var14 = var2.getNode(var11);
    int var15 = var2.getYSize();
    demo.pathplanning.model.CartesianGraph var18 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var19 = var18.getXSize();
    int var20 = var18.getYSize();
    int var21 = var18.getYSize();
    demo.pathplanning.model.CartesianGraph var24 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var25 = new demo.pathplanning.model.Location(var21, 1);
    java.lang.String var26 = var25.toString();
    demo.pathplanning.model.CartesianGraph var29 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var32 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var33 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var36 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var37 = var36.getXSize();
    int var38 = var36.getYSize();
    int var39 = var36.getYSize();
    demo.pathplanning.model.CartesianGraph var42 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var43 = var42.getXSize();
    int var44 = var42.getYSize();
    int var45 = var42.getYSize();
    demo.pathplanning.model.CartesianGraph var46 = new demo.pathplanning.model.CartesianGraph(var39, var45);
    demo.pathplanning.model.CartesianGraph var47 = new demo.pathplanning.model.CartesianGraph(1, var39);
    demo.pathplanning.model.Node var48 = new demo.pathplanning.model.Node(var2, var25, var39);
    java.util.Collection var49 = var48.getNeighbors();
    java.lang.String var50 = var48.toString();
    demo.pathplanning.model.Location var51 = var48.getLocation();
    int var52 = var51.getY();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var3 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var13 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var14);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var15 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var19 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var20 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var21 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var26 + "' != '" + "(1,1)"+ "'", var26.equals("(1,1)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var37 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var38 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var39 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var43 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var44 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var45 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var49);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var50 + "' != '" + "(1,1)=1"+ "'", var50.equals("(1,1)=1"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var51);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var52 == 1);

  }

  public void test126() throws Throwable {

    demo.pathplanning.model.CartesianGraph var2 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var3 = var2.getXSize();
    int var4 = var2.getYSize();
    int var5 = var2.getYSize();
    demo.pathplanning.model.CartesianGraph var8 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var9 = var8.getXSize();
    int var10 = var8.getYSize();
    int var11 = var8.getYSize();
    demo.pathplanning.model.CartesianGraph var12 = new demo.pathplanning.model.CartesianGraph(var5, var11);
    demo.pathplanning.model.CartesianGraph var15 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var18 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var19 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var20 = new demo.pathplanning.model.CartesianGraph(var5, 1);
    java.lang.String var21 = var20.toString();
    demo.pathplanning.model.CartesianGraph var24 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var27 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var28 = new demo.pathplanning.model.Location(1, 1);
    boolean var30 = var28.equals((java.lang.Object)0L);
    demo.pathplanning.model.Node var31 = var20.getNode(var28);
    demo.pathplanning.model.CartesianGraph var34 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var37 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var38 = new demo.pathplanning.model.Location(1, 1);
    boolean var40 = var38.equals((java.lang.Object)0L);
    int var41 = var38.getX();
    int var42 = var38.getX();
    demo.pathplanning.model.CartesianGraph var45 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var46 = var45.getXSize();
    demo.pathplanning.model.Node var47 = new demo.pathplanning.model.Node(var20, var38, var46);
    demo.pathplanning.algorithms.AStar var48 = new demo.pathplanning.algorithms.AStar(var20);
    demo.pathplanning.model.CartesianGraph var49 = var48.getGraph();
    demo.pathplanning.algorithms.PathPlanningContext var50 = new demo.pathplanning.algorithms.PathPlanningContext((demo.pathplanning.algorithms.PathPlanner)var48);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var3 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var4 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var5 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var9 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var11 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var21 + "' != '" + "0,\n"+ "'", var21.equals("0,\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var30 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var31);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var40 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var41 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var42 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var46 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var49);

  }

  public void test127() throws Throwable {

    demo.pathplanning.model.CartesianGraph var2 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.algorithms.AStar var3 = new demo.pathplanning.algorithms.AStar(var2);
    demo.pathplanning.model.CartesianGraph var4 = var3.getGraph();
    demo.pathplanning.model.CartesianGraph var5 = var3.getGraph();
    demo.pathplanning.algorithms.PathPlanningContext var6 = new demo.pathplanning.algorithms.PathPlanningContext((demo.pathplanning.algorithms.PathPlanner)var3);
    demo.pathplanning.model.CartesianGraph var7 = var3.getGraph();
    int var8 = var7.getYSize();
    demo.pathplanning.model.CartesianGraph var11 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var14 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var15 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var18 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var21 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var22 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.Node var23 = new demo.pathplanning.model.Node(var7, var15, 1);
    java.util.Collection var24 = var23.getNeighbors();
    int var25 = var23.getCost();
    java.lang.String var26 = var23.toString();
    demo.pathplanning.model.CartesianGraph var29 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.algorithms.AStar var30 = new demo.pathplanning.algorithms.AStar(var29);
    demo.pathplanning.model.CartesianGraph var31 = var30.getGraph();
    demo.pathplanning.model.CartesianGraph var32 = var30.getGraph();
    demo.pathplanning.algorithms.PathPlanningContext var33 = new demo.pathplanning.algorithms.PathPlanningContext((demo.pathplanning.algorithms.PathPlanner)var30);
    demo.pathplanning.model.CartesianGraph var34 = var30.getGraph();
    int var35 = var34.getYSize();
    demo.pathplanning.model.CartesianGraph var38 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var41 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var42 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var45 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var48 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var49 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.Node var50 = new demo.pathplanning.model.Node(var34, var42, 1);
    java.lang.String var51 = var50.toString();
    boolean var52 = var23.equals((java.lang.Object)var50);
    int var53 = var23.getCost();
    demo.pathplanning.model.Location var54 = var23.getLocation();
    demo.pathplanning.model.Location var55 = var23.getLocation();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var8 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var24);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var25 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var26 + "' != '" + "(1,1)=1"+ "'", var26.equals("(1,1)=1"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var31);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var32);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var34);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var35 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var51 + "' != '" + "(1,1)=1"+ "'", var51.equals("(1,1)=1"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var52 == true);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var53 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var54);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var55);

  }

  public void test128() throws Throwable {

    demo.pathplanning.model.CartesianGraph var2 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var3 = var2.getXSize();
    demo.pathplanning.algorithms.AStar var4 = new demo.pathplanning.algorithms.AStar(var2);
    demo.pathplanning.model.CartesianGraph var7 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var8 = var7.getXSize();
    int var9 = var7.getYSize();
    int var10 = var7.getYSize();
    demo.pathplanning.model.CartesianGraph var13 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var14 = new demo.pathplanning.model.Location(var10, 1);
    java.lang.String var15 = var14.toString();
    demo.pathplanning.model.Node var16 = var2.getNode(var14);
    demo.pathplanning.algorithms.AStar var17 = new demo.pathplanning.algorithms.AStar(var2);
    demo.pathplanning.model.CartesianGraph var18 = var17.getGraph();
    java.lang.String var19 = var18.toString();
    java.lang.String var20 = var18.toString();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var3 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var8 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var9 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var15 + "' != '" + "(1,1)"+ "'", var15.equals("(1,1)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var16);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var18);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var19 + "' != '" + "0,\n"+ "'", var19.equals("0,\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var20 + "' != '" + "0,\n"+ "'", var20.equals("0,\n"));

  }

  public void test129() throws Throwable {

    demo.pathplanning.model.CartesianGraph var2 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.algorithms.AStar var3 = new demo.pathplanning.algorithms.AStar(var2);
    demo.pathplanning.model.CartesianGraph var4 = var3.getGraph();
    demo.pathplanning.model.CartesianGraph var5 = var3.getGraph();
    demo.pathplanning.algorithms.PathPlanningContext var6 = new demo.pathplanning.algorithms.PathPlanningContext((demo.pathplanning.algorithms.PathPlanner)var3);
    demo.pathplanning.model.CartesianGraph var7 = var3.getGraph();
    int var8 = var7.getYSize();
    demo.pathplanning.model.CartesianGraph var11 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var14 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var15 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var18 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var21 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var22 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.Node var23 = new demo.pathplanning.model.Node(var7, var15, 1);
    int var24 = var7.getYSize();
    demo.pathplanning.model.CartesianGraph var27 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.algorithms.AStar var28 = new demo.pathplanning.algorithms.AStar(var27);
    java.lang.String var29 = var27.toString();
    demo.pathplanning.model.CartesianGraph var32 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var35 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var36 = new demo.pathplanning.model.Location(1, 1);
    boolean var38 = var36.equals((java.lang.Object)0L);
    int var39 = var36.getX();
    int var40 = var36.getX();
    demo.pathplanning.model.CartesianGraph var43 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.algorithms.AStar var44 = new demo.pathplanning.algorithms.AStar(var43);
    demo.pathplanning.model.CartesianGraph var45 = var44.getGraph();
    demo.pathplanning.model.CartesianGraph var46 = var44.getGraph();
    demo.pathplanning.algorithms.PathPlanningContext var47 = new demo.pathplanning.algorithms.PathPlanningContext((demo.pathplanning.algorithms.PathPlanner)var44);
    demo.pathplanning.model.CartesianGraph var48 = var44.getGraph();
    int var49 = var48.getYSize();
    demo.pathplanning.model.CartesianGraph var52 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var55 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var56 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var59 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var62 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var63 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.Node var64 = new demo.pathplanning.model.Node(var48, var56, 1);
    demo.pathplanning.model.CartesianGraph var67 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var70 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var71 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var74 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var75 = var74.getXSize();
    int var76 = var74.getYSize();
    int var77 = var74.getYSize();
    demo.pathplanning.model.CartesianGraph var80 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var81 = var80.getXSize();
    int var82 = var80.getYSize();
    int var83 = var80.getYSize();
    demo.pathplanning.model.CartesianGraph var84 = new demo.pathplanning.model.CartesianGraph(var77, var83);
    demo.pathplanning.model.CartesianGraph var85 = new demo.pathplanning.model.CartesianGraph(1, var77);
    demo.pathplanning.model.CartesianGraph var86 = new demo.pathplanning.model.CartesianGraph(1, var77);
    demo.pathplanning.model.Node var87 = new demo.pathplanning.model.Node(var27, var36, var77);
    demo.pathplanning.model.CartesianGraph var90 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var93 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var94 = new demo.pathplanning.model.Location(1, 1);
    int var95 = var94.getX();
    demo.pathplanning.model.Node var96 = new demo.pathplanning.model.Node(var7, var36, var95);
    int var97 = var7.getYSize();
    int var98 = var7.getYSize();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var8 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var24 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var29 + "' != '" + "0,\n"+ "'", var29.equals("0,\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var38 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var39 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var40 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var45);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var46);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var48);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var49 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var75 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var76 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var77 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var81 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var82 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var83 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var95 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var97 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var98 == 1);

  }

  public void test130() throws Throwable {

    demo.pathplanning.model.CartesianGraph var2 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var3 = var2.getXSize();
    int var4 = var2.getYSize();
    demo.pathplanning.model.CartesianGraph var7 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.algorithms.AStar var8 = new demo.pathplanning.algorithms.AStar(var7);
    java.lang.String var9 = var7.toString();
    demo.pathplanning.model.CartesianGraph var12 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var15 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var16 = new demo.pathplanning.model.Location(1, 1);
    boolean var18 = var16.equals((java.lang.Object)0L);
    demo.pathplanning.model.Node var19 = var7.getNode(var16);
    demo.pathplanning.model.CartesianGraph var22 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var25 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var26 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var29 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var30 = var29.getXSize();
    demo.pathplanning.model.CartesianGraph var33 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var34 = new demo.pathplanning.model.CartesianGraph(var30, 1);
    demo.pathplanning.model.Location var35 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.Node var36 = new demo.pathplanning.model.Node(var2, var16, 1);
    demo.pathplanning.algorithms.AStar var37 = new demo.pathplanning.algorithms.AStar(var2);
    demo.pathplanning.algorithms.PathPlanningContext var38 = new demo.pathplanning.algorithms.PathPlanningContext((demo.pathplanning.algorithms.PathPlanner)var37);
    demo.pathplanning.algorithms.PathPlanningContext var39 = new demo.pathplanning.algorithms.PathPlanningContext((demo.pathplanning.algorithms.PathPlanner)var37);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var3 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var4 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var9 + "' != '" + "0,\n"+ "'", var9.equals("0,\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var18 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var19);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var30 == 1);

  }

  public void test131() throws Throwable {

    demo.pathplanning.model.CartesianGraph var2 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var3 = var2.getXSize();
    int var4 = var2.getYSize();
    demo.pathplanning.model.CartesianGraph var7 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.algorithms.AStar var8 = new demo.pathplanning.algorithms.AStar(var7);
    demo.pathplanning.model.CartesianGraph var9 = var8.getGraph();
    demo.pathplanning.model.CartesianGraph var10 = var8.getGraph();
    demo.pathplanning.algorithms.PathPlanningContext var11 = new demo.pathplanning.algorithms.PathPlanningContext((demo.pathplanning.algorithms.PathPlanner)var8);
    demo.pathplanning.model.CartesianGraph var12 = var8.getGraph();
    int var13 = var12.getYSize();
    demo.pathplanning.model.CartesianGraph var16 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var19 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var20 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var23 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var26 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var27 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.Node var28 = new demo.pathplanning.model.Node(var12, var20, 1);
    int var29 = var28.getCost();
    demo.pathplanning.model.CartesianGraph var32 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var33 = var32.getXSize();
    int var34 = var32.getYSize();
    int var35 = var32.getYSize();
    demo.pathplanning.model.CartesianGraph var38 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var39 = new demo.pathplanning.model.Location(var35, 1);
    demo.pathplanning.model.CartesianGraph var40 = new demo.pathplanning.model.CartesianGraph(var29, 1);
    demo.pathplanning.model.CartesianGraph var43 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.algorithms.AStar var44 = new demo.pathplanning.algorithms.AStar(var43);
    demo.pathplanning.model.CartesianGraph var45 = var44.getGraph();
    demo.pathplanning.model.CartesianGraph var46 = var44.getGraph();
    demo.pathplanning.algorithms.PathPlanningContext var47 = new demo.pathplanning.algorithms.PathPlanningContext((demo.pathplanning.algorithms.PathPlanner)var44);
    demo.pathplanning.model.CartesianGraph var48 = var44.getGraph();
    int var49 = var48.getYSize();
    demo.pathplanning.model.CartesianGraph var50 = new demo.pathplanning.model.CartesianGraph(1, var49);
    int var51 = var50.getXSize();
    demo.pathplanning.model.Location var52 = new demo.pathplanning.model.Location(var4, var51);
    int var53 = var52.getY();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var3 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var4 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var9);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var10);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var12);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var13 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var29 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var33 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var34 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var35 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var45);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var46);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var48);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var49 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var51 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var53 == 1);

  }

  public void test132() throws Throwable {

    demo.pathplanning.model.CartesianGraph var2 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var5 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var6 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var9 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var10 = var9.getXSize();
    int var11 = var9.getYSize();
    int var12 = var9.getYSize();
    demo.pathplanning.model.CartesianGraph var15 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var16 = var15.getXSize();
    int var17 = var15.getYSize();
    int var18 = var15.getYSize();
    demo.pathplanning.model.CartesianGraph var19 = new demo.pathplanning.model.CartesianGraph(var12, var18);
    demo.pathplanning.model.CartesianGraph var20 = new demo.pathplanning.model.CartesianGraph(1, var12);
    int var21 = var20.getYSize();
    demo.pathplanning.model.CartesianGraph var24 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.algorithms.AStar var25 = new demo.pathplanning.algorithms.AStar(var24);
    java.lang.String var26 = var24.toString();
    demo.pathplanning.model.CartesianGraph var29 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var32 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var33 = new demo.pathplanning.model.Location(1, 1);
    boolean var35 = var33.equals((java.lang.Object)0L);
    demo.pathplanning.model.Node var36 = var24.getNode(var33);
    demo.pathplanning.model.CartesianGraph var39 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var40 = var39.getXSize();
    int var41 = var39.getYSize();
    int var42 = var39.getYSize();
    demo.pathplanning.model.CartesianGraph var45 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var46 = var45.getXSize();
    int var47 = var45.getYSize();
    int var48 = var45.getYSize();
    demo.pathplanning.model.CartesianGraph var49 = new demo.pathplanning.model.CartesianGraph(var42, var48);
    demo.pathplanning.model.CartesianGraph var52 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var55 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var56 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var57 = new demo.pathplanning.model.CartesianGraph(var42, 1);
    demo.pathplanning.model.Node var58 = new demo.pathplanning.model.Node(var20, var33, 1);
    demo.pathplanning.model.CartesianGraph var61 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.algorithms.AStar var62 = new demo.pathplanning.algorithms.AStar(var61);
    java.lang.String var63 = var61.toString();
    int var64 = var61.getYSize();
    demo.pathplanning.model.CartesianGraph var65 = new demo.pathplanning.model.CartesianGraph(1, var64);
    int var66 = var65.getXSize();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var11 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var12 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var16 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var17 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var18 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var21 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var26 + "' != '" + "0,\n"+ "'", var26.equals("0,\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var35 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var36);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var40 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var41 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var42 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var46 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var47 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var48 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var63 + "' != '" + "0,\n"+ "'", var63.equals("0,\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var64 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var66 == 1);

  }

  public void test133() throws Throwable {

    demo.pathplanning.model.CartesianGraph var2 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.algorithms.AStar var3 = new demo.pathplanning.algorithms.AStar(var2);
    demo.pathplanning.model.CartesianGraph var4 = var3.getGraph();
    demo.pathplanning.model.CartesianGraph var5 = var3.getGraph();
    demo.pathplanning.algorithms.PathPlanningContext var6 = new demo.pathplanning.algorithms.PathPlanningContext((demo.pathplanning.algorithms.PathPlanner)var3);
    demo.pathplanning.model.CartesianGraph var7 = var3.getGraph();
    int var8 = var7.getYSize();
    demo.pathplanning.model.CartesianGraph var11 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var14 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var15 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var18 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var21 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var22 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.Node var23 = new demo.pathplanning.model.Node(var7, var15, 1);
    demo.pathplanning.model.CartesianGraph var26 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var27 = var26.getXSize();
    int var28 = var26.getYSize();
    int var29 = var26.getYSize();
    demo.pathplanning.model.CartesianGraph var32 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var33 = var32.getXSize();
    int var34 = var32.getYSize();
    int var35 = var32.getYSize();
    demo.pathplanning.model.CartesianGraph var36 = new demo.pathplanning.model.CartesianGraph(var29, var35);
    demo.pathplanning.model.CartesianGraph var39 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var42 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var43 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var44 = new demo.pathplanning.model.CartesianGraph(var29, 1);
    java.lang.String var45 = var44.toString();
    demo.pathplanning.model.CartesianGraph var48 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var51 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var52 = new demo.pathplanning.model.Location(1, 1);
    boolean var54 = var52.equals((java.lang.Object)0L);
    demo.pathplanning.model.Node var55 = var44.getNode(var52);
    demo.pathplanning.model.CartesianGraph var58 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var61 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var62 = new demo.pathplanning.model.Location(1, 1);
    boolean var64 = var62.equals((java.lang.Object)0L);
    int var65 = var62.getX();
    int var66 = var62.getX();
    demo.pathplanning.model.CartesianGraph var69 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var70 = var69.getXSize();
    demo.pathplanning.model.Node var71 = new demo.pathplanning.model.Node(var44, var62, var70);
    int var72 = var71.getCost();
    java.util.Collection var73 = var71.getNeighbors();
    demo.pathplanning.model.CartesianGraph var76 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var77 = var76.getXSize();
    demo.pathplanning.algorithms.AStar var78 = new demo.pathplanning.algorithms.AStar(var76);
    demo.pathplanning.model.CartesianGraph var81 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var84 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var85 = new demo.pathplanning.model.Location(1, 1);
    boolean var87 = var85.equals((java.lang.Object)0L);
    demo.pathplanning.model.Node var88 = var76.getNode(var85);
    demo.pathplanning.algorithms.AStar var89 = new demo.pathplanning.algorithms.AStar(var76);
    demo.pathplanning.model.CartesianGraph var90 = var89.getGraph();
    boolean var91 = var71.equals((java.lang.Object)var89);
    java.lang.String var92 = var71.toString();
    boolean var93 = var23.equals((java.lang.Object)var71);
    int var94 = var71.getCost();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var8 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var27 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var28 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var29 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var33 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var34 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var35 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var45 + "' != '" + "0,\n"+ "'", var45.equals("0,\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var54 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var55);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var64 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var65 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var66 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var70 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var72 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var73);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var77 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var87 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var88);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var90);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var91 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var92 + "' != '" + "(1,1)=1"+ "'", var92.equals("(1,1)=1"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var93 == true);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var94 == 1);

  }

  public void test134() throws Throwable {

    demo.pathplanning.model.CartesianGraph var2 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var5 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var6 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var9 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var10 = var9.getXSize();
    demo.pathplanning.model.CartesianGraph var13 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var14 = new demo.pathplanning.model.CartesianGraph(var10, 1);
    demo.pathplanning.model.Location var15 = new demo.pathplanning.model.Location(1, 1);
    int var16 = var15.getX();
    int var17 = var15.getY();
    demo.pathplanning.model.CartesianGraph var20 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.algorithms.AStar var21 = new demo.pathplanning.algorithms.AStar(var20);
    boolean var22 = var15.equals((java.lang.Object)var21);
    int var23 = var15.getY();
    demo.pathplanning.model.CartesianGraph var26 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.algorithms.AStar var27 = new demo.pathplanning.algorithms.AStar(var26);
    java.lang.String var28 = var26.toString();
    demo.pathplanning.model.CartesianGraph var31 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var34 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var35 = new demo.pathplanning.model.Location(1, 1);
    boolean var37 = var35.equals((java.lang.Object)0L);
    demo.pathplanning.model.Node var38 = var26.getNode(var35);
    java.lang.String var39 = var35.toString();
    demo.pathplanning.model.CartesianGraph var42 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.algorithms.AStar var43 = new demo.pathplanning.algorithms.AStar(var42);
    demo.pathplanning.model.CartesianGraph var44 = var43.getGraph();
    demo.pathplanning.model.CartesianGraph var45 = var43.getGraph();
    demo.pathplanning.algorithms.PathPlanningContext var46 = new demo.pathplanning.algorithms.PathPlanningContext((demo.pathplanning.algorithms.PathPlanner)var43);
    demo.pathplanning.model.CartesianGraph var47 = var43.getGraph();
    int var48 = var47.getYSize();
    demo.pathplanning.model.CartesianGraph var51 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var54 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var55 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var58 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var61 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var62 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.Node var63 = new demo.pathplanning.model.Node(var47, var55, 1);
    boolean var64 = var35.equals((java.lang.Object)1);
    int var65 = var35.getX();
    demo.pathplanning.model.CartesianGraph var68 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var69 = var68.getXSize();
    demo.pathplanning.algorithms.AStar var70 = new demo.pathplanning.algorithms.AStar(var68);
    demo.pathplanning.model.CartesianGraph var73 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var76 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var77 = new demo.pathplanning.model.Location(1, 1);
    boolean var79 = var77.equals((java.lang.Object)0L);
    demo.pathplanning.model.Node var80 = var68.getNode(var77);
    int var81 = var77.getY();
    demo.pathplanning.model.Location var82 = new demo.pathplanning.model.Location(var65, var81);
    demo.pathplanning.model.Location var83 = new demo.pathplanning.model.Location(var23, var65);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var16 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var17 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var22 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var23 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var28 + "' != '" + "0,\n"+ "'", var28.equals("0,\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var37 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var38);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var39 + "' != '" + "(1,1)"+ "'", var39.equals("(1,1)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var44);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var45);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var47);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var48 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var64 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var65 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var69 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var79 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var80);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var81 == 1);

  }

  public void test135() throws Throwable {

    demo.pathplanning.model.CartesianGraph var2 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var5 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var6 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var9 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var10 = var9.getXSize();
    int var11 = var9.getYSize();
    int var12 = var9.getYSize();
    demo.pathplanning.model.CartesianGraph var15 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var16 = var15.getXSize();
    int var17 = var15.getYSize();
    int var18 = var15.getYSize();
    demo.pathplanning.model.CartesianGraph var19 = new demo.pathplanning.model.CartesianGraph(var12, var18);
    demo.pathplanning.model.CartesianGraph var20 = new demo.pathplanning.model.CartesianGraph(1, var12);
    int var21 = var20.getYSize();
    demo.pathplanning.model.CartesianGraph var24 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var25 = var24.getXSize();
    int var26 = var24.getYSize();
    int var27 = var24.getYSize();
    demo.pathplanning.model.CartesianGraph var30 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var31 = new demo.pathplanning.model.Location(var27, 1);
    java.lang.String var32 = var31.toString();
    demo.pathplanning.model.Node var33 = var20.getNode(var31);
    demo.pathplanning.algorithms.AStar var34 = new demo.pathplanning.algorithms.AStar(var20);
    demo.pathplanning.model.CartesianGraph var35 = var34.getGraph();
    demo.pathplanning.model.CartesianGraph var38 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var39 = var38.getXSize();
    int var40 = var38.getYSize();
    demo.pathplanning.model.CartesianGraph var43 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.algorithms.AStar var44 = new demo.pathplanning.algorithms.AStar(var43);
    java.lang.String var45 = var43.toString();
    demo.pathplanning.model.CartesianGraph var48 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var51 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var52 = new demo.pathplanning.model.Location(1, 1);
    boolean var54 = var52.equals((java.lang.Object)0L);
    demo.pathplanning.model.Node var55 = var43.getNode(var52);
    demo.pathplanning.model.CartesianGraph var58 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var61 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var62 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var65 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var66 = var65.getXSize();
    demo.pathplanning.model.CartesianGraph var69 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var70 = new demo.pathplanning.model.CartesianGraph(var66, 1);
    demo.pathplanning.model.Location var71 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.Node var72 = new demo.pathplanning.model.Node(var38, var52, 1);
    int var73 = var52.getX();
    demo.pathplanning.model.CartesianGraph var76 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var77 = var76.getXSize();
    demo.pathplanning.model.CartesianGraph var80 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var81 = new demo.pathplanning.model.CartesianGraph(var77, 1);
    boolean var82 = var52.equals((java.lang.Object)var77);
    demo.pathplanning.model.CartesianGraph var85 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.algorithms.AStar var86 = new demo.pathplanning.algorithms.AStar(var85);
    java.lang.String var87 = var85.toString();
    demo.pathplanning.model.CartesianGraph var90 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var93 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var94 = new demo.pathplanning.model.Location(1, 1);
    boolean var96 = var94.equals((java.lang.Object)0L);
    demo.pathplanning.model.Node var97 = var85.getNode(var94);
    java.util.List var98 = var34.getPath(var52, var94);

  }

  public void test136() throws Throwable {

    demo.pathplanning.model.CartesianGraph var2 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.algorithms.AStar var3 = new demo.pathplanning.algorithms.AStar(var2);
    demo.pathplanning.model.CartesianGraph var4 = var3.getGraph();
    demo.pathplanning.model.CartesianGraph var5 = var3.getGraph();
    demo.pathplanning.algorithms.PathPlanningContext var6 = new demo.pathplanning.algorithms.PathPlanningContext((demo.pathplanning.algorithms.PathPlanner)var3);
    demo.pathplanning.model.CartesianGraph var7 = var3.getGraph();
    int var8 = var7.getYSize();
    demo.pathplanning.model.CartesianGraph var11 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var14 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var15 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var18 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var21 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var22 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.Node var23 = new demo.pathplanning.model.Node(var7, var15, 1);
    java.util.Collection var24 = var23.getNeighbors();
    java.util.Collection var25 = var23.getNeighbors();
    java.lang.String var26 = var23.toString();
    java.lang.String var27 = var23.toString();
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      demo.pathplanning.model.Direction var28 = demo.pathplanning.model.Direction.valueOf(var27);
      fail("Expected exception of type java.lang.IllegalArgumentException");
    } catch (java.lang.IllegalArgumentException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var8 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var24);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var25);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var26 + "' != '" + "(1,1)=1"+ "'", var26.equals("(1,1)=1"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var27 + "' != '" + "(1,1)=1"+ "'", var27.equals("(1,1)=1"));

  }

  public void test137() throws Throwable {

    demo.pathplanning.model.CartesianGraph var2 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var3 = var2.getXSize();
    int var4 = var2.getYSize();
    demo.pathplanning.model.CartesianGraph var7 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var8 = var7.getXSize();
    demo.pathplanning.algorithms.AStar var9 = new demo.pathplanning.algorithms.AStar(var7);
    demo.pathplanning.model.CartesianGraph var12 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var15 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var16 = new demo.pathplanning.model.Location(1, 1);
    boolean var18 = var16.equals((java.lang.Object)0L);
    demo.pathplanning.model.Node var19 = var7.getNode(var16);
    int var20 = var16.getY();
    demo.pathplanning.model.CartesianGraph var23 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.algorithms.AStar var24 = new demo.pathplanning.algorithms.AStar(var23);
    demo.pathplanning.model.CartesianGraph var25 = var24.getGraph();
    demo.pathplanning.model.CartesianGraph var26 = var24.getGraph();
    demo.pathplanning.algorithms.PathPlanningContext var27 = new demo.pathplanning.algorithms.PathPlanningContext((demo.pathplanning.algorithms.PathPlanner)var24);
    demo.pathplanning.model.CartesianGraph var28 = var24.getGraph();
    int var29 = var28.getYSize();
    demo.pathplanning.model.CartesianGraph var32 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var35 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var36 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var39 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var42 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var43 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.Node var44 = new demo.pathplanning.model.Node(var28, var36, 1);
    java.util.Collection var45 = var44.getNeighbors();
    int var46 = var44.getCost();
    java.util.Collection var47 = var44.getNeighbors();
    demo.pathplanning.model.CartesianGraph var50 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.algorithms.AStar var51 = new demo.pathplanning.algorithms.AStar(var50);
    demo.pathplanning.model.CartesianGraph var52 = var51.getGraph();
    demo.pathplanning.model.CartesianGraph var53 = var51.getGraph();
    demo.pathplanning.algorithms.PathPlanningContext var54 = new demo.pathplanning.algorithms.PathPlanningContext((demo.pathplanning.algorithms.PathPlanner)var51);
    demo.pathplanning.model.CartesianGraph var55 = var51.getGraph();
    int var56 = var55.getYSize();
    demo.pathplanning.model.CartesianGraph var59 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var62 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var63 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var66 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var69 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var70 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.Node var71 = new demo.pathplanning.model.Node(var55, var63, 1);
    java.util.Collection var72 = var71.getNeighbors();
    int var73 = var71.getCost();
    boolean var74 = var44.equals((java.lang.Object)var73);
    demo.pathplanning.model.Node var75 = new demo.pathplanning.model.Node(var2, var16, var73);
    java.util.Collection var76 = var75.getNeighbors();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var3 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var4 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var8 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var18 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var19);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var20 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var25);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var26);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var28);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var29 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var45);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var46 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var47);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var52);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var53);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var55);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var56 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var72);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var73 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var74 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var76);

  }

  public void test138() throws Throwable {

    demo.pathplanning.model.CartesianGraph var2 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var3 = var2.getXSize();
    int var4 = var2.getYSize();
    int var5 = var2.getYSize();
    demo.pathplanning.model.CartesianGraph var8 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var9 = var8.getXSize();
    int var10 = var8.getYSize();
    int var11 = var8.getYSize();
    demo.pathplanning.model.CartesianGraph var12 = new demo.pathplanning.model.CartesianGraph(var5, var11);
    int var13 = var12.getXSize();
    demo.pathplanning.model.CartesianGraph var16 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.algorithms.AStar var17 = new demo.pathplanning.algorithms.AStar(var16);
    java.lang.String var18 = var16.toString();
    demo.pathplanning.model.CartesianGraph var21 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var24 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var25 = new demo.pathplanning.model.Location(1, 1);
    boolean var27 = var25.equals((java.lang.Object)0L);
    demo.pathplanning.model.Node var28 = var16.getNode(var25);
    demo.pathplanning.model.CartesianGraph var31 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var32 = var31.getXSize();
    demo.pathplanning.algorithms.AStar var33 = new demo.pathplanning.algorithms.AStar(var31);
    demo.pathplanning.model.CartesianGraph var36 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var39 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var40 = new demo.pathplanning.model.Location(1, 1);
    boolean var42 = var40.equals((java.lang.Object)0L);
    demo.pathplanning.model.Node var43 = var31.getNode(var40);
    int var44 = var31.getXSize();
    demo.pathplanning.model.Node var45 = new demo.pathplanning.model.Node(var12, var25, var44);
    int var46 = var12.getXSize();
    java.lang.String var47 = var12.toString();
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      demo.pathplanning.model.Direction var48 = demo.pathplanning.model.Direction.valueOf(var47);
      fail("Expected exception of type java.lang.IllegalArgumentException");
    } catch (java.lang.IllegalArgumentException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var3 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var4 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var5 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var9 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var11 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var13 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var18 + "' != '" + "0,\n"+ "'", var18.equals("0,\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var27 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var28);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var32 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var42 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var43);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var44 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var46 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var47 + "' != '" + "0,\n"+ "'", var47.equals("0,\n"));

  }

  public void test139() throws Throwable {

    demo.pathplanning.model.CartesianGraph var2 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var3 = var2.getXSize();
    demo.pathplanning.algorithms.AStar var4 = new demo.pathplanning.algorithms.AStar(var2);
    demo.pathplanning.model.CartesianGraph var7 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var10 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var11 = new demo.pathplanning.model.Location(1, 1);
    boolean var13 = var11.equals((java.lang.Object)0L);
    demo.pathplanning.model.Node var14 = var2.getNode(var11);
    demo.pathplanning.algorithms.AStar var15 = new demo.pathplanning.algorithms.AStar(var2);
    demo.pathplanning.algorithms.PathPlanningContext var16 = new demo.pathplanning.algorithms.PathPlanningContext((demo.pathplanning.algorithms.PathPlanner)var15);
    demo.pathplanning.model.CartesianGraph var19 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var22 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var23 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var26 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var27 = var26.getXSize();
    int var28 = var26.getYSize();
    int var29 = var26.getYSize();
    demo.pathplanning.model.CartesianGraph var32 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var33 = var32.getXSize();
    int var34 = var32.getYSize();
    int var35 = var32.getYSize();
    demo.pathplanning.model.CartesianGraph var36 = new demo.pathplanning.model.CartesianGraph(var29, var35);
    demo.pathplanning.model.CartesianGraph var37 = new demo.pathplanning.model.CartesianGraph(1, var29);
    int var38 = var37.getYSize();
    demo.pathplanning.model.CartesianGraph var41 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var42 = var41.getXSize();
    int var43 = var41.getYSize();
    int var44 = var41.getYSize();
    demo.pathplanning.model.CartesianGraph var47 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var48 = new demo.pathplanning.model.Location(var44, 1);
    java.lang.String var49 = var48.toString();
    demo.pathplanning.model.Node var50 = var37.getNode(var48);
    int var51 = var48.getY();
    demo.pathplanning.model.CartesianGraph var54 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.algorithms.AStar var55 = new demo.pathplanning.algorithms.AStar(var54);
    java.lang.String var56 = var54.toString();
    demo.pathplanning.model.CartesianGraph var59 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var62 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var63 = new demo.pathplanning.model.Location(1, 1);
    boolean var65 = var63.equals((java.lang.Object)0L);
    demo.pathplanning.model.Node var66 = var54.getNode(var63);
    java.lang.String var67 = var63.toString();
    demo.pathplanning.model.CartesianGraph var70 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.algorithms.AStar var71 = new demo.pathplanning.algorithms.AStar(var70);
    demo.pathplanning.model.CartesianGraph var72 = var71.getGraph();
    demo.pathplanning.model.CartesianGraph var73 = var71.getGraph();
    demo.pathplanning.algorithms.PathPlanningContext var74 = new demo.pathplanning.algorithms.PathPlanningContext((demo.pathplanning.algorithms.PathPlanner)var71);
    demo.pathplanning.model.CartesianGraph var75 = var71.getGraph();
    int var76 = var75.getYSize();
    demo.pathplanning.model.CartesianGraph var79 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var82 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var83 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var86 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var89 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var90 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.Node var91 = new demo.pathplanning.model.Node(var75, var83, 1);
    boolean var92 = var63.equals((java.lang.Object)1);
    int var93 = var63.getX();
    java.util.List var94 = var15.getPath(var48, var63);

  }

  public void test140() throws Throwable {

    demo.pathplanning.model.CartesianGraph var2 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var3 = var2.getXSize();
    demo.pathplanning.algorithms.AStar var4 = new demo.pathplanning.algorithms.AStar(var2);
    demo.pathplanning.model.CartesianGraph var7 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var10 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var11 = new demo.pathplanning.model.Location(1, 1);
    boolean var13 = var11.equals((java.lang.Object)0L);
    demo.pathplanning.model.Node var14 = var2.getNode(var11);
    int var15 = var2.getYSize();
    demo.pathplanning.model.CartesianGraph var18 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var19 = var18.getXSize();
    int var20 = var18.getYSize();
    int var21 = var18.getYSize();
    demo.pathplanning.model.CartesianGraph var24 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var25 = new demo.pathplanning.model.Location(var21, 1);
    java.lang.String var26 = var25.toString();
    demo.pathplanning.model.CartesianGraph var29 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var32 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var33 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var36 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var37 = var36.getXSize();
    int var38 = var36.getYSize();
    int var39 = var36.getYSize();
    demo.pathplanning.model.CartesianGraph var42 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var43 = var42.getXSize();
    int var44 = var42.getYSize();
    int var45 = var42.getYSize();
    demo.pathplanning.model.CartesianGraph var46 = new demo.pathplanning.model.CartesianGraph(var39, var45);
    demo.pathplanning.model.CartesianGraph var47 = new demo.pathplanning.model.CartesianGraph(1, var39);
    demo.pathplanning.model.Node var48 = new demo.pathplanning.model.Node(var2, var25, var39);
    java.util.Collection var49 = var48.getNeighbors();
    int var50 = var48.getCost();
    java.util.Collection var51 = var48.getNeighbors();
    demo.pathplanning.model.Location var52 = var48.getLocation();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var3 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var13 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var14);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var15 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var19 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var20 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var21 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var26 + "' != '" + "(1,1)"+ "'", var26.equals("(1,1)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var37 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var38 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var39 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var43 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var44 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var45 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var49);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var50 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var51);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var52);

  }

  public void test141() throws Throwable {

    demo.pathplanning.model.CartesianGraph var2 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var3 = var2.getXSize();
    int var4 = var2.getYSize();
    int var5 = var2.getYSize();
    demo.pathplanning.model.CartesianGraph var8 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var9 = var8.getXSize();
    int var10 = var8.getYSize();
    int var11 = var8.getYSize();
    demo.pathplanning.model.CartesianGraph var12 = new demo.pathplanning.model.CartesianGraph(var5, var11);
    demo.pathplanning.model.CartesianGraph var15 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var18 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var19 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var20 = new demo.pathplanning.model.CartesianGraph(var5, 1);
    java.lang.String var21 = var20.toString();
    demo.pathplanning.algorithms.AStar var22 = new demo.pathplanning.algorithms.AStar(var20);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var3 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var4 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var5 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var9 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var11 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var21 + "' != '" + "0,\n"+ "'", var21.equals("0,\n"));

  }

  public void test142() throws Throwable {

    demo.pathplanning.model.CartesianGraph var2 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var3 = var2.getXSize();
    int var4 = var2.getYSize();
    int var5 = var2.getYSize();
    demo.pathplanning.model.CartesianGraph var8 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var9 = var8.getXSize();
    int var10 = var8.getYSize();
    int var11 = var8.getYSize();
    demo.pathplanning.model.CartesianGraph var12 = new demo.pathplanning.model.CartesianGraph(var5, var11);
    java.lang.String var13 = var12.toString();
    demo.pathplanning.model.CartesianGraph var16 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.algorithms.AStar var17 = new demo.pathplanning.algorithms.AStar(var16);
    java.lang.String var18 = var16.toString();
    demo.pathplanning.model.CartesianGraph var21 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var24 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var25 = new demo.pathplanning.model.Location(1, 1);
    boolean var27 = var25.equals((java.lang.Object)0L);
    demo.pathplanning.model.Node var28 = var16.getNode(var25);
    java.lang.String var29 = var25.toString();
    demo.pathplanning.model.CartesianGraph var32 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.algorithms.AStar var33 = new demo.pathplanning.algorithms.AStar(var32);
    demo.pathplanning.model.CartesianGraph var34 = var33.getGraph();
    demo.pathplanning.model.CartesianGraph var35 = var33.getGraph();
    demo.pathplanning.algorithms.PathPlanningContext var36 = new demo.pathplanning.algorithms.PathPlanningContext((demo.pathplanning.algorithms.PathPlanner)var33);
    demo.pathplanning.model.CartesianGraph var37 = var33.getGraph();
    int var38 = var37.getYSize();
    demo.pathplanning.model.CartesianGraph var41 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var44 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var45 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var48 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var51 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var52 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.Node var53 = new demo.pathplanning.model.Node(var37, var45, 1);
    boolean var54 = var25.equals((java.lang.Object)1);
    int var55 = var25.getX();
    demo.pathplanning.model.CartesianGraph var58 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var59 = var58.getXSize();
    int var60 = var58.getYSize();
    int var61 = var58.getYSize();
    demo.pathplanning.model.CartesianGraph var64 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var65 = new demo.pathplanning.model.Location(var61, 1);
    demo.pathplanning.model.Node var66 = new demo.pathplanning.model.Node(var12, var25, var61);
    int var67 = var12.getXSize();
    int var68 = var12.getYSize();
    int var69 = var12.getXSize();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var3 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var4 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var5 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var9 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var11 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var13 + "' != '" + "0,\n"+ "'", var13.equals("0,\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var18 + "' != '" + "0,\n"+ "'", var18.equals("0,\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var27 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var28);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var29 + "' != '" + "(1,1)"+ "'", var29.equals("(1,1)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var34);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var35);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var37);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var38 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var54 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var55 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var59 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var60 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var61 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var67 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var68 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var69 == 1);

  }

  public void test143() throws Throwable {

    demo.pathplanning.model.CartesianGraph var2 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.algorithms.AStar var3 = new demo.pathplanning.algorithms.AStar(var2);
    java.lang.String var4 = var2.toString();
    demo.pathplanning.model.CartesianGraph var7 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var10 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var11 = new demo.pathplanning.model.Location(1, 1);
    boolean var13 = var11.equals((java.lang.Object)0L);
    int var14 = var11.getX();
    int var15 = var11.getX();
    demo.pathplanning.model.CartesianGraph var18 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.algorithms.AStar var19 = new demo.pathplanning.algorithms.AStar(var18);
    demo.pathplanning.model.CartesianGraph var20 = var19.getGraph();
    demo.pathplanning.model.CartesianGraph var21 = var19.getGraph();
    demo.pathplanning.algorithms.PathPlanningContext var22 = new demo.pathplanning.algorithms.PathPlanningContext((demo.pathplanning.algorithms.PathPlanner)var19);
    demo.pathplanning.model.CartesianGraph var23 = var19.getGraph();
    int var24 = var23.getYSize();
    demo.pathplanning.model.CartesianGraph var27 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var30 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var31 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var34 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var37 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var38 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.Node var39 = new demo.pathplanning.model.Node(var23, var31, 1);
    demo.pathplanning.model.CartesianGraph var42 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var45 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var46 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var49 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var50 = var49.getXSize();
    int var51 = var49.getYSize();
    int var52 = var49.getYSize();
    demo.pathplanning.model.CartesianGraph var55 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var56 = var55.getXSize();
    int var57 = var55.getYSize();
    int var58 = var55.getYSize();
    demo.pathplanning.model.CartesianGraph var59 = new demo.pathplanning.model.CartesianGraph(var52, var58);
    demo.pathplanning.model.CartesianGraph var60 = new demo.pathplanning.model.CartesianGraph(1, var52);
    demo.pathplanning.model.CartesianGraph var61 = new demo.pathplanning.model.CartesianGraph(1, var52);
    demo.pathplanning.model.Node var62 = new demo.pathplanning.model.Node(var2, var11, var52);
    demo.pathplanning.model.CartesianGraph var65 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var66 = var65.getXSize();
    int var67 = var65.getYSize();
    int var68 = var65.getYSize();
    demo.pathplanning.model.CartesianGraph var71 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var72 = var71.getXSize();
    int var73 = var71.getYSize();
    int var74 = var71.getYSize();
    demo.pathplanning.model.CartesianGraph var75 = new demo.pathplanning.model.CartesianGraph(var68, var74);
    demo.pathplanning.model.CartesianGraph var76 = new demo.pathplanning.model.CartesianGraph(var52, var74);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var4 + "' != '" + "0,\n"+ "'", var4.equals("0,\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var13 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var14 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var15 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var20);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var21);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var23);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var24 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var50 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var51 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var52 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var56 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var57 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var58 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var66 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var67 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var68 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var72 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var73 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var74 == 1);

  }

  public void test144() throws Throwable {

    demo.pathplanning.model.CartesianGraph var2 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var3 = var2.getXSize();
    int var4 = var2.getYSize();
    demo.pathplanning.model.CartesianGraph var7 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.algorithms.AStar var8 = new demo.pathplanning.algorithms.AStar(var7);
    java.lang.String var9 = var7.toString();
    demo.pathplanning.model.CartesianGraph var12 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var15 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var16 = new demo.pathplanning.model.Location(1, 1);
    boolean var18 = var16.equals((java.lang.Object)0L);
    demo.pathplanning.model.Node var19 = var7.getNode(var16);
    demo.pathplanning.model.CartesianGraph var22 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var25 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var26 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var29 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var30 = var29.getXSize();
    demo.pathplanning.model.CartesianGraph var33 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var34 = new demo.pathplanning.model.CartesianGraph(var30, 1);
    demo.pathplanning.model.Location var35 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.Node var36 = new demo.pathplanning.model.Node(var2, var16, 1);
    demo.pathplanning.model.Location var37 = var36.getLocation();
    java.util.Collection var38 = var36.getNeighbors();
    java.lang.String var39 = var36.toString();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var3 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var4 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var9 + "' != '" + "0,\n"+ "'", var9.equals("0,\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var18 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var19);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var30 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var37);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var38);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var39 + "' != '" + "(1,1)=1"+ "'", var39.equals("(1,1)=1"));

  }

  public void test145() throws Throwable {

    demo.pathplanning.model.CartesianGraph var2 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var3 = var2.getXSize();
    demo.pathplanning.algorithms.AStar var4 = new demo.pathplanning.algorithms.AStar(var2);
    demo.pathplanning.model.CartesianGraph var7 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var10 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var11 = new demo.pathplanning.model.Location(1, 1);
    boolean var13 = var11.equals((java.lang.Object)0L);
    demo.pathplanning.model.Node var14 = var2.getNode(var11);
    int var15 = var2.getYSize();
    demo.pathplanning.model.CartesianGraph var18 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var19 = var18.getXSize();
    int var20 = var18.getYSize();
    int var21 = var18.getYSize();
    demo.pathplanning.model.CartesianGraph var24 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var25 = new demo.pathplanning.model.Location(var21, 1);
    java.lang.String var26 = var25.toString();
    demo.pathplanning.model.CartesianGraph var29 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var32 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var33 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var36 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var37 = var36.getXSize();
    int var38 = var36.getYSize();
    int var39 = var36.getYSize();
    demo.pathplanning.model.CartesianGraph var42 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var43 = var42.getXSize();
    int var44 = var42.getYSize();
    int var45 = var42.getYSize();
    demo.pathplanning.model.CartesianGraph var46 = new demo.pathplanning.model.CartesianGraph(var39, var45);
    demo.pathplanning.model.CartesianGraph var47 = new demo.pathplanning.model.CartesianGraph(1, var39);
    demo.pathplanning.model.Node var48 = new demo.pathplanning.model.Node(var2, var25, var39);
    demo.pathplanning.model.CartesianGraph var51 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.algorithms.AStar var52 = new demo.pathplanning.algorithms.AStar(var51);
    demo.pathplanning.model.CartesianGraph var53 = var52.getGraph();
    demo.pathplanning.model.CartesianGraph var54 = var52.getGraph();
    demo.pathplanning.algorithms.PathPlanningContext var55 = new demo.pathplanning.algorithms.PathPlanningContext((demo.pathplanning.algorithms.PathPlanner)var52);
    demo.pathplanning.model.CartesianGraph var56 = var52.getGraph();
    int var57 = var56.getYSize();
    demo.pathplanning.model.CartesianGraph var60 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var63 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var64 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var67 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var70 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var71 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.Node var72 = new demo.pathplanning.model.Node(var56, var64, 1);
    demo.pathplanning.model.Node var73 = var2.getNode(var64);
    java.lang.String var74 = var64.toString();
    int var75 = var64.getX();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var3 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var13 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var14);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var15 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var19 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var20 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var21 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var26 + "' != '" + "(1,1)"+ "'", var26.equals("(1,1)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var37 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var38 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var39 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var43 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var44 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var45 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var53);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var54);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var56);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var57 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var73);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var74 + "' != '" + "(1,1)"+ "'", var74.equals("(1,1)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var75 == 1);

  }

  public void test146() throws Throwable {

    demo.pathplanning.model.CartesianGraph var2 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.algorithms.AStar var3 = new demo.pathplanning.algorithms.AStar(var2);
    demo.pathplanning.model.CartesianGraph var4 = var3.getGraph();
    demo.pathplanning.algorithms.PathPlanningContext var5 = new demo.pathplanning.algorithms.PathPlanningContext((demo.pathplanning.algorithms.PathPlanner)var3);
    demo.pathplanning.model.CartesianGraph var6 = var3.getGraph();
    int var7 = var6.getXSize();
    int var8 = var6.getXSize();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var6);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var7 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var8 == 1);

  }

  public void test147() throws Throwable {

    demo.pathplanning.model.CartesianGraph var2 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.algorithms.AStar var3 = new demo.pathplanning.algorithms.AStar(var2);
    demo.pathplanning.model.CartesianGraph var4 = var3.getGraph();
    demo.pathplanning.model.CartesianGraph var5 = var3.getGraph();
    demo.pathplanning.algorithms.PathPlanningContext var6 = new demo.pathplanning.algorithms.PathPlanningContext((demo.pathplanning.algorithms.PathPlanner)var3);
    demo.pathplanning.model.CartesianGraph var7 = var3.getGraph();
    int var8 = var7.getYSize();
    demo.pathplanning.algorithms.AStar var9 = new demo.pathplanning.algorithms.AStar(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var8 == 1);

  }

  public void test148() throws Throwable {

    demo.pathplanning.model.CartesianGraph var2 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var5 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var6 = new demo.pathplanning.model.Location(1, 1);
    int var7 = var6.getX();
    demo.pathplanning.model.CartesianGraph var10 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var13 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var14 = new demo.pathplanning.model.Location(1, 1);
    boolean var16 = var14.equals((java.lang.Object)0L);
    int var17 = var14.getX();
    int var18 = var14.getX();
    int var19 = var14.getY();
    demo.pathplanning.model.CartesianGraph var22 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var23 = var22.getXSize();
    demo.pathplanning.algorithms.AStar var24 = new demo.pathplanning.algorithms.AStar(var22);
    demo.pathplanning.model.CartesianGraph var27 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var30 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var31 = new demo.pathplanning.model.Location(1, 1);
    boolean var33 = var31.equals((java.lang.Object)0L);
    demo.pathplanning.model.Node var34 = var22.getNode(var31);
    boolean var35 = var14.equals((java.lang.Object)var31);
    int var36 = var31.getY();
    boolean var37 = var6.equals((java.lang.Object)var31);
    int var38 = var6.getX();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var7 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var16 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var17 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var18 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var19 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var23 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var33 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var34);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var35 == true);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var36 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var37 == true);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var38 == 1);

  }

  public void test149() throws Throwable {

    demo.pathplanning.model.CartesianGraph var2 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.algorithms.AStar var3 = new demo.pathplanning.algorithms.AStar(var2);
    demo.pathplanning.model.CartesianGraph var4 = var3.getGraph();
    demo.pathplanning.model.CartesianGraph var5 = var3.getGraph();
    demo.pathplanning.algorithms.PathPlanningContext var6 = new demo.pathplanning.algorithms.PathPlanningContext((demo.pathplanning.algorithms.PathPlanner)var3);
    demo.pathplanning.model.CartesianGraph var7 = var3.getGraph();
    int var8 = var7.getYSize();
    demo.pathplanning.model.CartesianGraph var11 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var14 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var15 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var18 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var21 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var22 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.Node var23 = new demo.pathplanning.model.Node(var7, var15, 1);
    int var24 = var23.getCost();
    demo.pathplanning.model.CartesianGraph var27 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var28 = var27.getXSize();
    int var29 = var27.getYSize();
    int var30 = var27.getYSize();
    demo.pathplanning.model.CartesianGraph var33 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var34 = new demo.pathplanning.model.Location(var30, 1);
    demo.pathplanning.model.CartesianGraph var35 = new demo.pathplanning.model.CartesianGraph(var24, 1);
    demo.pathplanning.model.CartesianGraph var38 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.algorithms.AStar var39 = new demo.pathplanning.algorithms.AStar(var38);
    demo.pathplanning.model.CartesianGraph var40 = var39.getGraph();
    demo.pathplanning.model.CartesianGraph var41 = var39.getGraph();
    demo.pathplanning.algorithms.PathPlanningContext var42 = new demo.pathplanning.algorithms.PathPlanningContext((demo.pathplanning.algorithms.PathPlanner)var39);
    demo.pathplanning.model.CartesianGraph var43 = var39.getGraph();
    int var44 = var43.getYSize();
    demo.pathplanning.model.CartesianGraph var45 = new demo.pathplanning.model.CartesianGraph(1, var44);
    int var46 = var45.getXSize();
    demo.pathplanning.model.CartesianGraph var49 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.algorithms.AStar var50 = new demo.pathplanning.algorithms.AStar(var49);
    demo.pathplanning.model.CartesianGraph var51 = var50.getGraph();
    demo.pathplanning.model.CartesianGraph var52 = var50.getGraph();
    demo.pathplanning.algorithms.PathPlanningContext var53 = new demo.pathplanning.algorithms.PathPlanningContext((demo.pathplanning.algorithms.PathPlanner)var50);
    demo.pathplanning.model.CartesianGraph var54 = var50.getGraph();
    int var55 = var54.getYSize();
    demo.pathplanning.model.CartesianGraph var58 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var61 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var62 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var65 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var68 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var69 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.Node var70 = new demo.pathplanning.model.Node(var54, var62, 1);
    int var71 = var70.getCost();
    demo.pathplanning.model.CartesianGraph var74 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var75 = var74.getXSize();
    int var76 = var74.getYSize();
    int var77 = var74.getYSize();
    demo.pathplanning.model.CartesianGraph var80 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var81 = new demo.pathplanning.model.Location(var77, 1);
    demo.pathplanning.model.CartesianGraph var82 = new demo.pathplanning.model.CartesianGraph(var71, 1);
    demo.pathplanning.model.CartesianGraph var85 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var88 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var89 = new demo.pathplanning.model.Location(1, 1);
    boolean var91 = var89.equals((java.lang.Object)0L);
    demo.pathplanning.model.Node var92 = var82.getNode(var89);
    demo.pathplanning.model.Node var93 = var45.getNode(var89);
    int var94 = var89.getX();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var8 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var24 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var28 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var29 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var30 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var40);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var41);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var43);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var44 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var46 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var51);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var52);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var54);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var55 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var71 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var75 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var76 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var77 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var91 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var92);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var93);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var94 == 1);

  }

  public void test150() throws Throwable {

    demo.pathplanning.model.CartesianGraph var2 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var3 = var2.getXSize();
    demo.pathplanning.model.CartesianGraph var6 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var7 = new demo.pathplanning.model.CartesianGraph(var3, 1);
    demo.pathplanning.model.CartesianGraph var10 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.algorithms.AStar var11 = new demo.pathplanning.algorithms.AStar(var10);
    demo.pathplanning.model.CartesianGraph var12 = var11.getGraph();
    demo.pathplanning.model.CartesianGraph var13 = var11.getGraph();
    demo.pathplanning.algorithms.PathPlanningContext var14 = new demo.pathplanning.algorithms.PathPlanningContext((demo.pathplanning.algorithms.PathPlanner)var11);
    demo.pathplanning.model.CartesianGraph var15 = var11.getGraph();
    int var16 = var15.getYSize();
    demo.pathplanning.model.Location var17 = new demo.pathplanning.model.Location(var3, var16);
    java.lang.String var18 = var17.toString();
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      demo.pathplanning.model.Direction var19 = demo.pathplanning.model.Direction.valueOf(var18);
      fail("Expected exception of type java.lang.IllegalArgumentException");
    } catch (java.lang.IllegalArgumentException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var3 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var12);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var13);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var15);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var16 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var18 + "' != '" + "(1,1)"+ "'", var18.equals("(1,1)"));

  }

  public void test151() throws Throwable {

    demo.pathplanning.model.CartesianGraph var2 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var3 = var2.getXSize();
    int var4 = var2.getYSize();
    int var5 = var2.getYSize();
    demo.pathplanning.model.CartesianGraph var8 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var9 = var8.getXSize();
    int var10 = var8.getYSize();
    int var11 = var8.getYSize();
    demo.pathplanning.model.CartesianGraph var14 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var15 = var14.getXSize();
    int var16 = var14.getYSize();
    int var17 = var14.getYSize();
    demo.pathplanning.model.CartesianGraph var18 = new demo.pathplanning.model.CartesianGraph(var11, var17);
    demo.pathplanning.model.CartesianGraph var21 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var24 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var25 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var26 = new demo.pathplanning.model.CartesianGraph(var11, 1);
    demo.pathplanning.model.CartesianGraph var27 = new demo.pathplanning.model.CartesianGraph(var5, var11);
    demo.pathplanning.algorithms.AStar var28 = new demo.pathplanning.algorithms.AStar(var27);
    demo.pathplanning.algorithms.PathPlanningContext var29 = new demo.pathplanning.algorithms.PathPlanningContext((demo.pathplanning.algorithms.PathPlanner)var28);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var3 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var4 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var5 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var9 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var11 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var15 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var16 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var17 == 1);

  }

  public void test152() throws Throwable {

    demo.pathplanning.model.CartesianGraph var2 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.algorithms.AStar var3 = new demo.pathplanning.algorithms.AStar(var2);
    demo.pathplanning.model.CartesianGraph var4 = var3.getGraph();
    demo.pathplanning.model.CartesianGraph var5 = var3.getGraph();
    demo.pathplanning.algorithms.PathPlanningContext var6 = new demo.pathplanning.algorithms.PathPlanningContext((demo.pathplanning.algorithms.PathPlanner)var3);
    demo.pathplanning.model.CartesianGraph var7 = var3.getGraph();
    int var8 = var7.getYSize();
    demo.pathplanning.model.CartesianGraph var11 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var14 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var15 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var18 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var21 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var22 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.Node var23 = new demo.pathplanning.model.Node(var7, var15, 1);
    int var24 = var23.getCost();
    demo.pathplanning.model.CartesianGraph var27 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var28 = var27.getXSize();
    int var29 = var27.getYSize();
    int var30 = var27.getYSize();
    demo.pathplanning.model.CartesianGraph var33 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var34 = new demo.pathplanning.model.Location(var30, 1);
    demo.pathplanning.model.CartesianGraph var35 = new demo.pathplanning.model.CartesianGraph(var24, 1);
    demo.pathplanning.model.CartesianGraph var38 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var41 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var42 = new demo.pathplanning.model.Location(1, 1);
    boolean var44 = var42.equals((java.lang.Object)0L);
    demo.pathplanning.model.Node var45 = var35.getNode(var42);
    java.lang.String var46 = var35.toString();
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      demo.pathplanning.model.Direction var47 = demo.pathplanning.model.Direction.valueOf(var46);
      fail("Expected exception of type java.lang.IllegalArgumentException");
    } catch (java.lang.IllegalArgumentException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var8 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var24 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var28 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var29 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var30 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var44 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var45);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var46 + "' != '" + "0,\n"+ "'", var46.equals("0,\n"));

  }

  public void test153() throws Throwable {

    demo.pathplanning.model.CartesianGraph var2 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var3 = var2.getXSize();
    int var4 = var2.getYSize();
    int var5 = var2.getYSize();
    demo.pathplanning.model.CartesianGraph var8 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var9 = var8.getXSize();
    int var10 = var8.getYSize();
    int var11 = var8.getYSize();
    demo.pathplanning.model.CartesianGraph var12 = new demo.pathplanning.model.CartesianGraph(var5, var11);
    demo.pathplanning.model.CartesianGraph var15 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var18 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var19 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var20 = new demo.pathplanning.model.CartesianGraph(var5, 1);
    java.lang.String var21 = var20.toString();
    demo.pathplanning.model.CartesianGraph var24 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var27 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var28 = new demo.pathplanning.model.Location(1, 1);
    boolean var30 = var28.equals((java.lang.Object)0L);
    demo.pathplanning.model.Node var31 = var20.getNode(var28);
    demo.pathplanning.model.CartesianGraph var34 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var37 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var38 = new demo.pathplanning.model.Location(1, 1);
    boolean var40 = var38.equals((java.lang.Object)0L);
    int var41 = var38.getX();
    int var42 = var38.getX();
    demo.pathplanning.model.CartesianGraph var45 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var46 = var45.getXSize();
    demo.pathplanning.model.Node var47 = new demo.pathplanning.model.Node(var20, var38, var46);
    int var48 = var47.getCost();
    java.util.Collection var49 = var47.getNeighbors();
    int var50 = var47.getCost();
    demo.pathplanning.model.Location var51 = var47.getLocation();
    int var52 = var47.getCost();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var3 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var4 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var5 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var9 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var11 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var21 + "' != '" + "0,\n"+ "'", var21.equals("0,\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var30 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var31);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var40 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var41 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var42 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var46 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var48 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var49);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var50 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var51);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var52 == 1);

  }

  public void test154() throws Throwable {

    demo.pathplanning.model.CartesianGraph var2 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var3 = var2.getXSize();
    int var4 = var2.getYSize();
    int var5 = var2.getYSize();
    demo.pathplanning.model.CartesianGraph var8 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var9 = var8.getXSize();
    int var10 = var8.getYSize();
    int var11 = var8.getYSize();
    demo.pathplanning.model.CartesianGraph var12 = new demo.pathplanning.model.CartesianGraph(var5, var11);
    demo.pathplanning.model.CartesianGraph var15 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var18 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var19 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var20 = new demo.pathplanning.model.CartesianGraph(var5, 1);
    java.lang.String var21 = var20.toString();
    demo.pathplanning.model.CartesianGraph var24 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var27 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var28 = new demo.pathplanning.model.Location(1, 1);
    boolean var30 = var28.equals((java.lang.Object)0L);
    demo.pathplanning.model.Node var31 = var20.getNode(var28);
    demo.pathplanning.model.CartesianGraph var34 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var37 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var38 = new demo.pathplanning.model.Location(1, 1);
    boolean var40 = var38.equals((java.lang.Object)0L);
    int var41 = var38.getX();
    int var42 = var38.getX();
    demo.pathplanning.model.CartesianGraph var45 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var46 = var45.getXSize();
    demo.pathplanning.model.Node var47 = new demo.pathplanning.model.Node(var20, var38, var46);
    java.lang.String var48 = var47.toString();
    int var49 = var47.getCost();
    demo.pathplanning.model.Location var50 = var47.getLocation();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var3 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var4 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var5 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var9 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var11 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var21 + "' != '" + "0,\n"+ "'", var21.equals("0,\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var30 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var31);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var40 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var41 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var42 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var46 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var48 + "' != '" + "(1,1)=1"+ "'", var48.equals("(1,1)=1"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var49 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var50);

  }

  public void test155() throws Throwable {

    demo.pathplanning.model.CartesianGraph var2 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.algorithms.AStar var3 = new demo.pathplanning.algorithms.AStar(var2);
    demo.pathplanning.model.CartesianGraph var4 = var3.getGraph();
    demo.pathplanning.model.CartesianGraph var5 = var3.getGraph();
    demo.pathplanning.algorithms.PathPlanningContext var6 = new demo.pathplanning.algorithms.PathPlanningContext((demo.pathplanning.algorithms.PathPlanner)var3);
    demo.pathplanning.model.CartesianGraph var7 = var3.getGraph();
    int var8 = var7.getYSize();
    demo.pathplanning.model.CartesianGraph var11 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var14 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var15 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var18 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var21 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var22 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.Node var23 = new demo.pathplanning.model.Node(var7, var15, 1);
    demo.pathplanning.model.CartesianGraph var26 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var29 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var30 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var33 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var34 = var33.getXSize();
    int var35 = var33.getYSize();
    int var36 = var33.getYSize();
    demo.pathplanning.model.CartesianGraph var39 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var40 = var39.getXSize();
    int var41 = var39.getYSize();
    int var42 = var39.getYSize();
    demo.pathplanning.model.CartesianGraph var43 = new demo.pathplanning.model.CartesianGraph(var36, var42);
    demo.pathplanning.model.CartesianGraph var44 = new demo.pathplanning.model.CartesianGraph(1, var36);
    demo.pathplanning.model.CartesianGraph var45 = new demo.pathplanning.model.CartesianGraph(1, var36);
    demo.pathplanning.algorithms.AStar var46 = new demo.pathplanning.algorithms.AStar(var45);
    demo.pathplanning.model.CartesianGraph var47 = var46.getGraph();
    demo.pathplanning.model.CartesianGraph var48 = var46.getGraph();
    demo.pathplanning.model.CartesianGraph var49 = var46.getGraph();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var8 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var34 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var35 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var36 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var40 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var41 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var42 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var47);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var48);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var49);

  }

  public void test156() throws Throwable {

    demo.pathplanning.model.CartesianGraph var2 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var3 = var2.getXSize();
    int var4 = var2.getYSize();
    int var5 = var2.getYSize();
    demo.pathplanning.model.CartesianGraph var8 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var9 = var8.getXSize();
    int var10 = var8.getYSize();
    int var11 = var8.getYSize();
    demo.pathplanning.model.CartesianGraph var12 = new demo.pathplanning.model.CartesianGraph(var5, var11);
    demo.pathplanning.model.CartesianGraph var15 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var18 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var19 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var20 = new demo.pathplanning.model.CartesianGraph(var5, 1);
    java.lang.String var21 = var20.toString();
    demo.pathplanning.model.CartesianGraph var24 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var27 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var28 = new demo.pathplanning.model.Location(1, 1);
    boolean var30 = var28.equals((java.lang.Object)0L);
    demo.pathplanning.model.Node var31 = var20.getNode(var28);
    demo.pathplanning.model.CartesianGraph var34 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var37 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var38 = new demo.pathplanning.model.Location(1, 1);
    boolean var40 = var38.equals((java.lang.Object)0L);
    int var41 = var38.getX();
    int var42 = var38.getX();
    demo.pathplanning.model.CartesianGraph var45 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var46 = var45.getXSize();
    demo.pathplanning.model.Node var47 = new demo.pathplanning.model.Node(var20, var38, var46);
    java.lang.String var48 = var47.toString();
    int var49 = var47.getCost();
    java.lang.String var50 = var47.toString();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var3 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var4 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var5 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var9 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var11 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var21 + "' != '" + "0,\n"+ "'", var21.equals("0,\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var30 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var31);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var40 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var41 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var42 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var46 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var48 + "' != '" + "(1,1)=1"+ "'", var48.equals("(1,1)=1"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var49 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var50 + "' != '" + "(1,1)=1"+ "'", var50.equals("(1,1)=1"));

  }

  public void test157() throws Throwable {

    demo.pathplanning.model.CartesianGraph var2 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var3 = var2.getXSize();
    int var4 = var2.getYSize();
    int var5 = var2.getYSize();
    demo.pathplanning.model.CartesianGraph var8 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var9 = var8.getXSize();
    int var10 = var8.getYSize();
    int var11 = var8.getYSize();
    demo.pathplanning.model.CartesianGraph var12 = new demo.pathplanning.model.CartesianGraph(var5, var11);
    int var13 = var12.getXSize();
    demo.pathplanning.model.CartesianGraph var16 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.algorithms.AStar var17 = new demo.pathplanning.algorithms.AStar(var16);
    java.lang.String var18 = var16.toString();
    demo.pathplanning.model.CartesianGraph var21 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var24 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var25 = new demo.pathplanning.model.Location(1, 1);
    boolean var27 = var25.equals((java.lang.Object)0L);
    demo.pathplanning.model.Node var28 = var16.getNode(var25);
    demo.pathplanning.model.CartesianGraph var31 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var32 = var31.getXSize();
    demo.pathplanning.algorithms.AStar var33 = new demo.pathplanning.algorithms.AStar(var31);
    demo.pathplanning.model.CartesianGraph var36 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var39 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var40 = new demo.pathplanning.model.Location(1, 1);
    boolean var42 = var40.equals((java.lang.Object)0L);
    demo.pathplanning.model.Node var43 = var31.getNode(var40);
    int var44 = var31.getXSize();
    demo.pathplanning.model.Node var45 = new demo.pathplanning.model.Node(var12, var25, var44);
    demo.pathplanning.model.Location var46 = var45.getLocation();
    demo.pathplanning.model.Location var47 = var45.getLocation();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var3 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var4 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var5 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var9 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var11 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var13 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var18 + "' != '" + "0,\n"+ "'", var18.equals("0,\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var27 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var28);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var32 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var42 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var43);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var44 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var46);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var47);

  }

  public void test158() throws Throwable {

    demo.pathplanning.model.CartesianGraph var2 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var3 = var2.getXSize();
    int var4 = var2.getYSize();
    int var5 = var2.getYSize();
    demo.pathplanning.model.CartesianGraph var8 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var9 = var8.getXSize();
    int var10 = var8.getYSize();
    int var11 = var8.getYSize();
    demo.pathplanning.model.CartesianGraph var12 = new demo.pathplanning.model.CartesianGraph(var5, var11);
    demo.pathplanning.algorithms.AStar var13 = new demo.pathplanning.algorithms.AStar(var12);
    demo.pathplanning.model.CartesianGraph var16 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var17 = var16.getXSize();
    int var18 = var16.getYSize();
    int var19 = var16.getYSize();
    demo.pathplanning.model.CartesianGraph var22 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var23 = var22.getXSize();
    int var24 = var22.getYSize();
    int var25 = var22.getYSize();
    demo.pathplanning.model.CartesianGraph var26 = new demo.pathplanning.model.CartesianGraph(var19, var25);
    demo.pathplanning.model.CartesianGraph var29 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var32 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var33 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var34 = new demo.pathplanning.model.CartesianGraph(var19, 1);
    java.lang.String var35 = var34.toString();
    demo.pathplanning.model.CartesianGraph var38 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var41 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var42 = new demo.pathplanning.model.Location(1, 1);
    boolean var44 = var42.equals((java.lang.Object)0L);
    demo.pathplanning.model.Node var45 = var34.getNode(var42);
    int var46 = var42.getY();
    demo.pathplanning.model.CartesianGraph var49 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var50 = var49.getXSize();
    demo.pathplanning.algorithms.AStar var51 = new demo.pathplanning.algorithms.AStar(var49);
    demo.pathplanning.model.CartesianGraph var54 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var57 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var58 = new demo.pathplanning.model.Location(1, 1);
    boolean var60 = var58.equals((java.lang.Object)0L);
    demo.pathplanning.model.Node var61 = var49.getNode(var58);
    int var62 = var49.getYSize();
    demo.pathplanning.model.CartesianGraph var65 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var66 = var65.getXSize();
    int var67 = var65.getYSize();
    int var68 = var65.getYSize();
    demo.pathplanning.model.CartesianGraph var71 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var72 = var71.getXSize();
    int var73 = var71.getYSize();
    int var74 = var71.getYSize();
    demo.pathplanning.model.CartesianGraph var75 = new demo.pathplanning.model.CartesianGraph(var68, var74);
    demo.pathplanning.model.CartesianGraph var78 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var81 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var82 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var83 = new demo.pathplanning.model.CartesianGraph(var68, 1);
    int var84 = var83.getXSize();
    demo.pathplanning.model.CartesianGraph var87 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var88 = var87.getXSize();
    int var89 = var87.getYSize();
    int var90 = var87.getYSize();
    demo.pathplanning.model.CartesianGraph var91 = new demo.pathplanning.model.CartesianGraph(var84, var90);
    demo.pathplanning.model.CartesianGraph var92 = new demo.pathplanning.model.CartesianGraph(var62, var84);
    demo.pathplanning.model.Node var93 = new demo.pathplanning.model.Node(var12, var42, var84);
    demo.pathplanning.model.Location var94 = var93.getLocation();
    int var95 = var94.getY();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var3 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var4 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var5 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var9 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var11 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var17 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var18 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var19 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var23 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var24 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var25 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var35 + "' != '" + "0,\n"+ "'", var35.equals("0,\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var44 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var45);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var46 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var50 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var60 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var61);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var62 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var66 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var67 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var68 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var72 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var73 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var74 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var84 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var88 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var89 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var90 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var94);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var95 == 1);

  }

  public void test159() throws Throwable {

    demo.pathplanning.model.CartesianGraph var2 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var5 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var6 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var9 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var10 = var9.getXSize();
    int var11 = var9.getYSize();
    int var12 = var9.getYSize();
    demo.pathplanning.model.CartesianGraph var15 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var16 = var15.getXSize();
    int var17 = var15.getYSize();
    int var18 = var15.getYSize();
    demo.pathplanning.model.CartesianGraph var19 = new demo.pathplanning.model.CartesianGraph(var12, var18);
    demo.pathplanning.model.CartesianGraph var20 = new demo.pathplanning.model.CartesianGraph(1, var12);
    int var21 = var20.getYSize();
    demo.pathplanning.model.CartesianGraph var24 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.algorithms.AStar var25 = new demo.pathplanning.algorithms.AStar(var24);
    java.lang.String var26 = var24.toString();
    demo.pathplanning.model.CartesianGraph var29 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var32 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var33 = new demo.pathplanning.model.Location(1, 1);
    boolean var35 = var33.equals((java.lang.Object)0L);
    demo.pathplanning.model.Node var36 = var24.getNode(var33);
    demo.pathplanning.model.CartesianGraph var39 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var40 = var39.getXSize();
    int var41 = var39.getYSize();
    int var42 = var39.getYSize();
    demo.pathplanning.model.CartesianGraph var45 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var46 = var45.getXSize();
    int var47 = var45.getYSize();
    int var48 = var45.getYSize();
    demo.pathplanning.model.CartesianGraph var49 = new demo.pathplanning.model.CartesianGraph(var42, var48);
    demo.pathplanning.model.CartesianGraph var52 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var55 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var56 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var57 = new demo.pathplanning.model.CartesianGraph(var42, 1);
    demo.pathplanning.model.Node var58 = new demo.pathplanning.model.Node(var20, var33, 1);
    demo.pathplanning.model.CartesianGraph var61 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.algorithms.AStar var62 = new demo.pathplanning.algorithms.AStar(var61);
    java.lang.String var63 = var61.toString();
    int var64 = var61.getYSize();
    demo.pathplanning.model.CartesianGraph var65 = new demo.pathplanning.model.CartesianGraph(1, var64);
    demo.pathplanning.algorithms.AStar var66 = new demo.pathplanning.algorithms.AStar(var65);
    int var67 = var65.getXSize();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var11 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var12 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var16 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var17 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var18 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var21 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var26 + "' != '" + "0,\n"+ "'", var26.equals("0,\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var35 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var36);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var40 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var41 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var42 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var46 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var47 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var48 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var63 + "' != '" + "0,\n"+ "'", var63.equals("0,\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var64 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var67 == 1);

  }

  public void test160() throws Throwable {

    demo.pathplanning.model.CartesianGraph var2 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var3 = var2.getXSize();
    int var4 = var2.getYSize();
    int var5 = var2.getYSize();
    demo.pathplanning.model.CartesianGraph var8 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var9 = var8.getXSize();
    int var10 = var8.getYSize();
    int var11 = var8.getYSize();
    demo.pathplanning.model.CartesianGraph var12 = new demo.pathplanning.model.CartesianGraph(var5, var11);
    demo.pathplanning.model.CartesianGraph var15 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var18 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var19 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var20 = new demo.pathplanning.model.CartesianGraph(var5, 1);
    java.lang.String var21 = var20.toString();
    demo.pathplanning.model.CartesianGraph var24 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var27 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var28 = new demo.pathplanning.model.Location(1, 1);
    boolean var30 = var28.equals((java.lang.Object)0L);
    demo.pathplanning.model.Node var31 = var20.getNode(var28);
    demo.pathplanning.model.CartesianGraph var34 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var37 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var38 = new demo.pathplanning.model.Location(1, 1);
    boolean var40 = var38.equals((java.lang.Object)0L);
    int var41 = var38.getX();
    int var42 = var38.getX();
    demo.pathplanning.model.CartesianGraph var45 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var46 = var45.getXSize();
    demo.pathplanning.model.Node var47 = new demo.pathplanning.model.Node(var20, var38, var46);
    int var48 = var47.getCost();
    java.util.Collection var49 = var47.getNeighbors();
    demo.pathplanning.model.Location var50 = var47.getLocation();
    int var51 = var50.getX();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var3 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var4 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var5 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var9 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var11 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var21 + "' != '" + "0,\n"+ "'", var21.equals("0,\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var30 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var31);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var40 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var41 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var42 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var46 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var48 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var49);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var50);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var51 == 1);

  }

  public void test161() throws Throwable {

    demo.pathplanning.model.CartesianGraph var2 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var3 = var2.getXSize();
    int var4 = var2.getYSize();
    int var5 = var2.getYSize();
    demo.pathplanning.model.CartesianGraph var8 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var9 = var8.getXSize();
    int var10 = var8.getYSize();
    int var11 = var8.getYSize();
    demo.pathplanning.model.CartesianGraph var14 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var15 = var14.getXSize();
    int var16 = var14.getYSize();
    int var17 = var14.getYSize();
    demo.pathplanning.model.CartesianGraph var18 = new demo.pathplanning.model.CartesianGraph(var11, var17);
    demo.pathplanning.model.CartesianGraph var21 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var24 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var25 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var26 = new demo.pathplanning.model.CartesianGraph(var11, 1);
    demo.pathplanning.model.CartesianGraph var27 = new demo.pathplanning.model.CartesianGraph(var5, var11);
    demo.pathplanning.model.CartesianGraph var30 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var31 = var30.getXSize();
    int var32 = var30.getYSize();
    int var33 = var30.getYSize();
    demo.pathplanning.model.CartesianGraph var36 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var37 = var36.getXSize();
    int var38 = var36.getYSize();
    int var39 = var36.getYSize();
    demo.pathplanning.model.CartesianGraph var40 = new demo.pathplanning.model.CartesianGraph(var33, var39);
    demo.pathplanning.model.CartesianGraph var43 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var46 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var47 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var48 = new demo.pathplanning.model.CartesianGraph(var33, 1);
    demo.pathplanning.model.CartesianGraph var49 = new demo.pathplanning.model.CartesianGraph(var5, 1);
    demo.pathplanning.algorithms.AStar var50 = new demo.pathplanning.algorithms.AStar(var49);
    demo.pathplanning.algorithms.PathPlanningContext var51 = new demo.pathplanning.algorithms.PathPlanningContext((demo.pathplanning.algorithms.PathPlanner)var50);
    demo.pathplanning.model.CartesianGraph var52 = var50.getGraph();
    demo.pathplanning.algorithms.PathPlanningContext var53 = new demo.pathplanning.algorithms.PathPlanningContext((demo.pathplanning.algorithms.PathPlanner)var50);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var3 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var4 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var5 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var9 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var11 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var15 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var16 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var17 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var31 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var32 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var33 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var37 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var38 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var39 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var52);

  }

  public void test162() throws Throwable {

    demo.pathplanning.model.CartesianGraph var2 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var5 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var6 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var9 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var10 = var9.getXSize();
    int var11 = var9.getYSize();
    int var12 = var9.getYSize();
    demo.pathplanning.model.CartesianGraph var15 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var16 = var15.getXSize();
    int var17 = var15.getYSize();
    int var18 = var15.getYSize();
    demo.pathplanning.model.CartesianGraph var19 = new demo.pathplanning.model.CartesianGraph(var12, var18);
    java.lang.String var20 = var19.toString();
    demo.pathplanning.model.CartesianGraph var23 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.algorithms.AStar var24 = new demo.pathplanning.algorithms.AStar(var23);
    java.lang.String var25 = var23.toString();
    demo.pathplanning.model.CartesianGraph var28 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var31 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var32 = new demo.pathplanning.model.Location(1, 1);
    boolean var34 = var32.equals((java.lang.Object)0L);
    demo.pathplanning.model.Node var35 = var23.getNode(var32);
    java.lang.String var36 = var32.toString();
    demo.pathplanning.model.CartesianGraph var39 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.algorithms.AStar var40 = new demo.pathplanning.algorithms.AStar(var39);
    demo.pathplanning.model.CartesianGraph var41 = var40.getGraph();
    demo.pathplanning.model.CartesianGraph var42 = var40.getGraph();
    demo.pathplanning.algorithms.PathPlanningContext var43 = new demo.pathplanning.algorithms.PathPlanningContext((demo.pathplanning.algorithms.PathPlanner)var40);
    demo.pathplanning.model.CartesianGraph var44 = var40.getGraph();
    int var45 = var44.getYSize();
    demo.pathplanning.model.CartesianGraph var48 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var51 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var52 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var55 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var58 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var59 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.Node var60 = new demo.pathplanning.model.Node(var44, var52, 1);
    boolean var61 = var32.equals((java.lang.Object)1);
    int var62 = var32.getX();
    demo.pathplanning.model.CartesianGraph var65 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var66 = var65.getXSize();
    int var67 = var65.getYSize();
    int var68 = var65.getYSize();
    demo.pathplanning.model.CartesianGraph var71 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var72 = new demo.pathplanning.model.Location(var68, 1);
    demo.pathplanning.model.Node var73 = new demo.pathplanning.model.Node(var19, var32, var68);
    int var74 = var19.getXSize();
    demo.pathplanning.model.Location var75 = new demo.pathplanning.model.Location(1, var74);
    java.lang.String var76 = var75.toString();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var11 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var12 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var16 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var17 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var18 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var20 + "' != '" + "0,\n"+ "'", var20.equals("0,\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var25 + "' != '" + "0,\n"+ "'", var25.equals("0,\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var34 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var35);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var36 + "' != '" + "(1,1)"+ "'", var36.equals("(1,1)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var41);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var42);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var44);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var45 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var61 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var62 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var66 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var67 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var68 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var74 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var76 + "' != '" + "(1,1)"+ "'", var76.equals("(1,1)"));

  }

  public void test163() throws Throwable {

    demo.pathplanning.model.CartesianGraph var2 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var3 = var2.getXSize();
    demo.pathplanning.algorithms.AStar var4 = new demo.pathplanning.algorithms.AStar(var2);
    demo.pathplanning.model.CartesianGraph var7 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var10 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var11 = new demo.pathplanning.model.Location(1, 1);
    boolean var13 = var11.equals((java.lang.Object)0L);
    demo.pathplanning.model.Node var14 = var2.getNode(var11);
    int var15 = var2.getYSize();
    demo.pathplanning.model.CartesianGraph var18 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var19 = var18.getXSize();
    int var20 = var18.getYSize();
    int var21 = var18.getYSize();
    demo.pathplanning.model.CartesianGraph var24 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var25 = var24.getXSize();
    int var26 = var24.getYSize();
    int var27 = var24.getYSize();
    demo.pathplanning.model.CartesianGraph var28 = new demo.pathplanning.model.CartesianGraph(var21, var27);
    demo.pathplanning.model.CartesianGraph var31 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var34 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var35 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var36 = new demo.pathplanning.model.CartesianGraph(var21, 1);
    int var37 = var36.getXSize();
    demo.pathplanning.model.CartesianGraph var40 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var41 = var40.getXSize();
    int var42 = var40.getYSize();
    int var43 = var40.getYSize();
    demo.pathplanning.model.CartesianGraph var44 = new demo.pathplanning.model.CartesianGraph(var37, var43);
    demo.pathplanning.model.CartesianGraph var45 = new demo.pathplanning.model.CartesianGraph(var15, var37);
    demo.pathplanning.model.CartesianGraph var48 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var49 = var48.getXSize();
    int var50 = var48.getYSize();
    int var51 = var48.getYSize();
    demo.pathplanning.model.CartesianGraph var54 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var55 = var54.getXSize();
    int var56 = var54.getYSize();
    int var57 = var54.getYSize();
    demo.pathplanning.model.CartesianGraph var58 = new demo.pathplanning.model.CartesianGraph(var51, var57);
    demo.pathplanning.model.CartesianGraph var61 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var64 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var65 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var66 = new demo.pathplanning.model.CartesianGraph(var51, 1);
    int var67 = var66.getXSize();
    demo.pathplanning.model.CartesianGraph var70 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var71 = var70.getXSize();
    int var72 = var70.getYSize();
    int var73 = var70.getYSize();
    demo.pathplanning.model.CartesianGraph var74 = new demo.pathplanning.model.CartesianGraph(var67, var73);
    demo.pathplanning.model.CartesianGraph var75 = new demo.pathplanning.model.CartesianGraph(var15, var67);
    java.lang.String var76 = var75.toString();
    int var77 = var75.getXSize();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var3 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var13 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var14);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var15 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var19 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var20 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var21 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var25 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var26 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var27 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var37 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var41 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var42 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var43 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var49 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var50 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var51 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var55 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var56 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var57 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var67 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var71 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var72 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var73 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var76 + "' != '" + "0,\n"+ "'", var76.equals("0,\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var77 == 1);

  }

  public void test164() throws Throwable {

    demo.pathplanning.model.CartesianGraph var2 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.algorithms.AStar var3 = new demo.pathplanning.algorithms.AStar(var2);
    demo.pathplanning.model.CartesianGraph var4 = var3.getGraph();
    demo.pathplanning.model.CartesianGraph var5 = var3.getGraph();
    demo.pathplanning.algorithms.PathPlanningContext var6 = new demo.pathplanning.algorithms.PathPlanningContext((demo.pathplanning.algorithms.PathPlanner)var3);
    demo.pathplanning.model.CartesianGraph var7 = var3.getGraph();
    int var8 = var7.getYSize();
    java.lang.String var9 = var7.toString();
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      demo.pathplanning.model.Direction var10 = demo.pathplanning.model.Direction.valueOf(var9);
      fail("Expected exception of type java.lang.IllegalArgumentException");
    } catch (java.lang.IllegalArgumentException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var8 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var9 + "' != '" + "0,\n"+ "'", var9.equals("0,\n"));

  }

  public void test165() throws Throwable {

    demo.pathplanning.model.CartesianGraph var2 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var3 = var2.getXSize();
    demo.pathplanning.algorithms.AStar var4 = new demo.pathplanning.algorithms.AStar(var2);
    demo.pathplanning.model.CartesianGraph var7 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var10 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var11 = new demo.pathplanning.model.Location(1, 1);
    boolean var13 = var11.equals((java.lang.Object)0L);
    demo.pathplanning.model.Node var14 = var2.getNode(var11);
    int var15 = var2.getYSize();
    demo.pathplanning.model.CartesianGraph var18 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var19 = var18.getXSize();
    int var20 = var18.getYSize();
    int var21 = var18.getYSize();
    demo.pathplanning.model.CartesianGraph var24 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var25 = new demo.pathplanning.model.Location(var21, 1);
    java.lang.String var26 = var25.toString();
    demo.pathplanning.model.CartesianGraph var29 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var32 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var33 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var36 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var37 = var36.getXSize();
    int var38 = var36.getYSize();
    int var39 = var36.getYSize();
    demo.pathplanning.model.CartesianGraph var42 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var43 = var42.getXSize();
    int var44 = var42.getYSize();
    int var45 = var42.getYSize();
    demo.pathplanning.model.CartesianGraph var46 = new demo.pathplanning.model.CartesianGraph(var39, var45);
    demo.pathplanning.model.CartesianGraph var47 = new demo.pathplanning.model.CartesianGraph(1, var39);
    demo.pathplanning.model.Node var48 = new demo.pathplanning.model.Node(var2, var25, var39);
    int var49 = var2.getYSize();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var3 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var13 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var14);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var15 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var19 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var20 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var21 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var26 + "' != '" + "(1,1)"+ "'", var26.equals("(1,1)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var37 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var38 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var39 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var43 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var44 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var45 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var49 == 1);

  }

  public void test166() throws Throwable {

    demo.pathplanning.model.CartesianGraph var2 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var3 = var2.getXSize();
    int var4 = var2.getYSize();
    int var5 = var2.getYSize();
    demo.pathplanning.model.CartesianGraph var8 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var9 = var8.getXSize();
    int var10 = var8.getYSize();
    int var11 = var8.getYSize();
    demo.pathplanning.model.CartesianGraph var12 = new demo.pathplanning.model.CartesianGraph(var5, var11);
    demo.pathplanning.model.CartesianGraph var15 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var18 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var19 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var20 = new demo.pathplanning.model.CartesianGraph(var5, 1);
    java.lang.String var21 = var20.toString();
    demo.pathplanning.model.CartesianGraph var24 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var27 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var28 = new demo.pathplanning.model.Location(1, 1);
    boolean var30 = var28.equals((java.lang.Object)0L);
    demo.pathplanning.model.Node var31 = var20.getNode(var28);
    demo.pathplanning.model.CartesianGraph var34 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var35 = var34.getXSize();
    demo.pathplanning.model.CartesianGraph var38 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var39 = new demo.pathplanning.model.CartesianGraph(var35, 1);
    demo.pathplanning.model.CartesianGraph var42 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.algorithms.AStar var43 = new demo.pathplanning.algorithms.AStar(var42);
    demo.pathplanning.model.CartesianGraph var44 = var43.getGraph();
    demo.pathplanning.model.CartesianGraph var45 = var43.getGraph();
    demo.pathplanning.algorithms.PathPlanningContext var46 = new demo.pathplanning.algorithms.PathPlanningContext((demo.pathplanning.algorithms.PathPlanner)var43);
    demo.pathplanning.model.CartesianGraph var47 = var43.getGraph();
    int var48 = var47.getYSize();
    demo.pathplanning.model.Location var49 = new demo.pathplanning.model.Location(var35, var48);
    demo.pathplanning.model.CartesianGraph var53 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.algorithms.AStar var54 = new demo.pathplanning.algorithms.AStar(var53);
    demo.pathplanning.model.CartesianGraph var55 = var54.getGraph();
    demo.pathplanning.model.CartesianGraph var56 = var54.getGraph();
    demo.pathplanning.algorithms.PathPlanningContext var57 = new demo.pathplanning.algorithms.PathPlanningContext((demo.pathplanning.algorithms.PathPlanner)var54);
    demo.pathplanning.model.CartesianGraph var58 = var54.getGraph();
    int var59 = var58.getYSize();
    demo.pathplanning.model.CartesianGraph var62 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var65 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var66 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var69 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var72 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var73 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.Node var74 = new demo.pathplanning.model.Node(var58, var66, 1);
    demo.pathplanning.model.CartesianGraph var77 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var80 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var81 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var84 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var85 = var84.getXSize();
    int var86 = var84.getYSize();
    int var87 = var84.getYSize();
    demo.pathplanning.model.CartesianGraph var90 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var91 = var90.getXSize();
    int var92 = var90.getYSize();
    int var93 = var90.getYSize();
    demo.pathplanning.model.CartesianGraph var94 = new demo.pathplanning.model.CartesianGraph(var87, var93);
    demo.pathplanning.model.CartesianGraph var95 = new demo.pathplanning.model.CartesianGraph(1, var87);
    demo.pathplanning.model.CartesianGraph var96 = new demo.pathplanning.model.CartesianGraph(1, var87);
    demo.pathplanning.model.CartesianGraph var97 = new demo.pathplanning.model.CartesianGraph(0, 1);
    demo.pathplanning.model.Node var98 = new demo.pathplanning.model.Node(var20, var49, 0);
    int var99 = var20.getYSize();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var3 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var4 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var5 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var9 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var11 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var21 + "' != '" + "0,\n"+ "'", var21.equals("0,\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var30 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var31);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var35 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var44);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var45);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var47);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var48 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var55);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var56);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var58);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var59 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var85 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var86 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var87 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var91 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var92 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var93 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var99 == 1);

  }

  public void test167() throws Throwable {

    demo.pathplanning.model.CartesianGraph var2 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var3 = var2.getXSize();
    int var4 = var2.getYSize();
    int var5 = var2.getYSize();
    demo.pathplanning.model.CartesianGraph var8 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var9 = var8.getXSize();
    int var10 = var8.getYSize();
    int var11 = var8.getYSize();
    demo.pathplanning.model.CartesianGraph var12 = new demo.pathplanning.model.CartesianGraph(var5, var11);
    int var13 = var12.getXSize();
    demo.pathplanning.model.CartesianGraph var16 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.algorithms.AStar var17 = new demo.pathplanning.algorithms.AStar(var16);
    java.lang.String var18 = var16.toString();
    demo.pathplanning.model.CartesianGraph var21 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var24 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var25 = new demo.pathplanning.model.Location(1, 1);
    boolean var27 = var25.equals((java.lang.Object)0L);
    demo.pathplanning.model.Node var28 = var16.getNode(var25);
    demo.pathplanning.model.CartesianGraph var31 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var32 = var31.getXSize();
    demo.pathplanning.algorithms.AStar var33 = new demo.pathplanning.algorithms.AStar(var31);
    demo.pathplanning.model.CartesianGraph var36 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var39 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var40 = new demo.pathplanning.model.Location(1, 1);
    boolean var42 = var40.equals((java.lang.Object)0L);
    demo.pathplanning.model.Node var43 = var31.getNode(var40);
    int var44 = var31.getXSize();
    demo.pathplanning.model.Node var45 = new demo.pathplanning.model.Node(var12, var25, var44);
    java.lang.String var46 = var45.toString();
    int var47 = var45.getCost();
    java.lang.String var48 = var45.toString();
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      demo.pathplanning.model.Direction var49 = demo.pathplanning.model.Direction.valueOf(var48);
      fail("Expected exception of type java.lang.IllegalArgumentException");
    } catch (java.lang.IllegalArgumentException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var3 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var4 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var5 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var9 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var11 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var13 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var18 + "' != '" + "0,\n"+ "'", var18.equals("0,\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var27 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var28);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var32 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var42 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var43);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var44 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var46 + "' != '" + "(1,1)=1"+ "'", var46.equals("(1,1)=1"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var47 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var48 + "' != '" + "(1,1)=1"+ "'", var48.equals("(1,1)=1"));

  }

  public void test168() throws Throwable {

    demo.pathplanning.model.CartesianGraph var2 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var3 = var2.getXSize();
    int var4 = var2.getYSize();
    int var5 = var2.getYSize();
    demo.pathplanning.model.CartesianGraph var8 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var9 = var8.getXSize();
    int var10 = var8.getYSize();
    int var11 = var8.getYSize();
    demo.pathplanning.model.CartesianGraph var12 = new demo.pathplanning.model.CartesianGraph(var5, var11);
    java.lang.String var13 = var12.toString();
    demo.pathplanning.model.CartesianGraph var16 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.algorithms.AStar var17 = new demo.pathplanning.algorithms.AStar(var16);
    java.lang.String var18 = var16.toString();
    demo.pathplanning.model.CartesianGraph var21 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var24 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var25 = new demo.pathplanning.model.Location(1, 1);
    boolean var27 = var25.equals((java.lang.Object)0L);
    demo.pathplanning.model.Node var28 = var16.getNode(var25);
    java.lang.String var29 = var25.toString();
    demo.pathplanning.model.CartesianGraph var32 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.algorithms.AStar var33 = new demo.pathplanning.algorithms.AStar(var32);
    demo.pathplanning.model.CartesianGraph var34 = var33.getGraph();
    demo.pathplanning.model.CartesianGraph var35 = var33.getGraph();
    demo.pathplanning.algorithms.PathPlanningContext var36 = new demo.pathplanning.algorithms.PathPlanningContext((demo.pathplanning.algorithms.PathPlanner)var33);
    demo.pathplanning.model.CartesianGraph var37 = var33.getGraph();
    int var38 = var37.getYSize();
    demo.pathplanning.model.CartesianGraph var41 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var44 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var45 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var48 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var51 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var52 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.Node var53 = new demo.pathplanning.model.Node(var37, var45, 1);
    boolean var54 = var25.equals((java.lang.Object)1);
    int var55 = var25.getX();
    demo.pathplanning.model.CartesianGraph var58 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var59 = var58.getXSize();
    int var60 = var58.getYSize();
    int var61 = var58.getYSize();
    demo.pathplanning.model.CartesianGraph var64 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var65 = new demo.pathplanning.model.Location(var61, 1);
    demo.pathplanning.model.Node var66 = new demo.pathplanning.model.Node(var12, var25, var61);
    int var67 = var12.getXSize();
    int var68 = var12.getYSize();
    demo.pathplanning.model.CartesianGraph var71 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var74 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var75 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var78 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var79 = var78.getXSize();
    demo.pathplanning.model.CartesianGraph var82 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var83 = new demo.pathplanning.model.CartesianGraph(var79, 1);
    demo.pathplanning.model.Location var84 = new demo.pathplanning.model.Location(1, 1);
    int var85 = var84.getX();
    int var86 = var84.getY();
    demo.pathplanning.model.CartesianGraph var89 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.algorithms.AStar var90 = new demo.pathplanning.algorithms.AStar(var89);
    boolean var91 = var84.equals((java.lang.Object)var90);
    int var92 = var84.getX();
    demo.pathplanning.model.Location var93 = new demo.pathplanning.model.Location(var68, var92);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var3 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var4 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var5 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var9 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var11 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var13 + "' != '" + "0,\n"+ "'", var13.equals("0,\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var18 + "' != '" + "0,\n"+ "'", var18.equals("0,\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var27 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var28);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var29 + "' != '" + "(1,1)"+ "'", var29.equals("(1,1)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var34);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var35);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var37);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var38 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var54 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var55 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var59 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var60 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var61 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var67 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var68 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var79 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var85 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var86 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var91 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var92 == 1);

  }

  public void test169() throws Throwable {

    demo.pathplanning.model.CartesianGraph var2 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var5 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var6 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var9 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var10 = var9.getXSize();
    int var11 = var9.getYSize();
    int var12 = var9.getYSize();
    demo.pathplanning.model.CartesianGraph var15 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var16 = var15.getXSize();
    int var17 = var15.getYSize();
    int var18 = var15.getYSize();
    demo.pathplanning.model.CartesianGraph var19 = new demo.pathplanning.model.CartesianGraph(var12, var18);
    demo.pathplanning.model.CartesianGraph var20 = new demo.pathplanning.model.CartesianGraph(1, var12);
    int var21 = var20.getYSize();
    demo.pathplanning.model.CartesianGraph var24 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var25 = var24.getXSize();
    int var26 = var24.getYSize();
    int var27 = var24.getYSize();
    demo.pathplanning.model.CartesianGraph var30 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var31 = new demo.pathplanning.model.Location(var27, 1);
    java.lang.String var32 = var31.toString();
    demo.pathplanning.model.Node var33 = var20.getNode(var31);
    int var34 = var31.getY();
    demo.pathplanning.model.CartesianGraph var37 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.algorithms.AStar var38 = new demo.pathplanning.algorithms.AStar(var37);
    demo.pathplanning.model.CartesianGraph var39 = var38.getGraph();
    demo.pathplanning.model.CartesianGraph var40 = var38.getGraph();
    demo.pathplanning.algorithms.PathPlanningContext var41 = new demo.pathplanning.algorithms.PathPlanningContext((demo.pathplanning.algorithms.PathPlanner)var38);
    demo.pathplanning.model.CartesianGraph var42 = var38.getGraph();
    int var43 = var42.getYSize();
    demo.pathplanning.model.CartesianGraph var46 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var49 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var50 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var53 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var56 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var57 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.Node var58 = new demo.pathplanning.model.Node(var42, var50, 1);
    demo.pathplanning.model.CartesianGraph var61 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var64 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var65 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var68 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var69 = var68.getXSize();
    int var70 = var68.getYSize();
    int var71 = var68.getYSize();
    demo.pathplanning.model.CartesianGraph var74 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var75 = var74.getXSize();
    int var76 = var74.getYSize();
    int var77 = var74.getYSize();
    demo.pathplanning.model.CartesianGraph var78 = new demo.pathplanning.model.CartesianGraph(var71, var77);
    demo.pathplanning.model.CartesianGraph var79 = new demo.pathplanning.model.CartesianGraph(1, var71);
    demo.pathplanning.model.CartesianGraph var80 = new demo.pathplanning.model.CartesianGraph(1, var71);
    boolean var81 = var31.equals((java.lang.Object)var80);
    demo.pathplanning.model.CartesianGraph var84 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var85 = var84.getXSize();
    demo.pathplanning.algorithms.AStar var86 = new demo.pathplanning.algorithms.AStar(var84);
    boolean var87 = var31.equals((java.lang.Object)var86);
    demo.pathplanning.model.CartesianGraph var88 = var86.getGraph();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var11 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var12 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var16 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var17 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var18 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var21 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var25 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var26 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var27 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var32 + "' != '" + "(1,1)"+ "'", var32.equals("(1,1)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var33);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var34 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var39);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var40);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var42);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var43 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var69 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var70 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var71 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var75 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var76 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var77 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var81 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var85 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var87 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var88);

  }

  public void test170() throws Throwable {

    demo.pathplanning.model.CartesianGraph var2 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var3 = var2.getXSize();
    demo.pathplanning.model.CartesianGraph var6 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var7 = new demo.pathplanning.model.CartesianGraph(var3, 1);
    demo.pathplanning.model.CartesianGraph var10 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.algorithms.AStar var11 = new demo.pathplanning.algorithms.AStar(var10);
    demo.pathplanning.model.CartesianGraph var12 = var11.getGraph();
    demo.pathplanning.model.CartesianGraph var13 = var11.getGraph();
    demo.pathplanning.algorithms.PathPlanningContext var14 = new demo.pathplanning.algorithms.PathPlanningContext((demo.pathplanning.algorithms.PathPlanner)var11);
    demo.pathplanning.model.CartesianGraph var15 = var11.getGraph();
    int var16 = var15.getYSize();
    demo.pathplanning.model.CartesianGraph var17 = new demo.pathplanning.model.CartesianGraph(var3, var16);
    demo.pathplanning.model.CartesianGraph var20 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var23 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var24 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var27 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var28 = var27.getXSize();
    demo.pathplanning.model.CartesianGraph var31 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var32 = new demo.pathplanning.model.CartesianGraph(var28, 1);
    demo.pathplanning.model.Location var33 = new demo.pathplanning.model.Location(1, 1);
    int var34 = var33.getX();
    int var35 = var33.getY();
    demo.pathplanning.model.Node var36 = var17.getNode(var33);
    int var37 = var33.getY();
    java.lang.String var38 = var33.toString();
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      demo.pathplanning.model.Direction var39 = demo.pathplanning.model.Direction.valueOf(var38);
      fail("Expected exception of type java.lang.IllegalArgumentException");
    } catch (java.lang.IllegalArgumentException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var3 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var12);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var13);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var15);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var16 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var28 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var34 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var35 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var36);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var37 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var38 + "' != '" + "(1,1)"+ "'", var38.equals("(1,1)"));

  }

  public void test171() throws Throwable {

    demo.pathplanning.model.CartesianGraph var2 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var5 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var6 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var9 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var10 = var9.getXSize();
    int var11 = var9.getYSize();
    int var12 = var9.getYSize();
    demo.pathplanning.model.CartesianGraph var15 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var16 = var15.getXSize();
    int var17 = var15.getYSize();
    int var18 = var15.getYSize();
    demo.pathplanning.model.CartesianGraph var19 = new demo.pathplanning.model.CartesianGraph(var12, var18);
    demo.pathplanning.model.CartesianGraph var20 = new demo.pathplanning.model.CartesianGraph(1, var12);
    int var21 = var20.getYSize();
    demo.pathplanning.model.CartesianGraph var24 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.algorithms.AStar var25 = new demo.pathplanning.algorithms.AStar(var24);
    java.lang.String var26 = var24.toString();
    demo.pathplanning.model.CartesianGraph var29 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var32 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var33 = new demo.pathplanning.model.Location(1, 1);
    boolean var35 = var33.equals((java.lang.Object)0L);
    demo.pathplanning.model.Node var36 = var24.getNode(var33);
    demo.pathplanning.model.CartesianGraph var39 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var40 = var39.getXSize();
    int var41 = var39.getYSize();
    int var42 = var39.getYSize();
    demo.pathplanning.model.CartesianGraph var45 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var46 = var45.getXSize();
    int var47 = var45.getYSize();
    int var48 = var45.getYSize();
    demo.pathplanning.model.CartesianGraph var49 = new demo.pathplanning.model.CartesianGraph(var42, var48);
    demo.pathplanning.model.CartesianGraph var52 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var55 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var56 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var57 = new demo.pathplanning.model.CartesianGraph(var42, 1);
    demo.pathplanning.model.Node var58 = new demo.pathplanning.model.Node(var20, var33, 1);
    demo.pathplanning.model.Location var59 = var58.getLocation();
    int var60 = var59.getX();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var11 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var12 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var16 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var17 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var18 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var21 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var26 + "' != '" + "0,\n"+ "'", var26.equals("0,\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var35 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var36);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var40 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var41 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var42 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var46 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var47 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var48 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var59);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var60 == 1);

  }

  public void test172() throws Throwable {

    demo.pathplanning.model.CartesianGraph var2 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var3 = var2.getXSize();
    demo.pathplanning.model.CartesianGraph var6 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var7 = new demo.pathplanning.model.CartesianGraph(var3, 1);
    demo.pathplanning.model.CartesianGraph var10 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.algorithms.AStar var11 = new demo.pathplanning.algorithms.AStar(var10);
    demo.pathplanning.model.CartesianGraph var12 = var11.getGraph();
    demo.pathplanning.model.CartesianGraph var13 = var11.getGraph();
    demo.pathplanning.algorithms.PathPlanningContext var14 = new demo.pathplanning.algorithms.PathPlanningContext((demo.pathplanning.algorithms.PathPlanner)var11);
    demo.pathplanning.model.CartesianGraph var15 = var11.getGraph();
    int var16 = var15.getYSize();
    demo.pathplanning.model.CartesianGraph var17 = new demo.pathplanning.model.CartesianGraph(var3, var16);
    int var18 = var17.getXSize();
    demo.pathplanning.algorithms.AStar var19 = new demo.pathplanning.algorithms.AStar(var17);
    int var20 = var17.getYSize();
    int var21 = var17.getYSize();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var3 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var12);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var13);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var15);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var16 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var18 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var20 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var21 == 1);

  }

  public void test173() throws Throwable {

    demo.pathplanning.model.CartesianGraph var2 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var3 = var2.getXSize();
    int var4 = var2.getYSize();
    int var5 = var2.getYSize();
    demo.pathplanning.model.CartesianGraph var8 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var9 = var8.getXSize();
    int var10 = var8.getYSize();
    int var11 = var8.getYSize();
    demo.pathplanning.model.CartesianGraph var12 = new demo.pathplanning.model.CartesianGraph(var5, var11);
    demo.pathplanning.model.CartesianGraph var15 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var18 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var19 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var20 = new demo.pathplanning.model.CartesianGraph(var5, 1);
    java.lang.String var21 = var20.toString();
    demo.pathplanning.model.CartesianGraph var24 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var27 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var28 = new demo.pathplanning.model.Location(1, 1);
    boolean var30 = var28.equals((java.lang.Object)0L);
    demo.pathplanning.model.Node var31 = var20.getNode(var28);
    demo.pathplanning.model.CartesianGraph var34 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var37 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var38 = new demo.pathplanning.model.Location(1, 1);
    boolean var40 = var38.equals((java.lang.Object)0L);
    int var41 = var38.getX();
    int var42 = var38.getX();
    demo.pathplanning.model.CartesianGraph var45 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var46 = var45.getXSize();
    demo.pathplanning.model.Node var47 = new demo.pathplanning.model.Node(var20, var38, var46);
    int var48 = var47.getCost();
    demo.pathplanning.model.CartesianGraph var51 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var52 = var51.getXSize();
    int var53 = var51.getYSize();
    int var54 = var51.getYSize();
    demo.pathplanning.model.CartesianGraph var57 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var58 = new demo.pathplanning.model.Location(var54, 1);
    java.lang.String var59 = var58.toString();
    boolean var60 = var47.equals((java.lang.Object)var58);
    java.lang.String var61 = var47.toString();
    int var62 = var47.getCost();
    demo.pathplanning.model.CartesianGraph var64 = new demo.pathplanning.model.CartesianGraph(var62, 0);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var3 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var4 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var5 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var9 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var11 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var21 + "' != '" + "0,\n"+ "'", var21.equals("0,\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var30 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var31);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var40 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var41 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var42 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var46 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var48 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var52 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var53 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var54 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var59 + "' != '" + "(1,1)"+ "'", var59.equals("(1,1)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var60 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var61 + "' != '" + "(1,1)=1"+ "'", var61.equals("(1,1)=1"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var62 == 1);

  }

  public void test174() throws Throwable {

    demo.pathplanning.model.CartesianGraph var2 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var3 = var2.getXSize();
    int var4 = var2.getYSize();
    int var5 = var2.getYSize();
    demo.pathplanning.model.CartesianGraph var8 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var9 = var8.getXSize();
    int var10 = var8.getYSize();
    int var11 = var8.getYSize();
    demo.pathplanning.model.CartesianGraph var12 = new demo.pathplanning.model.CartesianGraph(var5, var11);
    demo.pathplanning.model.CartesianGraph var15 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var18 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var19 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var20 = new demo.pathplanning.model.CartesianGraph(var5, 1);
    java.lang.String var21 = var20.toString();
    demo.pathplanning.model.CartesianGraph var24 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var27 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var28 = new demo.pathplanning.model.Location(1, 1);
    boolean var30 = var28.equals((java.lang.Object)0L);
    demo.pathplanning.model.Node var31 = var20.getNode(var28);
    demo.pathplanning.model.CartesianGraph var34 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var37 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var38 = new demo.pathplanning.model.Location(1, 1);
    boolean var40 = var38.equals((java.lang.Object)0L);
    int var41 = var38.getX();
    int var42 = var38.getX();
    demo.pathplanning.model.CartesianGraph var45 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var46 = var45.getXSize();
    demo.pathplanning.model.Node var47 = new demo.pathplanning.model.Node(var20, var38, var46);
    demo.pathplanning.algorithms.AStar var48 = new demo.pathplanning.algorithms.AStar(var20);
    demo.pathplanning.model.CartesianGraph var49 = var48.getGraph();
    demo.pathplanning.model.CartesianGraph var52 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.algorithms.AStar var53 = new demo.pathplanning.algorithms.AStar(var52);
    java.lang.String var54 = var52.toString();
    demo.pathplanning.model.CartesianGraph var57 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var60 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var61 = new demo.pathplanning.model.Location(1, 1);
    boolean var63 = var61.equals((java.lang.Object)0L);
    demo.pathplanning.model.Node var64 = var52.getNode(var61);
    int var65 = var61.getX();
    demo.pathplanning.model.CartesianGraph var68 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var69 = var68.getXSize();
    demo.pathplanning.model.CartesianGraph var72 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var73 = new demo.pathplanning.model.CartesianGraph(var69, 1);
    demo.pathplanning.model.CartesianGraph var76 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.algorithms.AStar var77 = new demo.pathplanning.algorithms.AStar(var76);
    demo.pathplanning.model.CartesianGraph var78 = var77.getGraph();
    demo.pathplanning.model.CartesianGraph var79 = var77.getGraph();
    demo.pathplanning.algorithms.PathPlanningContext var80 = new demo.pathplanning.algorithms.PathPlanningContext((demo.pathplanning.algorithms.PathPlanner)var77);
    demo.pathplanning.model.CartesianGraph var81 = var77.getGraph();
    int var82 = var81.getYSize();
    demo.pathplanning.model.CartesianGraph var83 = new demo.pathplanning.model.CartesianGraph(var69, var82);
    int var84 = var83.getXSize();
    demo.pathplanning.algorithms.AStar var85 = new demo.pathplanning.algorithms.AStar(var83);
    int var86 = var83.getYSize();
    demo.pathplanning.model.Node var87 = new demo.pathplanning.model.Node(var49, var61, var86);
    demo.pathplanning.algorithms.AStar var88 = new demo.pathplanning.algorithms.AStar(var49);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var3 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var4 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var5 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var9 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var11 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var21 + "' != '" + "0,\n"+ "'", var21.equals("0,\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var30 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var31);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var40 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var41 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var42 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var46 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var49);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var54 + "' != '" + "0,\n"+ "'", var54.equals("0,\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var63 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var64);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var65 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var69 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var78);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var79);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var81);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var82 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var84 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var86 == 1);

  }

  public void test175() throws Throwable {

    demo.pathplanning.model.CartesianGraph var2 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var3 = var2.getXSize();
    int var4 = var2.getYSize();
    demo.pathplanning.algorithms.AStar var5 = new demo.pathplanning.algorithms.AStar(var2);
    demo.pathplanning.algorithms.PathPlanningContext var6 = new demo.pathplanning.algorithms.PathPlanningContext((demo.pathplanning.algorithms.PathPlanner)var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var3 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var4 == 1);

  }

  public void test176() throws Throwable {

    demo.pathplanning.model.CartesianGraph var2 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.algorithms.AStar var3 = new demo.pathplanning.algorithms.AStar(var2);
    demo.pathplanning.model.CartesianGraph var4 = var3.getGraph();
    demo.pathplanning.model.CartesianGraph var5 = var3.getGraph();
    demo.pathplanning.algorithms.PathPlanningContext var6 = new demo.pathplanning.algorithms.PathPlanningContext((demo.pathplanning.algorithms.PathPlanner)var3);
    demo.pathplanning.model.CartesianGraph var7 = var3.getGraph();
    int var8 = var7.getYSize();
    demo.pathplanning.model.CartesianGraph var11 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var14 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var15 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var18 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var21 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var22 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.Node var23 = new demo.pathplanning.model.Node(var7, var15, 1);
    java.util.Collection var24 = var23.getNeighbors();
    int var25 = var23.getCost();
    java.lang.String var26 = var23.toString();
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      demo.pathplanning.model.Direction var27 = demo.pathplanning.model.Direction.valueOf(var26);
      fail("Expected exception of type java.lang.IllegalArgumentException");
    } catch (java.lang.IllegalArgumentException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var8 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var24);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var25 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var26 + "' != '" + "(1,1)=1"+ "'", var26.equals("(1,1)=1"));

  }

  public void test177() throws Throwable {

    demo.pathplanning.model.CartesianGraph var2 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var3 = var2.getXSize();
    demo.pathplanning.algorithms.AStar var4 = new demo.pathplanning.algorithms.AStar(var2);
    demo.pathplanning.model.CartesianGraph var7 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var10 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var11 = new demo.pathplanning.model.Location(1, 1);
    boolean var13 = var11.equals((java.lang.Object)0L);
    demo.pathplanning.model.Node var14 = var2.getNode(var11);
    demo.pathplanning.algorithms.AStar var15 = new demo.pathplanning.algorithms.AStar(var2);
    demo.pathplanning.algorithms.PathPlanningContext var16 = new demo.pathplanning.algorithms.PathPlanningContext((demo.pathplanning.algorithms.PathPlanner)var15);
    demo.pathplanning.model.CartesianGraph var17 = var15.getGraph();
    java.lang.String var18 = var17.toString();
    int var19 = var17.getYSize();
    demo.pathplanning.model.CartesianGraph var22 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.algorithms.AStar var23 = new demo.pathplanning.algorithms.AStar(var22);
    demo.pathplanning.model.CartesianGraph var24 = var23.getGraph();
    demo.pathplanning.model.CartesianGraph var25 = var23.getGraph();
    demo.pathplanning.algorithms.PathPlanningContext var26 = new demo.pathplanning.algorithms.PathPlanningContext((demo.pathplanning.algorithms.PathPlanner)var23);
    demo.pathplanning.model.CartesianGraph var27 = var23.getGraph();
    int var28 = var27.getYSize();
    demo.pathplanning.model.CartesianGraph var31 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var34 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var35 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var38 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var41 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var42 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.Node var43 = new demo.pathplanning.model.Node(var27, var35, 1);
    java.util.Collection var44 = var43.getNeighbors();
    int var45 = var43.getCost();
    java.lang.String var46 = var43.toString();
    demo.pathplanning.model.CartesianGraph var49 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.algorithms.AStar var50 = new demo.pathplanning.algorithms.AStar(var49);
    demo.pathplanning.model.CartesianGraph var51 = var50.getGraph();
    demo.pathplanning.model.CartesianGraph var52 = var50.getGraph();
    demo.pathplanning.algorithms.PathPlanningContext var53 = new demo.pathplanning.algorithms.PathPlanningContext((demo.pathplanning.algorithms.PathPlanner)var50);
    demo.pathplanning.model.CartesianGraph var54 = var50.getGraph();
    int var55 = var54.getYSize();
    demo.pathplanning.model.CartesianGraph var58 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var61 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var62 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var65 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var68 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var69 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.Node var70 = new demo.pathplanning.model.Node(var54, var62, 1);
    java.lang.String var71 = var70.toString();
    boolean var72 = var43.equals((java.lang.Object)var70);
    int var73 = var43.getCost();
    demo.pathplanning.model.CartesianGraph var74 = new demo.pathplanning.model.CartesianGraph(var19, var73);
    demo.pathplanning.algorithms.AStar var75 = new demo.pathplanning.algorithms.AStar(var74);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var3 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var13 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var14);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var17);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var18 + "' != '" + "0,\n"+ "'", var18.equals("0,\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var19 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var24);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var25);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var27);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var28 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var44);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var45 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var46 + "' != '" + "(1,1)=1"+ "'", var46.equals("(1,1)=1"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var51);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var52);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var54);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var55 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var71 + "' != '" + "(1,1)=1"+ "'", var71.equals("(1,1)=1"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var72 == true);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var73 == 1);

  }

  public void test178() throws Throwable {

    demo.pathplanning.model.CartesianGraph var2 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.algorithms.AStar var3 = new demo.pathplanning.algorithms.AStar(var2);
    demo.pathplanning.model.CartesianGraph var4 = var3.getGraph();
    demo.pathplanning.model.CartesianGraph var5 = var3.getGraph();
    demo.pathplanning.algorithms.PathPlanningContext var6 = new demo.pathplanning.algorithms.PathPlanningContext((demo.pathplanning.algorithms.PathPlanner)var3);
    demo.pathplanning.model.CartesianGraph var7 = var3.getGraph();
    int var8 = var7.getYSize();
    demo.pathplanning.model.CartesianGraph var11 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var14 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var15 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var18 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var21 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var22 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.Node var23 = new demo.pathplanning.model.Node(var7, var15, 1);
    demo.pathplanning.model.CartesianGraph var26 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var29 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var30 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var33 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var34 = var33.getXSize();
    int var35 = var33.getYSize();
    int var36 = var33.getYSize();
    demo.pathplanning.model.CartesianGraph var39 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var40 = var39.getXSize();
    int var41 = var39.getYSize();
    int var42 = var39.getYSize();
    demo.pathplanning.model.CartesianGraph var43 = new demo.pathplanning.model.CartesianGraph(var36, var42);
    demo.pathplanning.model.CartesianGraph var44 = new demo.pathplanning.model.CartesianGraph(1, var36);
    demo.pathplanning.model.CartesianGraph var47 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var50 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var51 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var54 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var55 = var54.getXSize();
    int var56 = var54.getYSize();
    int var57 = var54.getYSize();
    demo.pathplanning.model.CartesianGraph var60 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var61 = var60.getXSize();
    int var62 = var60.getYSize();
    int var63 = var60.getYSize();
    demo.pathplanning.model.CartesianGraph var64 = new demo.pathplanning.model.CartesianGraph(var57, var63);
    demo.pathplanning.model.CartesianGraph var65 = new demo.pathplanning.model.CartesianGraph(1, var57);
    demo.pathplanning.model.Location var66 = new demo.pathplanning.model.Location(1, 1);
    boolean var67 = var23.equals((java.lang.Object)1);
    demo.pathplanning.model.Location var68 = var23.getLocation();
    int var69 = var68.getY();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var8 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var34 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var35 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var36 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var40 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var41 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var42 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var55 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var56 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var57 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var61 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var62 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var63 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var67 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var68);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var69 == 1);

  }

  public void test179() throws Throwable {

    demo.pathplanning.model.CartesianGraph var2 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.algorithms.AStar var3 = new demo.pathplanning.algorithms.AStar(var2);
    demo.pathplanning.model.CartesianGraph var4 = var3.getGraph();
    demo.pathplanning.model.CartesianGraph var5 = var3.getGraph();
    demo.pathplanning.algorithms.PathPlanningContext var6 = new demo.pathplanning.algorithms.PathPlanningContext((demo.pathplanning.algorithms.PathPlanner)var3);
    demo.pathplanning.model.CartesianGraph var7 = var3.getGraph();
    int var8 = var7.getYSize();
    demo.pathplanning.model.CartesianGraph var11 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var14 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var15 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var18 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var21 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var22 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.Node var23 = new demo.pathplanning.model.Node(var7, var15, 1);
    int var24 = var23.getCost();
    java.util.Collection var25 = var23.getNeighbors();
    int var26 = var23.getCost();
    demo.pathplanning.model.CartesianGraph var29 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var30 = var29.getXSize();
    int var31 = var29.getYSize();
    int var32 = var29.getYSize();
    demo.pathplanning.model.CartesianGraph var35 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var36 = new demo.pathplanning.model.Location(var32, 1);
    int var37 = var36.getY();
    demo.pathplanning.model.Location var38 = new demo.pathplanning.model.Location(var26, var37);
    demo.pathplanning.model.CartesianGraph var41 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var42 = var41.getXSize();
    int var43 = var41.getYSize();
    demo.pathplanning.model.CartesianGraph var46 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.algorithms.AStar var47 = new demo.pathplanning.algorithms.AStar(var46);
    demo.pathplanning.model.CartesianGraph var48 = var47.getGraph();
    demo.pathplanning.model.CartesianGraph var49 = var47.getGraph();
    demo.pathplanning.algorithms.PathPlanningContext var50 = new demo.pathplanning.algorithms.PathPlanningContext((demo.pathplanning.algorithms.PathPlanner)var47);
    demo.pathplanning.model.CartesianGraph var51 = var47.getGraph();
    int var52 = var51.getYSize();
    demo.pathplanning.model.CartesianGraph var55 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var58 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var59 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var62 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var65 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var66 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.Node var67 = new demo.pathplanning.model.Node(var51, var59, 1);
    int var68 = var67.getCost();
    demo.pathplanning.model.CartesianGraph var71 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var72 = var71.getXSize();
    int var73 = var71.getYSize();
    int var74 = var71.getYSize();
    demo.pathplanning.model.CartesianGraph var77 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var78 = new demo.pathplanning.model.Location(var74, 1);
    demo.pathplanning.model.CartesianGraph var79 = new demo.pathplanning.model.CartesianGraph(var68, 1);
    demo.pathplanning.model.CartesianGraph var82 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.algorithms.AStar var83 = new demo.pathplanning.algorithms.AStar(var82);
    demo.pathplanning.model.CartesianGraph var84 = var83.getGraph();
    demo.pathplanning.model.CartesianGraph var85 = var83.getGraph();
    demo.pathplanning.algorithms.PathPlanningContext var86 = new demo.pathplanning.algorithms.PathPlanningContext((demo.pathplanning.algorithms.PathPlanner)var83);
    demo.pathplanning.model.CartesianGraph var87 = var83.getGraph();
    int var88 = var87.getYSize();
    demo.pathplanning.model.CartesianGraph var89 = new demo.pathplanning.model.CartesianGraph(1, var88);
    int var90 = var89.getXSize();
    demo.pathplanning.model.Location var91 = new demo.pathplanning.model.Location(var43, var90);
    boolean var92 = var38.equals((java.lang.Object)var43);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var8 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var24 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var25);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var26 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var30 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var31 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var32 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var37 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var42 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var43 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var48);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var49);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var51);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var52 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var68 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var72 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var73 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var74 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var84);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var85);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var87);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var88 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var90 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var92 == false);

  }

  public void test180() throws Throwable {

    demo.pathplanning.model.CartesianGraph var2 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var3 = var2.getXSize();
    demo.pathplanning.algorithms.AStar var4 = new demo.pathplanning.algorithms.AStar(var2);
    demo.pathplanning.model.CartesianGraph var7 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var10 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var11 = new demo.pathplanning.model.Location(1, 1);
    boolean var13 = var11.equals((java.lang.Object)0L);
    demo.pathplanning.model.Node var14 = var2.getNode(var11);
    int var15 = var2.getYSize();
    demo.pathplanning.model.CartesianGraph var18 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var19 = var18.getXSize();
    int var20 = var18.getYSize();
    int var21 = var18.getYSize();
    demo.pathplanning.model.CartesianGraph var24 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var25 = var24.getXSize();
    int var26 = var24.getYSize();
    int var27 = var24.getYSize();
    demo.pathplanning.model.CartesianGraph var28 = new demo.pathplanning.model.CartesianGraph(var21, var27);
    demo.pathplanning.model.CartesianGraph var31 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var34 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var35 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var36 = new demo.pathplanning.model.CartesianGraph(var21, 1);
    int var37 = var36.getXSize();
    demo.pathplanning.model.CartesianGraph var40 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var41 = var40.getXSize();
    int var42 = var40.getYSize();
    int var43 = var40.getYSize();
    demo.pathplanning.model.CartesianGraph var44 = new demo.pathplanning.model.CartesianGraph(var37, var43);
    demo.pathplanning.model.CartesianGraph var45 = new demo.pathplanning.model.CartesianGraph(var15, var37);
    demo.pathplanning.model.CartesianGraph var48 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var49 = var48.getXSize();
    int var50 = var48.getYSize();
    int var51 = var48.getYSize();
    demo.pathplanning.model.CartesianGraph var54 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var55 = var54.getXSize();
    int var56 = var54.getYSize();
    int var57 = var54.getYSize();
    demo.pathplanning.model.CartesianGraph var58 = new demo.pathplanning.model.CartesianGraph(var51, var57);
    demo.pathplanning.model.CartesianGraph var61 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var64 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var65 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var66 = new demo.pathplanning.model.CartesianGraph(var51, 1);
    int var67 = var66.getXSize();
    demo.pathplanning.model.CartesianGraph var70 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var71 = var70.getXSize();
    int var72 = var70.getYSize();
    int var73 = var70.getYSize();
    demo.pathplanning.model.CartesianGraph var74 = new demo.pathplanning.model.CartesianGraph(var67, var73);
    demo.pathplanning.model.CartesianGraph var75 = new demo.pathplanning.model.CartesianGraph(var15, var67);
    int var76 = var75.getXSize();
    int var77 = var75.getXSize();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var3 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var13 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var14);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var15 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var19 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var20 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var21 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var25 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var26 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var27 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var37 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var41 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var42 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var43 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var49 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var50 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var51 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var55 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var56 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var57 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var67 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var71 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var72 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var73 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var76 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var77 == 1);

  }

  public void test181() throws Throwable {

    demo.pathplanning.model.CartesianGraph var2 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.algorithms.AStar var3 = new demo.pathplanning.algorithms.AStar(var2);
    demo.pathplanning.model.CartesianGraph var4 = var3.getGraph();
    demo.pathplanning.model.CartesianGraph var5 = var3.getGraph();
    demo.pathplanning.model.CartesianGraph var6 = var3.getGraph();
    demo.pathplanning.algorithms.AStar var7 = new demo.pathplanning.algorithms.AStar(var6);
    int var8 = var6.getXSize();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var6);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var8 == 1);

  }

  public void test182() throws Throwable {

    demo.pathplanning.model.CartesianGraph var2 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var3 = var2.getXSize();
    int var4 = var2.getYSize();
    demo.pathplanning.model.CartesianGraph var7 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.algorithms.AStar var8 = new demo.pathplanning.algorithms.AStar(var7);
    java.lang.String var9 = var7.toString();
    demo.pathplanning.model.CartesianGraph var12 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var15 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var16 = new demo.pathplanning.model.Location(1, 1);
    boolean var18 = var16.equals((java.lang.Object)0L);
    demo.pathplanning.model.Node var19 = var7.getNode(var16);
    demo.pathplanning.model.CartesianGraph var22 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var25 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var26 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var29 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var30 = var29.getXSize();
    demo.pathplanning.model.CartesianGraph var33 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var34 = new demo.pathplanning.model.CartesianGraph(var30, 1);
    demo.pathplanning.model.Location var35 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.Node var36 = new demo.pathplanning.model.Node(var2, var16, 1);
    demo.pathplanning.model.CartesianGraph var39 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var40 = var39.getXSize();
    demo.pathplanning.algorithms.AStar var41 = new demo.pathplanning.algorithms.AStar(var39);
    demo.pathplanning.model.CartesianGraph var44 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var47 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var48 = new demo.pathplanning.model.Location(1, 1);
    boolean var50 = var48.equals((java.lang.Object)0L);
    demo.pathplanning.model.Node var51 = var39.getNode(var48);
    int var52 = var39.getXSize();
    boolean var53 = var16.equals((java.lang.Object)var39);
    int var54 = var39.getXSize();
    demo.pathplanning.algorithms.AStar var55 = new demo.pathplanning.algorithms.AStar(var39);
    demo.pathplanning.algorithms.AStar var56 = new demo.pathplanning.algorithms.AStar(var39);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var3 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var4 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var9 + "' != '" + "0,\n"+ "'", var9.equals("0,\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var18 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var19);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var30 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var40 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var50 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var51);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var52 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var53 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var54 == 1);

  }

  public void test183() throws Throwable {

    demo.pathplanning.model.CartesianGraph var2 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var3 = var2.getXSize();
    int var4 = var2.getYSize();
    int var5 = var2.getYSize();
    demo.pathplanning.model.CartesianGraph var8 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var9 = var8.getXSize();
    int var10 = var8.getYSize();
    int var11 = var8.getYSize();
    demo.pathplanning.model.CartesianGraph var12 = new demo.pathplanning.model.CartesianGraph(var5, var11);
    demo.pathplanning.model.CartesianGraph var15 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var18 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var19 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var20 = new demo.pathplanning.model.CartesianGraph(var5, 1);
    java.lang.String var21 = var20.toString();
    demo.pathplanning.model.CartesianGraph var24 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var27 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var28 = new demo.pathplanning.model.Location(1, 1);
    boolean var30 = var28.equals((java.lang.Object)0L);
    demo.pathplanning.model.Node var31 = var20.getNode(var28);
    demo.pathplanning.model.CartesianGraph var34 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var35 = var34.getXSize();
    demo.pathplanning.model.CartesianGraph var38 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var39 = new demo.pathplanning.model.CartesianGraph(var35, 1);
    demo.pathplanning.model.CartesianGraph var42 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.algorithms.AStar var43 = new demo.pathplanning.algorithms.AStar(var42);
    demo.pathplanning.model.CartesianGraph var44 = var43.getGraph();
    demo.pathplanning.model.CartesianGraph var45 = var43.getGraph();
    demo.pathplanning.algorithms.PathPlanningContext var46 = new demo.pathplanning.algorithms.PathPlanningContext((demo.pathplanning.algorithms.PathPlanner)var43);
    demo.pathplanning.model.CartesianGraph var47 = var43.getGraph();
    int var48 = var47.getYSize();
    demo.pathplanning.model.Location var49 = new demo.pathplanning.model.Location(var35, var48);
    demo.pathplanning.model.CartesianGraph var53 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.algorithms.AStar var54 = new demo.pathplanning.algorithms.AStar(var53);
    demo.pathplanning.model.CartesianGraph var55 = var54.getGraph();
    demo.pathplanning.model.CartesianGraph var56 = var54.getGraph();
    demo.pathplanning.algorithms.PathPlanningContext var57 = new demo.pathplanning.algorithms.PathPlanningContext((demo.pathplanning.algorithms.PathPlanner)var54);
    demo.pathplanning.model.CartesianGraph var58 = var54.getGraph();
    int var59 = var58.getYSize();
    demo.pathplanning.model.CartesianGraph var62 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var65 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var66 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var69 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var72 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var73 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.Node var74 = new demo.pathplanning.model.Node(var58, var66, 1);
    demo.pathplanning.model.CartesianGraph var77 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var80 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var81 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var84 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var85 = var84.getXSize();
    int var86 = var84.getYSize();
    int var87 = var84.getYSize();
    demo.pathplanning.model.CartesianGraph var90 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var91 = var90.getXSize();
    int var92 = var90.getYSize();
    int var93 = var90.getYSize();
    demo.pathplanning.model.CartesianGraph var94 = new demo.pathplanning.model.CartesianGraph(var87, var93);
    demo.pathplanning.model.CartesianGraph var95 = new demo.pathplanning.model.CartesianGraph(1, var87);
    demo.pathplanning.model.CartesianGraph var96 = new demo.pathplanning.model.CartesianGraph(1, var87);
    demo.pathplanning.model.CartesianGraph var97 = new demo.pathplanning.model.CartesianGraph(0, 1);
    demo.pathplanning.model.Node var98 = new demo.pathplanning.model.Node(var20, var49, 0);
    int var99 = var49.getX();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var3 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var4 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var5 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var9 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var11 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var21 + "' != '" + "0,\n"+ "'", var21.equals("0,\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var30 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var31);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var35 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var44);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var45);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var47);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var48 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var55);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var56);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var58);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var59 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var85 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var86 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var87 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var91 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var92 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var93 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var99 == 1);

  }

  public void test184() throws Throwable {

    demo.pathplanning.model.CartesianGraph var2 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.algorithms.AStar var3 = new demo.pathplanning.algorithms.AStar(var2);
    demo.pathplanning.model.CartesianGraph var4 = var3.getGraph();
    demo.pathplanning.model.CartesianGraph var5 = var3.getGraph();
    demo.pathplanning.algorithms.PathPlanningContext var6 = new demo.pathplanning.algorithms.PathPlanningContext((demo.pathplanning.algorithms.PathPlanner)var3);
    demo.pathplanning.model.CartesianGraph var7 = var3.getGraph();
    int var8 = var7.getYSize();
    demo.pathplanning.model.CartesianGraph var11 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var14 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var15 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var18 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var21 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var22 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.Node var23 = new demo.pathplanning.model.Node(var7, var15, 1);
    int var24 = var23.getCost();
    java.util.Collection var25 = var23.getNeighbors();
    java.util.Collection var26 = var23.getNeighbors();
    demo.pathplanning.model.CartesianGraph var29 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var30 = var29.getXSize();
    int var31 = var29.getYSize();
    int var32 = var29.getYSize();
    demo.pathplanning.model.CartesianGraph var35 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var36 = var35.getXSize();
    int var37 = var35.getYSize();
    int var38 = var35.getYSize();
    demo.pathplanning.model.CartesianGraph var39 = new demo.pathplanning.model.CartesianGraph(var32, var38);
    demo.pathplanning.model.CartesianGraph var42 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var45 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var46 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var47 = new demo.pathplanning.model.CartesianGraph(var32, 1);
    java.lang.String var48 = var47.toString();
    demo.pathplanning.model.CartesianGraph var51 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var54 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var55 = new demo.pathplanning.model.Location(1, 1);
    boolean var57 = var55.equals((java.lang.Object)0L);
    demo.pathplanning.model.Node var58 = var47.getNode(var55);
    demo.pathplanning.model.CartesianGraph var61 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var64 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var65 = new demo.pathplanning.model.Location(1, 1);
    boolean var67 = var65.equals((java.lang.Object)0L);
    int var68 = var65.getX();
    int var69 = var65.getX();
    demo.pathplanning.model.CartesianGraph var72 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var73 = var72.getXSize();
    demo.pathplanning.model.Node var74 = new demo.pathplanning.model.Node(var47, var65, var73);
    int var75 = var74.getCost();
    java.util.Collection var76 = var74.getNeighbors();
    demo.pathplanning.model.CartesianGraph var79 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var80 = var79.getXSize();
    demo.pathplanning.algorithms.AStar var81 = new demo.pathplanning.algorithms.AStar(var79);
    demo.pathplanning.model.CartesianGraph var84 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var87 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var88 = new demo.pathplanning.model.Location(1, 1);
    boolean var90 = var88.equals((java.lang.Object)0L);
    demo.pathplanning.model.Node var91 = var79.getNode(var88);
    demo.pathplanning.algorithms.AStar var92 = new demo.pathplanning.algorithms.AStar(var79);
    demo.pathplanning.model.CartesianGraph var93 = var92.getGraph();
    boolean var94 = var74.equals((java.lang.Object)var92);
    java.lang.String var95 = var74.toString();
    java.lang.String var96 = var74.toString();
    boolean var97 = var23.equals((java.lang.Object)var74);
    java.lang.String var98 = var74.toString();
    java.lang.String var99 = var74.toString();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var8 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var24 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var25);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var26);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var30 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var31 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var32 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var36 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var37 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var38 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var48 + "' != '" + "0,\n"+ "'", var48.equals("0,\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var57 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var58);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var67 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var68 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var69 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var73 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var75 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var76);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var80 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var90 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var91);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var93);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var94 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var95 + "' != '" + "(1,1)=1"+ "'", var95.equals("(1,1)=1"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var96 + "' != '" + "(1,1)=1"+ "'", var96.equals("(1,1)=1"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var97 == true);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var98 + "' != '" + "(1,1)=1"+ "'", var98.equals("(1,1)=1"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var99 + "' != '" + "(1,1)=1"+ "'", var99.equals("(1,1)=1"));

  }

  public void test185() throws Throwable {

    demo.pathplanning.model.CartesianGraph var2 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.algorithms.AStar var3 = new demo.pathplanning.algorithms.AStar(var2);
    demo.pathplanning.model.CartesianGraph var4 = var3.getGraph();
    demo.pathplanning.model.CartesianGraph var5 = var3.getGraph();
    demo.pathplanning.algorithms.PathPlanningContext var6 = new demo.pathplanning.algorithms.PathPlanningContext((demo.pathplanning.algorithms.PathPlanner)var3);
    demo.pathplanning.model.CartesianGraph var7 = var3.getGraph();
    int var8 = var7.getYSize();
    demo.pathplanning.model.CartesianGraph var11 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var14 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var15 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var18 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var21 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var22 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.Node var23 = new demo.pathplanning.model.Node(var7, var15, 1);
    java.util.Collection var24 = var23.getNeighbors();
    demo.pathplanning.model.Location var25 = var23.getLocation();
    java.util.Collection var26 = var23.getNeighbors();
    boolean var28 = var23.equals((java.lang.Object)1.0f);
    int var29 = var23.getCost();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var8 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var24);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var25);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var26);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var28 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var29 == 1);

  }

  public void test186() throws Throwable {

    demo.pathplanning.model.CartesianGraph var2 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var3 = var2.getXSize();
    int var4 = var2.getYSize();
    int var5 = var2.getYSize();
    demo.pathplanning.model.CartesianGraph var8 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var9 = var8.getXSize();
    int var10 = var8.getYSize();
    int var11 = var8.getYSize();
    demo.pathplanning.model.CartesianGraph var12 = new demo.pathplanning.model.CartesianGraph(var5, var11);
    demo.pathplanning.model.CartesianGraph var15 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var18 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var19 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var20 = new demo.pathplanning.model.CartesianGraph(var5, 1);
    java.lang.String var21 = var20.toString();
    demo.pathplanning.model.CartesianGraph var24 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var27 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var28 = new demo.pathplanning.model.Location(1, 1);
    boolean var30 = var28.equals((java.lang.Object)0L);
    demo.pathplanning.model.Node var31 = var20.getNode(var28);
    demo.pathplanning.model.CartesianGraph var34 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var37 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var38 = new demo.pathplanning.model.Location(1, 1);
    boolean var40 = var38.equals((java.lang.Object)0L);
    int var41 = var38.getX();
    int var42 = var38.getX();
    demo.pathplanning.model.CartesianGraph var45 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var46 = var45.getXSize();
    demo.pathplanning.model.Node var47 = new demo.pathplanning.model.Node(var20, var38, var46);
    int var48 = var47.getCost();
    java.util.Collection var49 = var47.getNeighbors();
    demo.pathplanning.model.CartesianGraph var52 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var53 = var52.getXSize();
    demo.pathplanning.algorithms.AStar var54 = new demo.pathplanning.algorithms.AStar(var52);
    demo.pathplanning.model.CartesianGraph var57 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var60 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var61 = new demo.pathplanning.model.Location(1, 1);
    boolean var63 = var61.equals((java.lang.Object)0L);
    demo.pathplanning.model.Node var64 = var52.getNode(var61);
    demo.pathplanning.algorithms.AStar var65 = new demo.pathplanning.algorithms.AStar(var52);
    demo.pathplanning.model.CartesianGraph var66 = var65.getGraph();
    boolean var67 = var47.equals((java.lang.Object)var65);
    java.lang.String var68 = var47.toString();
    java.util.Collection var69 = var47.getNeighbors();
    java.lang.String var70 = var47.toString();
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      demo.pathplanning.model.Direction var71 = demo.pathplanning.model.Direction.valueOf(var70);
      fail("Expected exception of type java.lang.IllegalArgumentException");
    } catch (java.lang.IllegalArgumentException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var3 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var4 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var5 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var9 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var11 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var21 + "' != '" + "0,\n"+ "'", var21.equals("0,\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var30 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var31);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var40 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var41 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var42 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var46 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var48 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var49);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var53 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var63 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var64);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var66);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var67 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var68 + "' != '" + "(1,1)=1"+ "'", var68.equals("(1,1)=1"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var69);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var70 + "' != '" + "(1,1)=1"+ "'", var70.equals("(1,1)=1"));

  }

  public void test187() throws Throwable {

    demo.pathplanning.model.CartesianGraph var2 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var5 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var6 = new demo.pathplanning.model.Location(1, 1);
    int var7 = var6.getX();
    demo.pathplanning.model.CartesianGraph var10 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var13 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var14 = new demo.pathplanning.model.Location(1, 1);
    boolean var16 = var14.equals((java.lang.Object)0L);
    int var17 = var14.getX();
    int var18 = var14.getX();
    int var19 = var14.getY();
    demo.pathplanning.model.CartesianGraph var22 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var23 = var22.getXSize();
    demo.pathplanning.algorithms.AStar var24 = new demo.pathplanning.algorithms.AStar(var22);
    demo.pathplanning.model.CartesianGraph var27 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var30 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var31 = new demo.pathplanning.model.Location(1, 1);
    boolean var33 = var31.equals((java.lang.Object)0L);
    demo.pathplanning.model.Node var34 = var22.getNode(var31);
    boolean var35 = var14.equals((java.lang.Object)var31);
    int var36 = var31.getY();
    boolean var37 = var6.equals((java.lang.Object)var31);
    int var38 = var31.getY();
    int var39 = var31.getX();
    int var40 = var31.getX();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var7 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var16 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var17 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var18 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var19 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var23 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var33 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var34);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var35 == true);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var36 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var37 == true);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var38 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var39 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var40 == 1);

  }

  public void test188() throws Throwable {

    demo.pathplanning.model.CartesianGraph var2 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.algorithms.AStar var3 = new demo.pathplanning.algorithms.AStar(var2);
    demo.pathplanning.model.CartesianGraph var4 = var3.getGraph();
    demo.pathplanning.model.CartesianGraph var5 = var3.getGraph();
    demo.pathplanning.algorithms.PathPlanningContext var6 = new demo.pathplanning.algorithms.PathPlanningContext((demo.pathplanning.algorithms.PathPlanner)var3);
    demo.pathplanning.model.CartesianGraph var7 = var3.getGraph();
    int var8 = var7.getYSize();
    demo.pathplanning.model.CartesianGraph var11 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var14 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var15 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var18 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var21 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var22 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.Node var23 = new demo.pathplanning.model.Node(var7, var15, 1);
    demo.pathplanning.model.CartesianGraph var26 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var29 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var30 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var33 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var34 = var33.getXSize();
    int var35 = var33.getYSize();
    int var36 = var33.getYSize();
    demo.pathplanning.model.CartesianGraph var39 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var40 = var39.getXSize();
    int var41 = var39.getYSize();
    int var42 = var39.getYSize();
    demo.pathplanning.model.CartesianGraph var43 = new demo.pathplanning.model.CartesianGraph(var36, var42);
    demo.pathplanning.model.CartesianGraph var44 = new demo.pathplanning.model.CartesianGraph(1, var36);
    demo.pathplanning.model.CartesianGraph var47 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var50 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var51 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var54 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var55 = var54.getXSize();
    int var56 = var54.getYSize();
    int var57 = var54.getYSize();
    demo.pathplanning.model.CartesianGraph var60 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var61 = var60.getXSize();
    int var62 = var60.getYSize();
    int var63 = var60.getYSize();
    demo.pathplanning.model.CartesianGraph var64 = new demo.pathplanning.model.CartesianGraph(var57, var63);
    demo.pathplanning.model.CartesianGraph var65 = new demo.pathplanning.model.CartesianGraph(1, var57);
    demo.pathplanning.model.Location var66 = new demo.pathplanning.model.Location(1, 1);
    boolean var67 = var23.equals((java.lang.Object)1);
    demo.pathplanning.model.Location var68 = var23.getLocation();
    java.util.Collection var69 = var23.getNeighbors();
    demo.pathplanning.model.Location var70 = var23.getLocation();
    int var71 = var23.getCost();
    int var72 = var23.getCost();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var8 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var34 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var35 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var36 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var40 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var41 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var42 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var55 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var56 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var57 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var61 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var62 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var63 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var67 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var68);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var69);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var70);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var71 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var72 == 1);

  }

  public void test189() throws Throwable {

    demo.pathplanning.model.CartesianGraph var2 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var3 = var2.getXSize();
    int var4 = var2.getYSize();
    int var5 = var2.getYSize();
    demo.pathplanning.model.CartesianGraph var8 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var9 = var8.getXSize();
    int var10 = var8.getYSize();
    int var11 = var8.getYSize();
    demo.pathplanning.model.CartesianGraph var12 = new demo.pathplanning.model.CartesianGraph(var5, var11);
    int var13 = var12.getXSize();
    demo.pathplanning.model.CartesianGraph var16 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.algorithms.AStar var17 = new demo.pathplanning.algorithms.AStar(var16);
    java.lang.String var18 = var16.toString();
    demo.pathplanning.model.CartesianGraph var21 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var24 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var25 = new demo.pathplanning.model.Location(1, 1);
    boolean var27 = var25.equals((java.lang.Object)0L);
    demo.pathplanning.model.Node var28 = var16.getNode(var25);
    demo.pathplanning.model.CartesianGraph var31 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var32 = var31.getXSize();
    demo.pathplanning.algorithms.AStar var33 = new demo.pathplanning.algorithms.AStar(var31);
    demo.pathplanning.model.CartesianGraph var36 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var39 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var40 = new demo.pathplanning.model.Location(1, 1);
    boolean var42 = var40.equals((java.lang.Object)0L);
    demo.pathplanning.model.Node var43 = var31.getNode(var40);
    int var44 = var31.getXSize();
    demo.pathplanning.model.Node var45 = new demo.pathplanning.model.Node(var12, var25, var44);
    java.lang.String var46 = var25.toString();
    java.lang.String var47 = var25.toString();
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      demo.pathplanning.model.Direction var48 = demo.pathplanning.model.Direction.valueOf(var47);
      fail("Expected exception of type java.lang.IllegalArgumentException");
    } catch (java.lang.IllegalArgumentException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var3 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var4 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var5 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var9 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var11 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var13 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var18 + "' != '" + "0,\n"+ "'", var18.equals("0,\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var27 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var28);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var32 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var42 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var43);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var44 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var46 + "' != '" + "(1,1)"+ "'", var46.equals("(1,1)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var47 + "' != '" + "(1,1)"+ "'", var47.equals("(1,1)"));

  }

  public void test190() throws Throwable {

    demo.pathplanning.model.CartesianGraph var2 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var3 = var2.getXSize();
    int var4 = var2.getYSize();
    int var5 = var2.getYSize();
    demo.pathplanning.model.CartesianGraph var8 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var9 = var8.getXSize();
    int var10 = var8.getYSize();
    int var11 = var8.getYSize();
    demo.pathplanning.model.CartesianGraph var12 = new demo.pathplanning.model.CartesianGraph(var5, var11);
    demo.pathplanning.algorithms.AStar var13 = new demo.pathplanning.algorithms.AStar(var12);
    demo.pathplanning.model.CartesianGraph var16 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var19 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var20 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var23 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var24 = var23.getXSize();
    int var25 = var23.getYSize();
    int var26 = var23.getYSize();
    demo.pathplanning.model.CartesianGraph var29 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var30 = var29.getXSize();
    int var31 = var29.getYSize();
    int var32 = var29.getYSize();
    demo.pathplanning.model.CartesianGraph var33 = new demo.pathplanning.model.CartesianGraph(var26, var32);
    demo.pathplanning.model.CartesianGraph var34 = new demo.pathplanning.model.CartesianGraph(1, var26);
    int var35 = var34.getYSize();
    demo.pathplanning.model.CartesianGraph var38 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.algorithms.AStar var39 = new demo.pathplanning.algorithms.AStar(var38);
    java.lang.String var40 = var38.toString();
    demo.pathplanning.model.CartesianGraph var43 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var46 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var47 = new demo.pathplanning.model.Location(1, 1);
    boolean var49 = var47.equals((java.lang.Object)0L);
    demo.pathplanning.model.Node var50 = var38.getNode(var47);
    demo.pathplanning.model.CartesianGraph var53 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var54 = var53.getXSize();
    int var55 = var53.getYSize();
    int var56 = var53.getYSize();
    demo.pathplanning.model.CartesianGraph var59 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var60 = var59.getXSize();
    int var61 = var59.getYSize();
    int var62 = var59.getYSize();
    demo.pathplanning.model.CartesianGraph var63 = new demo.pathplanning.model.CartesianGraph(var56, var62);
    demo.pathplanning.model.CartesianGraph var66 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var69 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var70 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var71 = new demo.pathplanning.model.CartesianGraph(var56, 1);
    demo.pathplanning.model.Node var72 = new demo.pathplanning.model.Node(var34, var47, 1);
    demo.pathplanning.model.Node var73 = var12.getNode(var47);
    java.lang.String var74 = var12.toString();
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      demo.pathplanning.model.Direction var75 = demo.pathplanning.model.Direction.valueOf(var74);
      fail("Expected exception of type java.lang.IllegalArgumentException");
    } catch (java.lang.IllegalArgumentException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var3 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var4 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var5 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var9 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var11 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var24 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var25 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var26 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var30 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var31 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var32 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var35 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var40 + "' != '" + "0,\n"+ "'", var40.equals("0,\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var49 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var50);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var54 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var55 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var56 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var60 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var61 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var62 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var73);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var74 + "' != '" + "0,\n"+ "'", var74.equals("0,\n"));

  }

  public void test191() throws Throwable {

    demo.pathplanning.model.CartesianGraph var2 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var3 = var2.getXSize();
    int var4 = var2.getYSize();
    int var5 = var2.getYSize();
    java.lang.String var6 = var2.toString();
    java.lang.String var7 = var2.toString();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var3 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var4 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var5 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var6 + "' != '" + "0,\n"+ "'", var6.equals("0,\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var7 + "' != '" + "0,\n"+ "'", var7.equals("0,\n"));

  }

  public void test192() throws Throwable {

    demo.pathplanning.model.CartesianGraph var2 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var3 = var2.getXSize();
    int var4 = var2.getYSize();
    int var5 = var2.getYSize();
    demo.pathplanning.model.CartesianGraph var8 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var9 = var8.getXSize();
    int var10 = var8.getYSize();
    int var11 = var8.getYSize();
    demo.pathplanning.model.CartesianGraph var12 = new demo.pathplanning.model.CartesianGraph(var5, var11);
    demo.pathplanning.model.CartesianGraph var15 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var18 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var19 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var20 = new demo.pathplanning.model.CartesianGraph(var5, 1);
    java.lang.String var21 = var20.toString();
    demo.pathplanning.model.CartesianGraph var24 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var27 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var28 = new demo.pathplanning.model.Location(1, 1);
    boolean var30 = var28.equals((java.lang.Object)0L);
    demo.pathplanning.model.Node var31 = var20.getNode(var28);
    demo.pathplanning.model.CartesianGraph var34 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var37 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var38 = new demo.pathplanning.model.Location(1, 1);
    boolean var40 = var38.equals((java.lang.Object)0L);
    int var41 = var38.getX();
    int var42 = var38.getX();
    demo.pathplanning.model.CartesianGraph var45 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var46 = var45.getXSize();
    demo.pathplanning.model.Node var47 = new demo.pathplanning.model.Node(var20, var38, var46);
    int var48 = var20.getYSize();
    int var49 = var20.getYSize();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var3 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var4 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var5 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var9 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var11 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var21 + "' != '" + "0,\n"+ "'", var21.equals("0,\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var30 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var31);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var40 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var41 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var42 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var46 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var48 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var49 == 1);

  }

  public void test193() throws Throwable {

    demo.pathplanning.model.CartesianGraph var2 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var5 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var6 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var9 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var10 = var9.getXSize();
    int var11 = var9.getYSize();
    int var12 = var9.getYSize();
    demo.pathplanning.model.CartesianGraph var15 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var16 = var15.getXSize();
    int var17 = var15.getYSize();
    int var18 = var15.getYSize();
    demo.pathplanning.model.CartesianGraph var19 = new demo.pathplanning.model.CartesianGraph(var12, var18);
    demo.pathplanning.model.CartesianGraph var20 = new demo.pathplanning.model.CartesianGraph(1, var12);
    int var21 = var20.getYSize();
    demo.pathplanning.model.CartesianGraph var24 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.algorithms.AStar var25 = new demo.pathplanning.algorithms.AStar(var24);
    java.lang.String var26 = var24.toString();
    demo.pathplanning.model.CartesianGraph var29 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var32 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var33 = new demo.pathplanning.model.Location(1, 1);
    boolean var35 = var33.equals((java.lang.Object)0L);
    demo.pathplanning.model.Node var36 = var24.getNode(var33);
    demo.pathplanning.model.CartesianGraph var39 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var40 = var39.getXSize();
    int var41 = var39.getYSize();
    int var42 = var39.getYSize();
    demo.pathplanning.model.CartesianGraph var45 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var46 = var45.getXSize();
    int var47 = var45.getYSize();
    int var48 = var45.getYSize();
    demo.pathplanning.model.CartesianGraph var49 = new demo.pathplanning.model.CartesianGraph(var42, var48);
    demo.pathplanning.model.CartesianGraph var52 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var55 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var56 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var57 = new demo.pathplanning.model.CartesianGraph(var42, 1);
    demo.pathplanning.model.Node var58 = new demo.pathplanning.model.Node(var20, var33, 1);
    demo.pathplanning.model.Location var59 = var58.getLocation();
    demo.pathplanning.model.CartesianGraph var62 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var65 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var66 = new demo.pathplanning.model.Location(1, 1);
    int var67 = var66.getX();
    boolean var68 = var58.equals((java.lang.Object)var66);
    demo.pathplanning.model.Location var69 = var58.getLocation();
    demo.pathplanning.model.Location var70 = var58.getLocation();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var11 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var12 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var16 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var17 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var18 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var21 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var26 + "' != '" + "0,\n"+ "'", var26.equals("0,\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var35 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var36);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var40 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var41 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var42 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var46 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var47 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var48 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var59);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var67 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var68 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var69);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var70);

  }

  public void test194() throws Throwable {

    demo.pathplanning.model.CartesianGraph var2 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.algorithms.AStar var3 = new demo.pathplanning.algorithms.AStar(var2);
    java.lang.String var4 = var2.toString();
    demo.pathplanning.model.CartesianGraph var7 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var10 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var11 = new demo.pathplanning.model.Location(1, 1);
    boolean var13 = var11.equals((java.lang.Object)0L);
    int var14 = var11.getX();
    int var15 = var11.getX();
    demo.pathplanning.model.CartesianGraph var18 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.algorithms.AStar var19 = new demo.pathplanning.algorithms.AStar(var18);
    demo.pathplanning.model.CartesianGraph var20 = var19.getGraph();
    demo.pathplanning.model.CartesianGraph var21 = var19.getGraph();
    demo.pathplanning.algorithms.PathPlanningContext var22 = new demo.pathplanning.algorithms.PathPlanningContext((demo.pathplanning.algorithms.PathPlanner)var19);
    demo.pathplanning.model.CartesianGraph var23 = var19.getGraph();
    int var24 = var23.getYSize();
    demo.pathplanning.model.CartesianGraph var27 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var30 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var31 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var34 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var37 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var38 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.Node var39 = new demo.pathplanning.model.Node(var23, var31, 1);
    demo.pathplanning.model.CartesianGraph var42 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var45 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var46 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var49 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var50 = var49.getXSize();
    int var51 = var49.getYSize();
    int var52 = var49.getYSize();
    demo.pathplanning.model.CartesianGraph var55 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var56 = var55.getXSize();
    int var57 = var55.getYSize();
    int var58 = var55.getYSize();
    demo.pathplanning.model.CartesianGraph var59 = new demo.pathplanning.model.CartesianGraph(var52, var58);
    demo.pathplanning.model.CartesianGraph var60 = new demo.pathplanning.model.CartesianGraph(1, var52);
    demo.pathplanning.model.CartesianGraph var61 = new demo.pathplanning.model.CartesianGraph(1, var52);
    demo.pathplanning.model.Node var62 = new demo.pathplanning.model.Node(var2, var11, var52);
    java.lang.String var63 = var62.toString();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var4 + "' != '" + "0,\n"+ "'", var4.equals("0,\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var13 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var14 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var15 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var20);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var21);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var23);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var24 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var50 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var51 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var52 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var56 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var57 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var58 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var63 + "' != '" + "(1,1)=1"+ "'", var63.equals("(1,1)=1"));

  }

  public void test195() throws Throwable {

    demo.pathplanning.model.CartesianGraph var2 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var5 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var8 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var9 = new demo.pathplanning.model.Location(1, 1);
    boolean var11 = var9.equals((java.lang.Object)0L);
    int var12 = var9.getX();
    int var13 = var9.getX();
    int var14 = var9.getY();
    demo.pathplanning.model.CartesianGraph var17 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var18 = var17.getXSize();
    demo.pathplanning.algorithms.AStar var19 = new demo.pathplanning.algorithms.AStar(var17);
    demo.pathplanning.model.CartesianGraph var22 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var25 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var26 = new demo.pathplanning.model.Location(1, 1);
    boolean var28 = var26.equals((java.lang.Object)0L);
    demo.pathplanning.model.Node var29 = var17.getNode(var26);
    boolean var30 = var9.equals((java.lang.Object)var26);
    int var31 = var26.getY();
    demo.pathplanning.model.CartesianGraph var32 = new demo.pathplanning.model.CartesianGraph(1, var31);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var11 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var12 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var13 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var14 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var18 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var28 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var29);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var30 == true);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var31 == 1);

  }

  public void test196() throws Throwable {

    demo.pathplanning.model.CartesianGraph var2 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var3 = var2.getXSize();
    int var4 = var2.getYSize();
    demo.pathplanning.model.CartesianGraph var7 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.algorithms.AStar var8 = new demo.pathplanning.algorithms.AStar(var7);
    java.lang.String var9 = var7.toString();
    demo.pathplanning.model.CartesianGraph var12 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var15 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var16 = new demo.pathplanning.model.Location(1, 1);
    boolean var18 = var16.equals((java.lang.Object)0L);
    demo.pathplanning.model.Node var19 = var7.getNode(var16);
    demo.pathplanning.model.CartesianGraph var22 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var25 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var26 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var29 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var30 = var29.getXSize();
    demo.pathplanning.model.CartesianGraph var33 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var34 = new demo.pathplanning.model.CartesianGraph(var30, 1);
    demo.pathplanning.model.Location var35 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.Node var36 = new demo.pathplanning.model.Node(var2, var16, 1);
    demo.pathplanning.model.CartesianGraph var39 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var40 = var39.getXSize();
    demo.pathplanning.algorithms.AStar var41 = new demo.pathplanning.algorithms.AStar(var39);
    demo.pathplanning.model.CartesianGraph var44 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var47 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var48 = new demo.pathplanning.model.Location(1, 1);
    boolean var50 = var48.equals((java.lang.Object)0L);
    demo.pathplanning.model.Node var51 = var39.getNode(var48);
    int var52 = var39.getXSize();
    boolean var53 = var16.equals((java.lang.Object)var39);
    int var54 = var39.getXSize();
    demo.pathplanning.algorithms.AStar var55 = new demo.pathplanning.algorithms.AStar(var39);
    java.lang.String var56 = var39.toString();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var3 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var4 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var9 + "' != '" + "0,\n"+ "'", var9.equals("0,\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var18 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var19);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var30 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var40 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var50 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var51);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var52 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var53 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var54 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var56 + "' != '" + "0,\n"+ "'", var56.equals("0,\n"));

  }

  public void test197() throws Throwable {

    demo.pathplanning.model.CartesianGraph var2 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var3 = var2.getXSize();
    int var4 = var2.getYSize();
    int var5 = var2.getYSize();
    demo.pathplanning.model.CartesianGraph var8 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var9 = var8.getXSize();
    int var10 = var8.getYSize();
    int var11 = var8.getYSize();
    demo.pathplanning.model.CartesianGraph var12 = new demo.pathplanning.model.CartesianGraph(var5, var11);
    demo.pathplanning.model.CartesianGraph var15 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var18 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var19 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var20 = new demo.pathplanning.model.CartesianGraph(var5, 1);
    java.lang.String var21 = var20.toString();
    demo.pathplanning.model.CartesianGraph var24 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var27 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var28 = new demo.pathplanning.model.Location(1, 1);
    boolean var30 = var28.equals((java.lang.Object)0L);
    demo.pathplanning.model.Node var31 = var20.getNode(var28);
    demo.pathplanning.model.CartesianGraph var34 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var37 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var38 = new demo.pathplanning.model.Location(1, 1);
    boolean var40 = var38.equals((java.lang.Object)0L);
    int var41 = var38.getX();
    int var42 = var38.getX();
    demo.pathplanning.model.CartesianGraph var45 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var46 = var45.getXSize();
    demo.pathplanning.model.Node var47 = new demo.pathplanning.model.Node(var20, var38, var46);
    int var48 = var47.getCost();
    demo.pathplanning.model.CartesianGraph var51 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var52 = var51.getXSize();
    int var53 = var51.getYSize();
    int var54 = var51.getYSize();
    demo.pathplanning.model.CartesianGraph var57 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var58 = var57.getXSize();
    int var59 = var57.getYSize();
    int var60 = var57.getYSize();
    demo.pathplanning.model.CartesianGraph var61 = new demo.pathplanning.model.CartesianGraph(var54, var60);
    int var62 = var61.getXSize();
    demo.pathplanning.model.CartesianGraph var65 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.algorithms.AStar var66 = new demo.pathplanning.algorithms.AStar(var65);
    java.lang.String var67 = var65.toString();
    demo.pathplanning.model.CartesianGraph var70 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var73 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var74 = new demo.pathplanning.model.Location(1, 1);
    boolean var76 = var74.equals((java.lang.Object)0L);
    demo.pathplanning.model.Node var77 = var65.getNode(var74);
    demo.pathplanning.model.CartesianGraph var80 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var81 = var80.getXSize();
    demo.pathplanning.algorithms.AStar var82 = new demo.pathplanning.algorithms.AStar(var80);
    demo.pathplanning.model.CartesianGraph var85 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var88 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var89 = new demo.pathplanning.model.Location(1, 1);
    boolean var91 = var89.equals((java.lang.Object)0L);
    demo.pathplanning.model.Node var92 = var80.getNode(var89);
    int var93 = var80.getXSize();
    demo.pathplanning.model.Node var94 = new demo.pathplanning.model.Node(var61, var74, var93);
    boolean var95 = var47.equals((java.lang.Object)var74);
    java.lang.String var96 = var74.toString();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var3 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var4 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var5 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var9 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var11 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var21 + "' != '" + "0,\n"+ "'", var21.equals("0,\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var30 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var31);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var40 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var41 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var42 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var46 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var48 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var52 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var53 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var54 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var58 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var59 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var60 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var62 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var67 + "' != '" + "0,\n"+ "'", var67.equals("0,\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var76 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var77);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var81 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var91 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var92);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var93 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var95 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var96 + "' != '" + "(1,1)"+ "'", var96.equals("(1,1)"));

  }

  public void test198() throws Throwable {

    demo.pathplanning.model.CartesianGraph var2 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var3 = var2.getXSize();
    int var4 = var2.getYSize();
    int var5 = var2.getYSize();
    demo.pathplanning.model.CartesianGraph var8 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var9 = var8.getXSize();
    int var10 = var8.getYSize();
    int var11 = var8.getYSize();
    demo.pathplanning.model.CartesianGraph var12 = new demo.pathplanning.model.CartesianGraph(var5, var11);
    int var13 = var12.getXSize();
    demo.pathplanning.model.CartesianGraph var16 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.algorithms.AStar var17 = new demo.pathplanning.algorithms.AStar(var16);
    java.lang.String var18 = var16.toString();
    demo.pathplanning.model.CartesianGraph var21 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var24 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var25 = new demo.pathplanning.model.Location(1, 1);
    boolean var27 = var25.equals((java.lang.Object)0L);
    demo.pathplanning.model.Node var28 = var16.getNode(var25);
    demo.pathplanning.model.CartesianGraph var31 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var32 = var31.getXSize();
    demo.pathplanning.algorithms.AStar var33 = new demo.pathplanning.algorithms.AStar(var31);
    demo.pathplanning.model.CartesianGraph var36 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var39 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var40 = new demo.pathplanning.model.Location(1, 1);
    boolean var42 = var40.equals((java.lang.Object)0L);
    demo.pathplanning.model.Node var43 = var31.getNode(var40);
    int var44 = var31.getXSize();
    demo.pathplanning.model.Node var45 = new demo.pathplanning.model.Node(var12, var25, var44);
    boolean var47 = var45.equals((java.lang.Object)false);
    java.lang.String var48 = var45.toString();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var3 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var4 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var5 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var9 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var11 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var13 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var18 + "' != '" + "0,\n"+ "'", var18.equals("0,\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var27 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var28);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var32 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var42 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var43);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var44 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var47 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var48 + "' != '" + "(1,1)=1"+ "'", var48.equals("(1,1)=1"));

  }

  public void test199() throws Throwable {

    demo.pathplanning.model.CartesianGraph var2 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var3 = var2.getXSize();
    demo.pathplanning.algorithms.AStar var4 = new demo.pathplanning.algorithms.AStar(var2);
    demo.pathplanning.model.CartesianGraph var7 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var10 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var11 = new demo.pathplanning.model.Location(1, 1);
    boolean var13 = var11.equals((java.lang.Object)0L);
    demo.pathplanning.model.Node var14 = var2.getNode(var11);
    int var15 = var2.getYSize();
    demo.pathplanning.model.CartesianGraph var18 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var19 = var18.getXSize();
    int var20 = var18.getYSize();
    int var21 = var18.getYSize();
    demo.pathplanning.model.CartesianGraph var24 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var25 = new demo.pathplanning.model.Location(var21, 1);
    java.lang.String var26 = var25.toString();
    demo.pathplanning.model.CartesianGraph var29 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var32 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var33 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var36 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var37 = var36.getXSize();
    int var38 = var36.getYSize();
    int var39 = var36.getYSize();
    demo.pathplanning.model.CartesianGraph var42 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var43 = var42.getXSize();
    int var44 = var42.getYSize();
    int var45 = var42.getYSize();
    demo.pathplanning.model.CartesianGraph var46 = new demo.pathplanning.model.CartesianGraph(var39, var45);
    demo.pathplanning.model.CartesianGraph var47 = new demo.pathplanning.model.CartesianGraph(1, var39);
    demo.pathplanning.model.Node var48 = new demo.pathplanning.model.Node(var2, var25, var39);
    java.util.Collection var49 = var48.getNeighbors();
    int var50 = var48.getCost();
    java.util.Collection var51 = var48.getNeighbors();
    java.lang.String var52 = var48.toString();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var3 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var13 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var14);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var15 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var19 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var20 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var21 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var26 + "' != '" + "(1,1)"+ "'", var26.equals("(1,1)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var37 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var38 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var39 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var43 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var44 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var45 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var49);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var50 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var51);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var52 + "' != '" + "(1,1)=1"+ "'", var52.equals("(1,1)=1"));

  }

  public void test200() throws Throwable {

    demo.pathplanning.model.CartesianGraph var2 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.algorithms.AStar var3 = new demo.pathplanning.algorithms.AStar(var2);
    demo.pathplanning.model.CartesianGraph var4 = var3.getGraph();
    demo.pathplanning.model.CartesianGraph var5 = var3.getGraph();
    demo.pathplanning.algorithms.PathPlanningContext var6 = new demo.pathplanning.algorithms.PathPlanningContext((demo.pathplanning.algorithms.PathPlanner)var3);
    demo.pathplanning.model.CartesianGraph var7 = var3.getGraph();
    int var8 = var7.getYSize();
    demo.pathplanning.model.CartesianGraph var11 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var14 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var15 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var18 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var21 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var22 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.Node var23 = new demo.pathplanning.model.Node(var7, var15, 1);
    int var24 = var23.getCost();
    java.util.Collection var25 = var23.getNeighbors();
    java.util.Collection var26 = var23.getNeighbors();
    boolean var28 = var23.equals((java.lang.Object)(-1L));
    int var29 = var23.getCost();
    demo.pathplanning.model.CartesianGraph var32 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var33 = var32.getXSize();
    int var34 = var32.getYSize();
    demo.pathplanning.model.CartesianGraph var37 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.algorithms.AStar var38 = new demo.pathplanning.algorithms.AStar(var37);
    java.lang.String var39 = var37.toString();
    demo.pathplanning.model.CartesianGraph var42 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var45 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var46 = new demo.pathplanning.model.Location(1, 1);
    boolean var48 = var46.equals((java.lang.Object)0L);
    demo.pathplanning.model.Node var49 = var37.getNode(var46);
    demo.pathplanning.model.CartesianGraph var52 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var55 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var56 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var59 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var60 = var59.getXSize();
    demo.pathplanning.model.CartesianGraph var63 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var64 = new demo.pathplanning.model.CartesianGraph(var60, 1);
    demo.pathplanning.model.Location var65 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.Node var66 = new demo.pathplanning.model.Node(var32, var46, 1);
    int var67 = var46.getX();
    demo.pathplanning.model.CartesianGraph var70 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var71 = var70.getXSize();
    demo.pathplanning.model.CartesianGraph var74 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var75 = new demo.pathplanning.model.CartesianGraph(var71, 1);
    boolean var76 = var46.equals((java.lang.Object)var71);
    int var77 = var46.getY();
    int var78 = var46.getY();
    int var79 = var46.getY();
    demo.pathplanning.model.CartesianGraph var80 = new demo.pathplanning.model.CartesianGraph(var29, var79);
    demo.pathplanning.algorithms.AStar var81 = new demo.pathplanning.algorithms.AStar(var80);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var8 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var24 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var25);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var26);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var28 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var29 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var33 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var34 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var39 + "' != '" + "0,\n"+ "'", var39.equals("0,\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var48 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var49);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var60 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var67 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var71 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var76 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var77 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var78 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var79 == 1);

  }

  public void test201() throws Throwable {

    demo.pathplanning.model.CartesianGraph var2 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.algorithms.AStar var3 = new demo.pathplanning.algorithms.AStar(var2);
    demo.pathplanning.model.CartesianGraph var4 = var3.getGraph();
    demo.pathplanning.model.CartesianGraph var5 = var3.getGraph();
    demo.pathplanning.algorithms.PathPlanningContext var6 = new demo.pathplanning.algorithms.PathPlanningContext((demo.pathplanning.algorithms.PathPlanner)var3);
    demo.pathplanning.model.CartesianGraph var7 = var3.getGraph();
    int var8 = var7.getYSize();
    demo.pathplanning.model.CartesianGraph var11 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var14 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var15 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var18 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var21 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var22 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.Node var23 = new demo.pathplanning.model.Node(var7, var15, 1);
    int var24 = var23.getCost();
    demo.pathplanning.model.CartesianGraph var27 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var28 = var27.getXSize();
    int var29 = var27.getYSize();
    int var30 = var27.getYSize();
    demo.pathplanning.model.CartesianGraph var33 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var34 = new demo.pathplanning.model.Location(var30, 1);
    demo.pathplanning.model.CartesianGraph var35 = new demo.pathplanning.model.CartesianGraph(var24, 1);
    demo.pathplanning.model.CartesianGraph var38 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.algorithms.AStar var39 = new demo.pathplanning.algorithms.AStar(var38);
    demo.pathplanning.model.CartesianGraph var40 = var39.getGraph();
    demo.pathplanning.model.CartesianGraph var41 = var39.getGraph();
    demo.pathplanning.algorithms.PathPlanningContext var42 = new demo.pathplanning.algorithms.PathPlanningContext((demo.pathplanning.algorithms.PathPlanner)var39);
    demo.pathplanning.model.CartesianGraph var43 = var39.getGraph();
    int var44 = var43.getYSize();
    demo.pathplanning.model.CartesianGraph var45 = new demo.pathplanning.model.CartesianGraph(1, var44);
    demo.pathplanning.model.CartesianGraph var48 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var49 = var48.getXSize();
    int var50 = var48.getYSize();
    int var51 = var48.getYSize();
    demo.pathplanning.model.CartesianGraph var54 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var55 = var54.getXSize();
    int var56 = var54.getYSize();
    int var57 = var54.getYSize();
    demo.pathplanning.model.CartesianGraph var58 = new demo.pathplanning.model.CartesianGraph(var51, var57);
    demo.pathplanning.model.CartesianGraph var61 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var64 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var65 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var66 = new demo.pathplanning.model.CartesianGraph(var51, 1);
    java.lang.String var67 = var66.toString();
    demo.pathplanning.model.CartesianGraph var70 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var73 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var74 = new demo.pathplanning.model.Location(1, 1);
    boolean var76 = var74.equals((java.lang.Object)0L);
    demo.pathplanning.model.Node var77 = var66.getNode(var74);
    demo.pathplanning.model.CartesianGraph var80 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var83 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var84 = new demo.pathplanning.model.Location(1, 1);
    boolean var86 = var84.equals((java.lang.Object)0L);
    int var87 = var84.getX();
    int var88 = var84.getX();
    demo.pathplanning.model.CartesianGraph var91 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var92 = var91.getXSize();
    demo.pathplanning.model.Node var93 = new demo.pathplanning.model.Node(var66, var84, var92);
    int var94 = var93.getCost();
    demo.pathplanning.model.CartesianGraph var95 = new demo.pathplanning.model.CartesianGraph(var44, var94);
    demo.pathplanning.algorithms.AStar var96 = new demo.pathplanning.algorithms.AStar(var95);
    java.lang.String var97 = var95.toString();
    int var98 = var95.getYSize();
    demo.pathplanning.algorithms.AStar var99 = new demo.pathplanning.algorithms.AStar(var95);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var8 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var24 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var28 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var29 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var30 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var40);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var41);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var43);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var44 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var49 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var50 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var51 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var55 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var56 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var57 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var67 + "' != '" + "0,\n"+ "'", var67.equals("0,\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var76 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var77);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var86 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var87 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var88 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var92 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var94 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var97 + "' != '" + "0,\n"+ "'", var97.equals("0,\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var98 == 1);

  }

  public void test202() throws Throwable {

    demo.pathplanning.model.CartesianGraph var2 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var3 = var2.getXSize();
    demo.pathplanning.algorithms.AStar var4 = new demo.pathplanning.algorithms.AStar(var2);
    demo.pathplanning.model.CartesianGraph var7 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var10 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var11 = new demo.pathplanning.model.Location(1, 1);
    boolean var13 = var11.equals((java.lang.Object)0L);
    demo.pathplanning.model.Node var14 = var2.getNode(var11);
    int var15 = var2.getYSize();
    demo.pathplanning.model.CartesianGraph var18 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var19 = var18.getXSize();
    int var20 = var18.getYSize();
    int var21 = var18.getYSize();
    demo.pathplanning.model.CartesianGraph var24 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var25 = new demo.pathplanning.model.Location(var21, 1);
    java.lang.String var26 = var25.toString();
    demo.pathplanning.model.CartesianGraph var29 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var32 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var33 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var36 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var37 = var36.getXSize();
    int var38 = var36.getYSize();
    int var39 = var36.getYSize();
    demo.pathplanning.model.CartesianGraph var42 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var43 = var42.getXSize();
    int var44 = var42.getYSize();
    int var45 = var42.getYSize();
    demo.pathplanning.model.CartesianGraph var46 = new demo.pathplanning.model.CartesianGraph(var39, var45);
    demo.pathplanning.model.CartesianGraph var47 = new demo.pathplanning.model.CartesianGraph(1, var39);
    demo.pathplanning.model.Node var48 = new demo.pathplanning.model.Node(var2, var25, var39);
    java.lang.String var49 = var25.toString();
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      demo.pathplanning.model.Direction var50 = demo.pathplanning.model.Direction.valueOf(var49);
      fail("Expected exception of type java.lang.IllegalArgumentException");
    } catch (java.lang.IllegalArgumentException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var3 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var13 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var14);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var15 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var19 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var20 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var21 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var26 + "' != '" + "(1,1)"+ "'", var26.equals("(1,1)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var37 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var38 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var39 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var43 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var44 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var45 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var49 + "' != '" + "(1,1)"+ "'", var49.equals("(1,1)"));

  }

  public void test203() throws Throwable {

    demo.pathplanning.model.CartesianGraph var2 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.algorithms.AStar var3 = new demo.pathplanning.algorithms.AStar(var2);
    demo.pathplanning.model.CartesianGraph var4 = var3.getGraph();
    demo.pathplanning.model.CartesianGraph var5 = var3.getGraph();
    demo.pathplanning.algorithms.PathPlanningContext var6 = new demo.pathplanning.algorithms.PathPlanningContext((demo.pathplanning.algorithms.PathPlanner)var3);
    demo.pathplanning.model.CartesianGraph var7 = var3.getGraph();
    int var8 = var7.getYSize();
    demo.pathplanning.model.CartesianGraph var11 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var14 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var15 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var18 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var21 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var22 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.Node var23 = new demo.pathplanning.model.Node(var7, var15, 1);
    java.util.Collection var24 = var23.getNeighbors();
    int var25 = var23.getCost();
    java.util.Collection var26 = var23.getNeighbors();
    demo.pathplanning.model.Location var27 = var23.getLocation();
    java.lang.String var28 = var23.toString();
    demo.pathplanning.model.Location var29 = var23.getLocation();
    demo.pathplanning.model.Location var30 = var23.getLocation();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var8 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var24);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var25 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var26);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var27);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var28 + "' != '" + "(1,1)=1"+ "'", var28.equals("(1,1)=1"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var29);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var30);

  }

  public void test204() throws Throwable {

    demo.pathplanning.model.CartesianGraph var2 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var3 = var2.getXSize();
    int var4 = var2.getYSize();
    int var5 = var2.getYSize();
    demo.pathplanning.model.CartesianGraph var8 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var9 = var8.getXSize();
    int var10 = var8.getYSize();
    int var11 = var8.getYSize();
    demo.pathplanning.model.CartesianGraph var14 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var15 = var14.getXSize();
    int var16 = var14.getYSize();
    int var17 = var14.getYSize();
    demo.pathplanning.model.CartesianGraph var18 = new demo.pathplanning.model.CartesianGraph(var11, var17);
    demo.pathplanning.model.CartesianGraph var21 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var24 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var25 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var26 = new demo.pathplanning.model.CartesianGraph(var11, 1);
    demo.pathplanning.model.CartesianGraph var27 = new demo.pathplanning.model.CartesianGraph(var5, var11);
    demo.pathplanning.model.CartesianGraph var30 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var31 = var30.getXSize();
    int var32 = var30.getYSize();
    int var33 = var30.getYSize();
    demo.pathplanning.model.CartesianGraph var36 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var37 = var36.getXSize();
    int var38 = var36.getYSize();
    int var39 = var36.getYSize();
    demo.pathplanning.model.CartesianGraph var40 = new demo.pathplanning.model.CartesianGraph(var33, var39);
    demo.pathplanning.model.CartesianGraph var43 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var46 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var47 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var48 = new demo.pathplanning.model.CartesianGraph(var33, 1);
    demo.pathplanning.model.CartesianGraph var49 = new demo.pathplanning.model.CartesianGraph(var5, 1);
    demo.pathplanning.algorithms.AStar var50 = new demo.pathplanning.algorithms.AStar(var49);
    int var51 = var49.getYSize();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var3 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var4 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var5 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var9 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var11 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var15 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var16 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var17 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var31 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var32 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var33 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var37 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var38 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var39 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var51 == 1);

  }

  public void test205() throws Throwable {

    demo.pathplanning.model.CartesianGraph var2 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.algorithms.AStar var3 = new demo.pathplanning.algorithms.AStar(var2);
    demo.pathplanning.model.CartesianGraph var4 = var3.getGraph();
    demo.pathplanning.model.CartesianGraph var5 = var3.getGraph();
    demo.pathplanning.algorithms.PathPlanningContext var6 = new demo.pathplanning.algorithms.PathPlanningContext((demo.pathplanning.algorithms.PathPlanner)var3);
    demo.pathplanning.model.CartesianGraph var7 = var3.getGraph();
    int var8 = var7.getYSize();
    demo.pathplanning.model.CartesianGraph var11 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var14 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var15 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var18 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var21 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var22 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.Node var23 = new demo.pathplanning.model.Node(var7, var15, 1);
    java.util.Collection var24 = var23.getNeighbors();
    int var25 = var23.getCost();
    int var26 = var23.getCost();
    java.lang.String var27 = var23.toString();
    demo.pathplanning.model.CartesianGraph var30 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.algorithms.AStar var31 = new demo.pathplanning.algorithms.AStar(var30);
    demo.pathplanning.model.CartesianGraph var32 = var31.getGraph();
    demo.pathplanning.model.CartesianGraph var33 = var31.getGraph();
    demo.pathplanning.algorithms.PathPlanningContext var34 = new demo.pathplanning.algorithms.PathPlanningContext((demo.pathplanning.algorithms.PathPlanner)var31);
    demo.pathplanning.model.CartesianGraph var35 = var31.getGraph();
    int var36 = var35.getYSize();
    demo.pathplanning.model.CartesianGraph var39 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var42 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var43 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var46 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var49 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var50 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.Node var51 = new demo.pathplanning.model.Node(var35, var43, 1);
    java.lang.String var52 = var51.toString();
    boolean var53 = var23.equals((java.lang.Object)var51);
    demo.pathplanning.model.CartesianGraph var56 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.algorithms.AStar var57 = new demo.pathplanning.algorithms.AStar(var56);
    demo.pathplanning.model.CartesianGraph var58 = var57.getGraph();
    demo.pathplanning.model.CartesianGraph var59 = var57.getGraph();
    demo.pathplanning.algorithms.PathPlanningContext var60 = new demo.pathplanning.algorithms.PathPlanningContext((demo.pathplanning.algorithms.PathPlanner)var57);
    demo.pathplanning.model.CartesianGraph var61 = var57.getGraph();
    int var62 = var61.getYSize();
    demo.pathplanning.model.CartesianGraph var65 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var68 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var69 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var72 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var75 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var76 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.Node var77 = new demo.pathplanning.model.Node(var61, var69, 1);
    int var78 = var77.getCost();
    boolean var79 = var23.equals((java.lang.Object)var78);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var8 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var24);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var25 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var26 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var27 + "' != '" + "(1,1)=1"+ "'", var27.equals("(1,1)=1"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var32);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var33);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var35);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var36 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var52 + "' != '" + "(1,1)=1"+ "'", var52.equals("(1,1)=1"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var53 == true);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var58);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var59);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var61);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var62 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var78 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var79 == false);

  }

  public void test206() throws Throwable {

    demo.pathplanning.model.CartesianGraph var2 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var3 = var2.getXSize();
    demo.pathplanning.algorithms.AStar var4 = new demo.pathplanning.algorithms.AStar(var2);
    demo.pathplanning.model.CartesianGraph var7 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var10 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var11 = new demo.pathplanning.model.Location(1, 1);
    boolean var13 = var11.equals((java.lang.Object)0L);
    demo.pathplanning.model.Node var14 = var2.getNode(var11);
    int var15 = var2.getYSize();
    demo.pathplanning.model.CartesianGraph var18 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var19 = var18.getXSize();
    int var20 = var18.getYSize();
    int var21 = var18.getYSize();
    demo.pathplanning.model.CartesianGraph var24 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var25 = new demo.pathplanning.model.Location(var21, 1);
    java.lang.String var26 = var25.toString();
    demo.pathplanning.model.CartesianGraph var29 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var32 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var33 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var36 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var37 = var36.getXSize();
    int var38 = var36.getYSize();
    int var39 = var36.getYSize();
    demo.pathplanning.model.CartesianGraph var42 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var43 = var42.getXSize();
    int var44 = var42.getYSize();
    int var45 = var42.getYSize();
    demo.pathplanning.model.CartesianGraph var46 = new demo.pathplanning.model.CartesianGraph(var39, var45);
    demo.pathplanning.model.CartesianGraph var47 = new demo.pathplanning.model.CartesianGraph(1, var39);
    demo.pathplanning.model.Node var48 = new demo.pathplanning.model.Node(var2, var25, var39);
    demo.pathplanning.model.CartesianGraph var51 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.algorithms.AStar var52 = new demo.pathplanning.algorithms.AStar(var51);
    demo.pathplanning.model.CartesianGraph var53 = var52.getGraph();
    demo.pathplanning.model.CartesianGraph var54 = var52.getGraph();
    demo.pathplanning.algorithms.PathPlanningContext var55 = new demo.pathplanning.algorithms.PathPlanningContext((demo.pathplanning.algorithms.PathPlanner)var52);
    demo.pathplanning.model.CartesianGraph var56 = var52.getGraph();
    int var57 = var56.getYSize();
    demo.pathplanning.model.CartesianGraph var60 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var63 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var64 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var67 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var70 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var71 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.Node var72 = new demo.pathplanning.model.Node(var56, var64, 1);
    demo.pathplanning.model.Node var73 = var2.getNode(var64);
    java.lang.String var74 = var2.toString();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var3 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var13 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var14);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var15 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var19 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var20 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var21 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var26 + "' != '" + "(1,1)"+ "'", var26.equals("(1,1)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var37 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var38 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var39 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var43 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var44 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var45 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var53);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var54);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var56);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var57 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var73);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var74 + "' != '" + "0,\n"+ "'", var74.equals("0,\n"));

  }

  public void test207() throws Throwable {

    demo.pathplanning.model.CartesianGraph var2 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var3 = var2.getXSize();
    demo.pathplanning.algorithms.AStar var4 = new demo.pathplanning.algorithms.AStar(var2);
    demo.pathplanning.model.CartesianGraph var7 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var10 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var11 = new demo.pathplanning.model.Location(1, 1);
    boolean var13 = var11.equals((java.lang.Object)0L);
    demo.pathplanning.model.Node var14 = var2.getNode(var11);
    int var15 = var2.getYSize();
    demo.pathplanning.model.CartesianGraph var18 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var19 = var18.getXSize();
    int var20 = var18.getYSize();
    int var21 = var18.getYSize();
    demo.pathplanning.model.CartesianGraph var24 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var25 = var24.getXSize();
    int var26 = var24.getYSize();
    int var27 = var24.getYSize();
    demo.pathplanning.model.CartesianGraph var28 = new demo.pathplanning.model.CartesianGraph(var21, var27);
    demo.pathplanning.model.CartesianGraph var31 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var34 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var35 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var36 = new demo.pathplanning.model.CartesianGraph(var21, 1);
    int var37 = var36.getXSize();
    demo.pathplanning.model.CartesianGraph var40 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var41 = var40.getXSize();
    int var42 = var40.getYSize();
    int var43 = var40.getYSize();
    demo.pathplanning.model.CartesianGraph var44 = new demo.pathplanning.model.CartesianGraph(var37, var43);
    demo.pathplanning.model.CartesianGraph var45 = new demo.pathplanning.model.CartesianGraph(var15, var37);
    demo.pathplanning.model.CartesianGraph var48 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var49 = var48.getXSize();
    int var50 = var48.getYSize();
    int var51 = var48.getYSize();
    demo.pathplanning.model.CartesianGraph var54 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var55 = var54.getXSize();
    int var56 = var54.getYSize();
    int var57 = var54.getYSize();
    demo.pathplanning.model.CartesianGraph var58 = new demo.pathplanning.model.CartesianGraph(var51, var57);
    demo.pathplanning.model.CartesianGraph var61 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var64 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var65 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var66 = new demo.pathplanning.model.CartesianGraph(var51, 1);
    int var67 = var66.getXSize();
    demo.pathplanning.model.CartesianGraph var70 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var71 = var70.getXSize();
    int var72 = var70.getYSize();
    int var73 = var70.getYSize();
    demo.pathplanning.model.CartesianGraph var74 = new demo.pathplanning.model.CartesianGraph(var67, var73);
    demo.pathplanning.model.CartesianGraph var75 = new demo.pathplanning.model.CartesianGraph(var15, var67);
    java.lang.String var76 = var75.toString();
    demo.pathplanning.model.CartesianGraph var79 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var82 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var83 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var86 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var87 = var86.getXSize();
    demo.pathplanning.model.CartesianGraph var90 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var91 = new demo.pathplanning.model.CartesianGraph(var87, 1);
    demo.pathplanning.model.Location var92 = new demo.pathplanning.model.Location(1, 1);
    int var93 = var92.getX();
    int var94 = var92.getY();
    demo.pathplanning.model.Node var95 = var75.getNode(var92);
    int var96 = var92.getX();
    java.lang.String var97 = var92.toString();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var3 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var13 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var14);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var15 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var19 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var20 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var21 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var25 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var26 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var27 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var37 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var41 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var42 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var43 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var49 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var50 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var51 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var55 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var56 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var57 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var67 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var71 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var72 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var73 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var76 + "' != '" + "0,\n"+ "'", var76.equals("0,\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var87 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var93 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var94 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var95);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var96 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var97 + "' != '" + "(1,1)"+ "'", var97.equals("(1,1)"));

  }

  public void test208() throws Throwable {

    demo.pathplanning.model.CartesianGraph var2 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.algorithms.AStar var3 = new demo.pathplanning.algorithms.AStar(var2);
    demo.pathplanning.model.CartesianGraph var4 = var3.getGraph();
    demo.pathplanning.model.CartesianGraph var5 = var3.getGraph();
    demo.pathplanning.algorithms.PathPlanningContext var6 = new demo.pathplanning.algorithms.PathPlanningContext((demo.pathplanning.algorithms.PathPlanner)var3);
    demo.pathplanning.model.CartesianGraph var7 = var3.getGraph();
    int var8 = var7.getYSize();
    demo.pathplanning.model.CartesianGraph var11 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var14 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var15 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var18 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var21 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var22 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.Node var23 = new demo.pathplanning.model.Node(var7, var15, 1);
    java.util.Collection var24 = var23.getNeighbors();
    int var25 = var23.getCost();
    int var26 = var23.getCost();
    java.lang.String var27 = var23.toString();
    demo.pathplanning.model.CartesianGraph var30 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.algorithms.AStar var31 = new demo.pathplanning.algorithms.AStar(var30);
    demo.pathplanning.model.CartesianGraph var32 = var31.getGraph();
    demo.pathplanning.model.CartesianGraph var33 = var31.getGraph();
    demo.pathplanning.algorithms.PathPlanningContext var34 = new demo.pathplanning.algorithms.PathPlanningContext((demo.pathplanning.algorithms.PathPlanner)var31);
    demo.pathplanning.model.CartesianGraph var35 = var31.getGraph();
    int var36 = var35.getYSize();
    demo.pathplanning.model.CartesianGraph var39 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var42 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var43 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var46 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var49 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var50 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.Node var51 = new demo.pathplanning.model.Node(var35, var43, 1);
    java.lang.String var52 = var51.toString();
    boolean var53 = var23.equals((java.lang.Object)var51);
    java.lang.String var54 = var51.toString();
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      demo.pathplanning.model.Direction var55 = demo.pathplanning.model.Direction.valueOf(var54);
      fail("Expected exception of type java.lang.IllegalArgumentException");
    } catch (java.lang.IllegalArgumentException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var8 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var24);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var25 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var26 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var27 + "' != '" + "(1,1)=1"+ "'", var27.equals("(1,1)=1"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var32);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var33);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var35);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var36 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var52 + "' != '" + "(1,1)=1"+ "'", var52.equals("(1,1)=1"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var53 == true);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var54 + "' != '" + "(1,1)=1"+ "'", var54.equals("(1,1)=1"));

  }

  public void test209() throws Throwable {

    demo.pathplanning.model.CartesianGraph var2 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.algorithms.AStar var3 = new demo.pathplanning.algorithms.AStar(var2);
    demo.pathplanning.model.CartesianGraph var4 = var3.getGraph();
    demo.pathplanning.model.CartesianGraph var5 = var3.getGraph();
    int var6 = var5.getYSize();
    demo.pathplanning.model.CartesianGraph var9 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var10 = var9.getXSize();
    demo.pathplanning.model.CartesianGraph var13 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var14 = new demo.pathplanning.model.CartesianGraph(var10, 1);
    demo.pathplanning.model.CartesianGraph var17 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.algorithms.AStar var18 = new demo.pathplanning.algorithms.AStar(var17);
    demo.pathplanning.model.CartesianGraph var19 = var18.getGraph();
    demo.pathplanning.model.CartesianGraph var20 = var18.getGraph();
    demo.pathplanning.algorithms.PathPlanningContext var21 = new demo.pathplanning.algorithms.PathPlanningContext((demo.pathplanning.algorithms.PathPlanner)var18);
    demo.pathplanning.model.CartesianGraph var22 = var18.getGraph();
    int var23 = var22.getYSize();
    demo.pathplanning.model.CartesianGraph var24 = new demo.pathplanning.model.CartesianGraph(var10, var23);
    demo.pathplanning.model.CartesianGraph var27 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var30 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var31 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var34 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var35 = var34.getXSize();
    demo.pathplanning.model.CartesianGraph var38 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var39 = new demo.pathplanning.model.CartesianGraph(var35, 1);
    demo.pathplanning.model.Location var40 = new demo.pathplanning.model.Location(1, 1);
    int var41 = var40.getX();
    int var42 = var40.getY();
    demo.pathplanning.model.Node var43 = var24.getNode(var40);
    demo.pathplanning.model.Node var44 = var5.getNode(var40);
    demo.pathplanning.model.CartesianGraph var47 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var48 = var47.getXSize();
    demo.pathplanning.model.CartesianGraph var51 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var52 = new demo.pathplanning.model.CartesianGraph(var48, 1);
    demo.pathplanning.model.CartesianGraph var55 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.algorithms.AStar var56 = new demo.pathplanning.algorithms.AStar(var55);
    demo.pathplanning.model.CartesianGraph var57 = var56.getGraph();
    demo.pathplanning.model.CartesianGraph var58 = var56.getGraph();
    demo.pathplanning.algorithms.PathPlanningContext var59 = new demo.pathplanning.algorithms.PathPlanningContext((demo.pathplanning.algorithms.PathPlanner)var56);
    demo.pathplanning.model.CartesianGraph var60 = var56.getGraph();
    int var61 = var60.getYSize();
    demo.pathplanning.model.CartesianGraph var62 = new demo.pathplanning.model.CartesianGraph(var48, var61);
    int var63 = var62.getXSize();
    demo.pathplanning.algorithms.AStar var64 = new demo.pathplanning.algorithms.AStar(var62);
    boolean var65 = var40.equals((java.lang.Object)var62);
    java.lang.String var66 = var62.toString();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var6 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var19);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var20);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var22);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var23 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var35 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var41 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var42 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var43);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var44);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var48 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var57);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var58);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var60);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var61 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var63 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var65 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var66 + "' != '" + "0,\n"+ "'", var66.equals("0,\n"));

  }

  public void test210() throws Throwable {

    demo.pathplanning.model.CartesianGraph var2 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.algorithms.AStar var3 = new demo.pathplanning.algorithms.AStar(var2);
    demo.pathplanning.model.CartesianGraph var4 = var3.getGraph();
    demo.pathplanning.model.CartesianGraph var5 = var3.getGraph();
    demo.pathplanning.algorithms.PathPlanningContext var6 = new demo.pathplanning.algorithms.PathPlanningContext((demo.pathplanning.algorithms.PathPlanner)var3);
    demo.pathplanning.model.CartesianGraph var7 = var3.getGraph();
    int var8 = var7.getYSize();
    demo.pathplanning.model.CartesianGraph var11 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var14 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var15 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var18 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var21 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var22 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.Node var23 = new demo.pathplanning.model.Node(var7, var15, 1);
    int var24 = var23.getCost();
    java.util.Collection var25 = var23.getNeighbors();
    java.util.Collection var26 = var23.getNeighbors();
    demo.pathplanning.model.CartesianGraph var29 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var30 = var29.getXSize();
    int var31 = var29.getYSize();
    int var32 = var29.getYSize();
    demo.pathplanning.model.CartesianGraph var35 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var36 = var35.getXSize();
    int var37 = var35.getYSize();
    int var38 = var35.getYSize();
    demo.pathplanning.model.CartesianGraph var39 = new demo.pathplanning.model.CartesianGraph(var32, var38);
    demo.pathplanning.model.CartesianGraph var42 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var45 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var46 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var47 = new demo.pathplanning.model.CartesianGraph(var32, 1);
    java.lang.String var48 = var47.toString();
    demo.pathplanning.model.CartesianGraph var51 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var54 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var55 = new demo.pathplanning.model.Location(1, 1);
    boolean var57 = var55.equals((java.lang.Object)0L);
    demo.pathplanning.model.Node var58 = var47.getNode(var55);
    demo.pathplanning.model.CartesianGraph var61 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var64 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var65 = new demo.pathplanning.model.Location(1, 1);
    boolean var67 = var65.equals((java.lang.Object)0L);
    int var68 = var65.getX();
    int var69 = var65.getX();
    demo.pathplanning.model.CartesianGraph var72 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var73 = var72.getXSize();
    demo.pathplanning.model.Node var74 = new demo.pathplanning.model.Node(var47, var65, var73);
    int var75 = var74.getCost();
    java.util.Collection var76 = var74.getNeighbors();
    demo.pathplanning.model.CartesianGraph var79 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var80 = var79.getXSize();
    demo.pathplanning.algorithms.AStar var81 = new demo.pathplanning.algorithms.AStar(var79);
    demo.pathplanning.model.CartesianGraph var84 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var87 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var88 = new demo.pathplanning.model.Location(1, 1);
    boolean var90 = var88.equals((java.lang.Object)0L);
    demo.pathplanning.model.Node var91 = var79.getNode(var88);
    demo.pathplanning.algorithms.AStar var92 = new demo.pathplanning.algorithms.AStar(var79);
    demo.pathplanning.model.CartesianGraph var93 = var92.getGraph();
    boolean var94 = var74.equals((java.lang.Object)var92);
    java.lang.String var95 = var74.toString();
    java.lang.String var96 = var74.toString();
    boolean var97 = var23.equals((java.lang.Object)var74);
    demo.pathplanning.model.Location var98 = var74.getLocation();
    int var99 = var74.getCost();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var8 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var24 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var25);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var26);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var30 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var31 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var32 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var36 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var37 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var38 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var48 + "' != '" + "0,\n"+ "'", var48.equals("0,\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var57 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var58);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var67 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var68 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var69 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var73 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var75 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var76);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var80 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var90 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var91);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var93);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var94 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var95 + "' != '" + "(1,1)=1"+ "'", var95.equals("(1,1)=1"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var96 + "' != '" + "(1,1)=1"+ "'", var96.equals("(1,1)=1"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var97 == true);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var98);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var99 == 1);

  }

  public void test211() throws Throwable {

    demo.pathplanning.model.CartesianGraph var2 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var3 = var2.getXSize();
    demo.pathplanning.algorithms.AStar var4 = new demo.pathplanning.algorithms.AStar(var2);
    demo.pathplanning.model.CartesianGraph var7 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var10 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var11 = new demo.pathplanning.model.Location(1, 1);
    boolean var13 = var11.equals((java.lang.Object)0L);
    demo.pathplanning.model.Node var14 = var2.getNode(var11);
    demo.pathplanning.algorithms.AStar var15 = new demo.pathplanning.algorithms.AStar(var2);
    demo.pathplanning.algorithms.PathPlanningContext var16 = new demo.pathplanning.algorithms.PathPlanningContext((demo.pathplanning.algorithms.PathPlanner)var15);
    demo.pathplanning.model.CartesianGraph var17 = var15.getGraph();
    java.lang.String var18 = var17.toString();
    int var19 = var17.getXSize();
    int var20 = var17.getYSize();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var3 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var13 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var14);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var17);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var18 + "' != '" + "0,\n"+ "'", var18.equals("0,\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var19 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var20 == 1);

  }

  public void test212() throws Throwable {

    demo.pathplanning.model.CartesianGraph var2 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var3 = var2.getXSize();
    int var4 = var2.getYSize();
    int var5 = var2.getYSize();
    demo.pathplanning.model.CartesianGraph var8 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var9 = var8.getXSize();
    int var10 = var8.getYSize();
    int var11 = var8.getYSize();
    demo.pathplanning.model.CartesianGraph var12 = new demo.pathplanning.model.CartesianGraph(var5, var11);
    demo.pathplanning.model.CartesianGraph var15 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var18 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var19 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var20 = new demo.pathplanning.model.CartesianGraph(var5, 1);
    java.lang.String var21 = var20.toString();
    demo.pathplanning.model.CartesianGraph var24 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var27 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var28 = new demo.pathplanning.model.Location(1, 1);
    boolean var30 = var28.equals((java.lang.Object)0L);
    demo.pathplanning.model.Node var31 = var20.getNode(var28);
    demo.pathplanning.model.CartesianGraph var34 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var37 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var38 = new demo.pathplanning.model.Location(1, 1);
    boolean var40 = var38.equals((java.lang.Object)0L);
    int var41 = var38.getX();
    int var42 = var38.getX();
    demo.pathplanning.model.CartesianGraph var45 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var46 = var45.getXSize();
    demo.pathplanning.model.Node var47 = new demo.pathplanning.model.Node(var20, var38, var46);
    int var48 = var47.getCost();
    java.util.Collection var49 = var47.getNeighbors();
    demo.pathplanning.model.CartesianGraph var52 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var53 = var52.getXSize();
    demo.pathplanning.algorithms.AStar var54 = new demo.pathplanning.algorithms.AStar(var52);
    demo.pathplanning.model.CartesianGraph var57 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var60 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var61 = new demo.pathplanning.model.Location(1, 1);
    boolean var63 = var61.equals((java.lang.Object)0L);
    demo.pathplanning.model.Node var64 = var52.getNode(var61);
    demo.pathplanning.algorithms.AStar var65 = new demo.pathplanning.algorithms.AStar(var52);
    demo.pathplanning.model.CartesianGraph var66 = var65.getGraph();
    boolean var67 = var47.equals((java.lang.Object)var65);
    java.lang.String var68 = var47.toString();
    java.util.Collection var69 = var47.getNeighbors();
    java.lang.String var70 = var47.toString();
    int var71 = var47.getCost();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var3 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var4 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var5 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var9 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var11 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var21 + "' != '" + "0,\n"+ "'", var21.equals("0,\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var30 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var31);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var40 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var41 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var42 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var46 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var48 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var49);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var53 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var63 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var64);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var66);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var67 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var68 + "' != '" + "(1,1)=1"+ "'", var68.equals("(1,1)=1"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var69);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var70 + "' != '" + "(1,1)=1"+ "'", var70.equals("(1,1)=1"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var71 == 1);

  }

  public void test213() throws Throwable {

    demo.pathplanning.model.CartesianGraph var2 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.algorithms.AStar var3 = new demo.pathplanning.algorithms.AStar(var2);
    demo.pathplanning.algorithms.AStar var4 = new demo.pathplanning.algorithms.AStar(var2);
    demo.pathplanning.algorithms.PathPlanningContext var5 = new demo.pathplanning.algorithms.PathPlanningContext((demo.pathplanning.algorithms.PathPlanner)var4);
    demo.pathplanning.model.CartesianGraph var8 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.algorithms.AStar var9 = new demo.pathplanning.algorithms.AStar(var8);
    java.lang.String var10 = var8.toString();
    demo.pathplanning.model.CartesianGraph var13 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var16 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var17 = new demo.pathplanning.model.Location(1, 1);
    boolean var19 = var17.equals((java.lang.Object)0L);
    demo.pathplanning.model.Node var20 = var8.getNode(var17);
    java.lang.String var21 = var17.toString();
    demo.pathplanning.model.CartesianGraph var24 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.algorithms.AStar var25 = new demo.pathplanning.algorithms.AStar(var24);
    demo.pathplanning.model.CartesianGraph var26 = var25.getGraph();
    demo.pathplanning.model.CartesianGraph var27 = var25.getGraph();
    demo.pathplanning.algorithms.PathPlanningContext var28 = new demo.pathplanning.algorithms.PathPlanningContext((demo.pathplanning.algorithms.PathPlanner)var25);
    demo.pathplanning.model.CartesianGraph var29 = var25.getGraph();
    int var30 = var29.getYSize();
    demo.pathplanning.model.CartesianGraph var33 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var36 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var37 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var40 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var43 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var44 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.Node var45 = new demo.pathplanning.model.Node(var29, var37, 1);
    int var46 = var37.getX();
    int var47 = var37.getX();
    java.util.List var48 = var5.getPath(var17, var37);

  }

  public void test214() throws Throwable {

    demo.pathplanning.model.CartesianGraph var2 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.algorithms.AStar var3 = new demo.pathplanning.algorithms.AStar(var2);
    demo.pathplanning.model.CartesianGraph var4 = var3.getGraph();
    demo.pathplanning.model.CartesianGraph var5 = var3.getGraph();
    demo.pathplanning.algorithms.PathPlanningContext var6 = new demo.pathplanning.algorithms.PathPlanningContext((demo.pathplanning.algorithms.PathPlanner)var3);
    demo.pathplanning.model.CartesianGraph var7 = var3.getGraph();
    int var8 = var7.getYSize();
    demo.pathplanning.model.CartesianGraph var11 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var14 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var15 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var18 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var21 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var22 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.Node var23 = new demo.pathplanning.model.Node(var7, var15, 1);
    int var24 = var7.getYSize();
    demo.pathplanning.algorithms.AStar var25 = new demo.pathplanning.algorithms.AStar(var7);
    java.lang.String var26 = var7.toString();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var8 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var24 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var26 + "' != '" + "0,\n"+ "'", var26.equals("0,\n"));

  }

  public void test215() throws Throwable {

    demo.pathplanning.model.CartesianGraph var2 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var5 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var6 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var9 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var10 = var9.getXSize();
    int var11 = var9.getYSize();
    int var12 = var9.getYSize();
    demo.pathplanning.model.CartesianGraph var15 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var16 = var15.getXSize();
    int var17 = var15.getYSize();
    int var18 = var15.getYSize();
    demo.pathplanning.model.CartesianGraph var19 = new demo.pathplanning.model.CartesianGraph(var12, var18);
    demo.pathplanning.model.CartesianGraph var20 = new demo.pathplanning.model.CartesianGraph(1, var12);
    demo.pathplanning.model.CartesianGraph var23 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var26 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var27 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var30 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var31 = var30.getXSize();
    int var32 = var30.getYSize();
    int var33 = var30.getYSize();
    demo.pathplanning.model.CartesianGraph var36 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var37 = var36.getXSize();
    int var38 = var36.getYSize();
    int var39 = var36.getYSize();
    demo.pathplanning.model.CartesianGraph var40 = new demo.pathplanning.model.CartesianGraph(var33, var39);
    demo.pathplanning.model.CartesianGraph var41 = new demo.pathplanning.model.CartesianGraph(1, var33);
    demo.pathplanning.model.Location var42 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var45 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.algorithms.AStar var46 = new demo.pathplanning.algorithms.AStar(var45);
    demo.pathplanning.model.CartesianGraph var47 = var46.getGraph();
    demo.pathplanning.model.CartesianGraph var48 = var46.getGraph();
    demo.pathplanning.algorithms.PathPlanningContext var49 = new demo.pathplanning.algorithms.PathPlanningContext((demo.pathplanning.algorithms.PathPlanner)var46);
    demo.pathplanning.model.CartesianGraph var50 = var46.getGraph();
    int var51 = var50.getYSize();
    demo.pathplanning.model.CartesianGraph var54 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var57 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var58 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var61 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var64 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var65 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.Node var66 = new demo.pathplanning.model.Node(var50, var58, 1);
    java.util.Collection var67 = var66.getNeighbors();
    int var68 = var66.getCost();
    demo.pathplanning.model.CartesianGraph var69 = new demo.pathplanning.model.CartesianGraph(1, var68);
    int var70 = var69.getYSize();
    int var71 = var69.getXSize();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var11 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var12 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var16 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var17 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var18 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var31 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var32 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var33 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var37 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var38 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var39 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var47);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var48);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var50);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var51 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var67);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var68 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var70 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var71 == 1);

  }

  public void test216() throws Throwable {

    demo.pathplanning.model.CartesianGraph var2 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var5 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var6 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var9 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var10 = var9.getXSize();
    int var11 = var9.getYSize();
    int var12 = var9.getYSize();
    demo.pathplanning.model.CartesianGraph var15 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var16 = var15.getXSize();
    int var17 = var15.getYSize();
    int var18 = var15.getYSize();
    demo.pathplanning.model.CartesianGraph var19 = new demo.pathplanning.model.CartesianGraph(var12, var18);
    demo.pathplanning.model.CartesianGraph var20 = new demo.pathplanning.model.CartesianGraph(1, var12);
    demo.pathplanning.model.CartesianGraph var23 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var24 = var23.getXSize();
    int var25 = var23.getYSize();
    demo.pathplanning.model.CartesianGraph var28 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var29 = var28.getXSize();
    int var30 = var28.getYSize();
    demo.pathplanning.model.CartesianGraph var33 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.algorithms.AStar var34 = new demo.pathplanning.algorithms.AStar(var33);
    java.lang.String var35 = var33.toString();
    demo.pathplanning.model.CartesianGraph var38 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var41 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var42 = new demo.pathplanning.model.Location(1, 1);
    boolean var44 = var42.equals((java.lang.Object)0L);
    demo.pathplanning.model.Node var45 = var33.getNode(var42);
    demo.pathplanning.model.CartesianGraph var48 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var51 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var52 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var55 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var56 = var55.getXSize();
    demo.pathplanning.model.CartesianGraph var59 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var60 = new demo.pathplanning.model.CartesianGraph(var56, 1);
    demo.pathplanning.model.Location var61 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.Node var62 = new demo.pathplanning.model.Node(var28, var42, 1);
    demo.pathplanning.model.CartesianGraph var63 = new demo.pathplanning.model.CartesianGraph(var25, 1);
    demo.pathplanning.model.CartesianGraph var66 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.algorithms.AStar var67 = new demo.pathplanning.algorithms.AStar(var66);
    demo.pathplanning.model.CartesianGraph var68 = var67.getGraph();
    demo.pathplanning.model.CartesianGraph var69 = var67.getGraph();
    demo.pathplanning.algorithms.PathPlanningContext var70 = new demo.pathplanning.algorithms.PathPlanningContext((demo.pathplanning.algorithms.PathPlanner)var67);
    demo.pathplanning.model.CartesianGraph var71 = var67.getGraph();
    int var72 = var71.getYSize();
    demo.pathplanning.model.CartesianGraph var75 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var78 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var79 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var82 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var85 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var86 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.Node var87 = new demo.pathplanning.model.Node(var71, var79, 1);
    java.util.Collection var88 = var87.getNeighbors();
    int var89 = var87.getCost();
    demo.pathplanning.model.Location var90 = new demo.pathplanning.model.Location(1, var89);
    demo.pathplanning.model.Location var91 = new demo.pathplanning.model.Location(var12, var89);
    int var92 = var91.getX();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var11 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var12 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var16 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var17 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var18 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var24 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var25 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var29 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var30 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var35 + "' != '" + "0,\n"+ "'", var35.equals("0,\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var44 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var45);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var56 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var68);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var69);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var71);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var72 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var88);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var89 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var92 == 1);

  }

  public void test217() throws Throwable {

    demo.pathplanning.model.CartesianGraph var2 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var3 = var2.getXSize();
    int var4 = var2.getYSize();
    demo.pathplanning.model.CartesianGraph var7 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.algorithms.AStar var8 = new demo.pathplanning.algorithms.AStar(var7);
    java.lang.String var9 = var7.toString();
    demo.pathplanning.model.CartesianGraph var12 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var15 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var16 = new demo.pathplanning.model.Location(1, 1);
    boolean var18 = var16.equals((java.lang.Object)0L);
    demo.pathplanning.model.Node var19 = var7.getNode(var16);
    demo.pathplanning.model.CartesianGraph var22 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var25 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var26 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var29 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var30 = var29.getXSize();
    demo.pathplanning.model.CartesianGraph var33 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var34 = new demo.pathplanning.model.CartesianGraph(var30, 1);
    demo.pathplanning.model.Location var35 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.Node var36 = new demo.pathplanning.model.Node(var2, var16, 1);
    demo.pathplanning.algorithms.AStar var37 = new demo.pathplanning.algorithms.AStar(var2);
    demo.pathplanning.model.CartesianGraph var38 = var37.getGraph();
    demo.pathplanning.model.CartesianGraph var39 = var37.getGraph();
    int var40 = var39.getXSize();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var3 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var4 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var9 + "' != '" + "0,\n"+ "'", var9.equals("0,\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var18 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var19);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var30 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var38);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var39);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var40 == 1);

  }

  public void test218() throws Throwable {

    demo.pathplanning.model.CartesianGraph var2 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.algorithms.AStar var3 = new demo.pathplanning.algorithms.AStar(var2);
    demo.pathplanning.model.CartesianGraph var4 = var3.getGraph();
    demo.pathplanning.model.CartesianGraph var5 = var3.getGraph();
    demo.pathplanning.algorithms.PathPlanningContext var6 = new demo.pathplanning.algorithms.PathPlanningContext((demo.pathplanning.algorithms.PathPlanner)var3);
    demo.pathplanning.model.CartesianGraph var7 = var3.getGraph();
    int var8 = var7.getYSize();
    demo.pathplanning.model.CartesianGraph var11 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var14 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var15 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var18 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var21 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var22 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.Node var23 = new demo.pathplanning.model.Node(var7, var15, 1);
    demo.pathplanning.model.CartesianGraph var26 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var29 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var30 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var33 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var34 = var33.getXSize();
    int var35 = var33.getYSize();
    int var36 = var33.getYSize();
    demo.pathplanning.model.CartesianGraph var39 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var40 = var39.getXSize();
    int var41 = var39.getYSize();
    int var42 = var39.getYSize();
    demo.pathplanning.model.CartesianGraph var43 = new demo.pathplanning.model.CartesianGraph(var36, var42);
    demo.pathplanning.model.CartesianGraph var44 = new demo.pathplanning.model.CartesianGraph(1, var36);
    demo.pathplanning.model.CartesianGraph var47 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var50 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var51 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var54 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var55 = var54.getXSize();
    int var56 = var54.getYSize();
    int var57 = var54.getYSize();
    demo.pathplanning.model.CartesianGraph var60 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var61 = var60.getXSize();
    int var62 = var60.getYSize();
    int var63 = var60.getYSize();
    demo.pathplanning.model.CartesianGraph var64 = new demo.pathplanning.model.CartesianGraph(var57, var63);
    demo.pathplanning.model.CartesianGraph var65 = new demo.pathplanning.model.CartesianGraph(1, var57);
    demo.pathplanning.model.Location var66 = new demo.pathplanning.model.Location(1, 1);
    boolean var67 = var23.equals((java.lang.Object)1);
    demo.pathplanning.model.Location var68 = var23.getLocation();
    java.util.Collection var69 = var23.getNeighbors();
    demo.pathplanning.model.Location var70 = var23.getLocation();
    int var71 = var70.getX();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var8 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var34 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var35 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var36 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var40 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var41 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var42 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var55 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var56 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var57 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var61 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var62 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var63 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var67 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var68);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var69);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var70);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var71 == 1);

  }

  public void test219() throws Throwable {

    demo.pathplanning.model.CartesianGraph var2 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.algorithms.AStar var3 = new demo.pathplanning.algorithms.AStar(var2);
    demo.pathplanning.model.CartesianGraph var4 = var3.getGraph();
    demo.pathplanning.model.CartesianGraph var5 = var3.getGraph();
    demo.pathplanning.algorithms.PathPlanningContext var6 = new demo.pathplanning.algorithms.PathPlanningContext((demo.pathplanning.algorithms.PathPlanner)var3);
    demo.pathplanning.model.CartesianGraph var7 = var3.getGraph();
    int var8 = var7.getYSize();
    demo.pathplanning.model.CartesianGraph var11 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var14 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var15 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var18 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var21 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var22 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.Node var23 = new demo.pathplanning.model.Node(var7, var15, 1);
    java.util.Collection var24 = var23.getNeighbors();
    int var25 = var23.getCost();
    java.lang.String var26 = var23.toString();
    java.util.Collection var27 = var23.getNeighbors();
    java.util.Collection var28 = var23.getNeighbors();
    java.lang.String var29 = var23.toString();
    java.lang.String var30 = var23.toString();
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      demo.pathplanning.model.Direction var31 = demo.pathplanning.model.Direction.valueOf(var30);
      fail("Expected exception of type java.lang.IllegalArgumentException");
    } catch (java.lang.IllegalArgumentException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var8 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var24);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var25 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var26 + "' != '" + "(1,1)=1"+ "'", var26.equals("(1,1)=1"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var27);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var28);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var29 + "' != '" + "(1,1)=1"+ "'", var29.equals("(1,1)=1"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var30 + "' != '" + "(1,1)=1"+ "'", var30.equals("(1,1)=1"));

  }

  public void test220() throws Throwable {

    demo.pathplanning.model.CartesianGraph var2 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var3 = var2.getXSize();
    demo.pathplanning.algorithms.AStar var4 = new demo.pathplanning.algorithms.AStar(var2);
    demo.pathplanning.model.CartesianGraph var7 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var10 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var11 = new demo.pathplanning.model.Location(1, 1);
    boolean var13 = var11.equals((java.lang.Object)0L);
    demo.pathplanning.model.Node var14 = var2.getNode(var11);
    demo.pathplanning.algorithms.AStar var15 = new demo.pathplanning.algorithms.AStar(var2);
    demo.pathplanning.algorithms.PathPlanningContext var16 = new demo.pathplanning.algorithms.PathPlanningContext((demo.pathplanning.algorithms.PathPlanner)var15);
    demo.pathplanning.model.CartesianGraph var17 = var15.getGraph();
    java.lang.String var18 = var17.toString();
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      demo.pathplanning.model.Direction var19 = demo.pathplanning.model.Direction.valueOf(var18);
      fail("Expected exception of type java.lang.IllegalArgumentException");
    } catch (java.lang.IllegalArgumentException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var3 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var13 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var14);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var17);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var18 + "' != '" + "0,\n"+ "'", var18.equals("0,\n"));

  }

  public void test221() throws Throwable {

    demo.pathplanning.model.CartesianGraph var2 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.algorithms.AStar var3 = new demo.pathplanning.algorithms.AStar(var2);
    java.lang.String var4 = var2.toString();
    demo.pathplanning.model.CartesianGraph var7 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var10 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var11 = new demo.pathplanning.model.Location(1, 1);
    boolean var13 = var11.equals((java.lang.Object)0L);
    int var14 = var11.getX();
    int var15 = var11.getX();
    demo.pathplanning.model.CartesianGraph var18 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.algorithms.AStar var19 = new demo.pathplanning.algorithms.AStar(var18);
    demo.pathplanning.model.CartesianGraph var20 = var19.getGraph();
    demo.pathplanning.model.CartesianGraph var21 = var19.getGraph();
    demo.pathplanning.algorithms.PathPlanningContext var22 = new demo.pathplanning.algorithms.PathPlanningContext((demo.pathplanning.algorithms.PathPlanner)var19);
    demo.pathplanning.model.CartesianGraph var23 = var19.getGraph();
    int var24 = var23.getYSize();
    demo.pathplanning.model.CartesianGraph var27 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var30 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var31 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var34 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var37 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var38 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.Node var39 = new demo.pathplanning.model.Node(var23, var31, 1);
    demo.pathplanning.model.CartesianGraph var42 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var45 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var46 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var49 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var50 = var49.getXSize();
    int var51 = var49.getYSize();
    int var52 = var49.getYSize();
    demo.pathplanning.model.CartesianGraph var55 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var56 = var55.getXSize();
    int var57 = var55.getYSize();
    int var58 = var55.getYSize();
    demo.pathplanning.model.CartesianGraph var59 = new demo.pathplanning.model.CartesianGraph(var52, var58);
    demo.pathplanning.model.CartesianGraph var60 = new demo.pathplanning.model.CartesianGraph(1, var52);
    demo.pathplanning.model.CartesianGraph var61 = new demo.pathplanning.model.CartesianGraph(1, var52);
    demo.pathplanning.model.Node var62 = new demo.pathplanning.model.Node(var2, var11, var52);
    demo.pathplanning.model.CartesianGraph var65 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.algorithms.AStar var66 = new demo.pathplanning.algorithms.AStar(var65);
    demo.pathplanning.model.CartesianGraph var67 = var66.getGraph();
    demo.pathplanning.model.CartesianGraph var68 = var66.getGraph();
    demo.pathplanning.algorithms.PathPlanningContext var69 = new demo.pathplanning.algorithms.PathPlanningContext((demo.pathplanning.algorithms.PathPlanner)var66);
    demo.pathplanning.model.CartesianGraph var70 = var66.getGraph();
    int var71 = var70.getYSize();
    demo.pathplanning.model.CartesianGraph var74 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var77 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var78 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var81 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var84 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var85 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.Node var86 = new demo.pathplanning.model.Node(var70, var78, 1);
    java.util.Collection var87 = var86.getNeighbors();
    int var88 = var86.getCost();
    java.lang.String var89 = var86.toString();
    java.lang.String var90 = var86.toString();
    java.util.Collection var91 = var86.getNeighbors();
    demo.pathplanning.model.Location var92 = var86.getLocation();
    int var93 = var92.getY();
    int var94 = var92.getY();
    demo.pathplanning.model.Node var95 = var2.getNode(var92);
    int var96 = var92.getY();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var4 + "' != '" + "0,\n"+ "'", var4.equals("0,\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var13 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var14 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var15 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var20);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var21);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var23);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var24 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var50 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var51 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var52 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var56 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var57 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var58 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var67);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var68);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var70);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var71 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var87);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var88 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var89 + "' != '" + "(1,1)=1"+ "'", var89.equals("(1,1)=1"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var90 + "' != '" + "(1,1)=1"+ "'", var90.equals("(1,1)=1"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var91);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var92);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var93 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var94 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var95);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var96 == 1);

  }

  public void test222() throws Throwable {

    demo.pathplanning.model.CartesianGraph var2 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.algorithms.AStar var3 = new demo.pathplanning.algorithms.AStar(var2);
    demo.pathplanning.model.CartesianGraph var4 = var3.getGraph();
    demo.pathplanning.model.CartesianGraph var5 = var3.getGraph();
    demo.pathplanning.algorithms.PathPlanningContext var6 = new demo.pathplanning.algorithms.PathPlanningContext((demo.pathplanning.algorithms.PathPlanner)var3);
    demo.pathplanning.model.CartesianGraph var7 = var3.getGraph();
    int var8 = var7.getYSize();
    demo.pathplanning.model.CartesianGraph var11 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var14 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var15 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var18 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var21 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var22 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.Node var23 = new demo.pathplanning.model.Node(var7, var15, 1);
    demo.pathplanning.model.CartesianGraph var26 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var27 = var26.getXSize();
    int var28 = var26.getYSize();
    int var29 = var26.getYSize();
    demo.pathplanning.model.CartesianGraph var32 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var33 = var32.getXSize();
    int var34 = var32.getYSize();
    int var35 = var32.getYSize();
    demo.pathplanning.model.CartesianGraph var36 = new demo.pathplanning.model.CartesianGraph(var29, var35);
    demo.pathplanning.model.CartesianGraph var39 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var42 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var43 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var44 = new demo.pathplanning.model.CartesianGraph(var29, 1);
    java.lang.String var45 = var44.toString();
    demo.pathplanning.model.CartesianGraph var48 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var51 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var52 = new demo.pathplanning.model.Location(1, 1);
    boolean var54 = var52.equals((java.lang.Object)0L);
    demo.pathplanning.model.Node var55 = var44.getNode(var52);
    demo.pathplanning.model.CartesianGraph var58 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var61 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var62 = new demo.pathplanning.model.Location(1, 1);
    boolean var64 = var62.equals((java.lang.Object)0L);
    int var65 = var62.getX();
    int var66 = var62.getX();
    demo.pathplanning.model.CartesianGraph var69 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var70 = var69.getXSize();
    demo.pathplanning.model.Node var71 = new demo.pathplanning.model.Node(var44, var62, var70);
    int var72 = var71.getCost();
    java.util.Collection var73 = var71.getNeighbors();
    demo.pathplanning.model.CartesianGraph var76 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var77 = var76.getXSize();
    demo.pathplanning.algorithms.AStar var78 = new demo.pathplanning.algorithms.AStar(var76);
    demo.pathplanning.model.CartesianGraph var81 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var84 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var85 = new demo.pathplanning.model.Location(1, 1);
    boolean var87 = var85.equals((java.lang.Object)0L);
    demo.pathplanning.model.Node var88 = var76.getNode(var85);
    demo.pathplanning.algorithms.AStar var89 = new demo.pathplanning.algorithms.AStar(var76);
    demo.pathplanning.model.CartesianGraph var90 = var89.getGraph();
    boolean var91 = var71.equals((java.lang.Object)var89);
    java.lang.String var92 = var71.toString();
    boolean var93 = var23.equals((java.lang.Object)var71);
    java.util.Collection var94 = var71.getNeighbors();
    java.lang.String var95 = var71.toString();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var8 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var27 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var28 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var29 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var33 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var34 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var35 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var45 + "' != '" + "0,\n"+ "'", var45.equals("0,\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var54 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var55);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var64 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var65 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var66 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var70 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var72 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var73);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var77 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var87 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var88);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var90);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var91 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var92 + "' != '" + "(1,1)=1"+ "'", var92.equals("(1,1)=1"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var93 == true);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var94);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var95 + "' != '" + "(1,1)=1"+ "'", var95.equals("(1,1)=1"));

  }

  public void test223() throws Throwable {

    demo.pathplanning.model.CartesianGraph var2 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var3 = var2.getXSize();
    demo.pathplanning.algorithms.AStar var4 = new demo.pathplanning.algorithms.AStar(var2);
    demo.pathplanning.model.CartesianGraph var7 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var10 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var11 = new demo.pathplanning.model.Location(1, 1);
    boolean var13 = var11.equals((java.lang.Object)0L);
    demo.pathplanning.model.Node var14 = var2.getNode(var11);
    int var15 = var2.getYSize();
    demo.pathplanning.model.CartesianGraph var18 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var19 = var18.getXSize();
    int var20 = var18.getYSize();
    int var21 = var18.getYSize();
    demo.pathplanning.model.CartesianGraph var24 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var25 = var24.getXSize();
    int var26 = var24.getYSize();
    int var27 = var24.getYSize();
    demo.pathplanning.model.CartesianGraph var28 = new demo.pathplanning.model.CartesianGraph(var21, var27);
    demo.pathplanning.model.CartesianGraph var31 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var34 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var35 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var36 = new demo.pathplanning.model.CartesianGraph(var21, 1);
    int var37 = var36.getXSize();
    demo.pathplanning.model.CartesianGraph var40 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var41 = var40.getXSize();
    int var42 = var40.getYSize();
    int var43 = var40.getYSize();
    demo.pathplanning.model.CartesianGraph var44 = new demo.pathplanning.model.CartesianGraph(var37, var43);
    demo.pathplanning.model.CartesianGraph var45 = new demo.pathplanning.model.CartesianGraph(var15, var37);
    demo.pathplanning.model.CartesianGraph var48 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var49 = var48.getXSize();
    int var50 = var48.getYSize();
    int var51 = var48.getYSize();
    demo.pathplanning.model.CartesianGraph var54 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var55 = var54.getXSize();
    int var56 = var54.getYSize();
    int var57 = var54.getYSize();
    demo.pathplanning.model.CartesianGraph var58 = new demo.pathplanning.model.CartesianGraph(var51, var57);
    demo.pathplanning.model.CartesianGraph var61 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var64 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var65 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var66 = new demo.pathplanning.model.CartesianGraph(var51, 1);
    int var67 = var66.getXSize();
    demo.pathplanning.model.CartesianGraph var70 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var71 = var70.getXSize();
    int var72 = var70.getYSize();
    int var73 = var70.getYSize();
    demo.pathplanning.model.CartesianGraph var74 = new demo.pathplanning.model.CartesianGraph(var67, var73);
    demo.pathplanning.model.CartesianGraph var75 = new demo.pathplanning.model.CartesianGraph(var15, var67);
    java.lang.String var76 = var75.toString();
    demo.pathplanning.model.CartesianGraph var79 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var82 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var83 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var86 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var87 = var86.getXSize();
    demo.pathplanning.model.CartesianGraph var90 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var91 = new demo.pathplanning.model.CartesianGraph(var87, 1);
    demo.pathplanning.model.Location var92 = new demo.pathplanning.model.Location(1, 1);
    int var93 = var92.getX();
    int var94 = var92.getY();
    demo.pathplanning.model.Node var95 = var75.getNode(var92);
    int var96 = var92.getY();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var3 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var13 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var14);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var15 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var19 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var20 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var21 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var25 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var26 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var27 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var37 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var41 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var42 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var43 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var49 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var50 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var51 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var55 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var56 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var57 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var67 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var71 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var72 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var73 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var76 + "' != '" + "0,\n"+ "'", var76.equals("0,\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var87 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var93 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var94 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var95);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var96 == 1);

  }

  public void test224() throws Throwable {

    demo.pathplanning.model.CartesianGraph var2 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var3 = var2.getXSize();
    int var4 = var2.getYSize();
    int var5 = var2.getYSize();
    demo.pathplanning.model.CartesianGraph var8 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var9 = var8.getXSize();
    int var10 = var8.getYSize();
    int var11 = var8.getYSize();
    demo.pathplanning.model.CartesianGraph var12 = new demo.pathplanning.model.CartesianGraph(var5, var11);
    demo.pathplanning.model.CartesianGraph var15 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var18 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var19 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var20 = new demo.pathplanning.model.CartesianGraph(var5, 1);
    int var21 = var20.getXSize();
    demo.pathplanning.model.CartesianGraph var24 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var25 = var24.getXSize();
    int var26 = var24.getYSize();
    int var27 = var24.getYSize();
    demo.pathplanning.model.CartesianGraph var28 = new demo.pathplanning.model.CartesianGraph(var21, var27);
    demo.pathplanning.model.CartesianGraph var31 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var34 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var35 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var38 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var39 = var38.getXSize();
    int var40 = var38.getYSize();
    int var41 = var38.getYSize();
    demo.pathplanning.model.CartesianGraph var44 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var45 = var44.getXSize();
    int var46 = var44.getYSize();
    int var47 = var44.getYSize();
    demo.pathplanning.model.CartesianGraph var48 = new demo.pathplanning.model.CartesianGraph(var41, var47);
    demo.pathplanning.model.CartesianGraph var49 = new demo.pathplanning.model.CartesianGraph(1, var41);
    demo.pathplanning.model.CartesianGraph var52 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var55 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var56 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var59 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var60 = var59.getXSize();
    int var61 = var59.getYSize();
    int var62 = var59.getYSize();
    demo.pathplanning.model.CartesianGraph var65 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var66 = var65.getXSize();
    int var67 = var65.getYSize();
    int var68 = var65.getYSize();
    demo.pathplanning.model.CartesianGraph var69 = new demo.pathplanning.model.CartesianGraph(var62, var68);
    demo.pathplanning.model.CartesianGraph var70 = new demo.pathplanning.model.CartesianGraph(1, var62);
    demo.pathplanning.model.Location var71 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.Location var72 = new demo.pathplanning.model.Location(var21, 1);
    int var73 = var72.getX();
    demo.pathplanning.model.CartesianGraph var76 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var77 = var76.getXSize();
    int var78 = var76.getYSize();
    int var79 = var76.getYSize();
    demo.pathplanning.model.CartesianGraph var82 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var83 = var82.getXSize();
    int var84 = var82.getYSize();
    int var85 = var82.getYSize();
    demo.pathplanning.model.CartesianGraph var86 = new demo.pathplanning.model.CartesianGraph(var79, var85);
    demo.pathplanning.model.CartesianGraph var89 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var92 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var93 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var94 = new demo.pathplanning.model.CartesianGraph(var79, 1);
    demo.pathplanning.model.Location var95 = new demo.pathplanning.model.Location(var73, 1);
    int var96 = var95.getY();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var3 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var4 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var5 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var9 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var11 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var21 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var25 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var26 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var27 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var39 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var40 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var41 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var45 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var46 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var47 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var60 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var61 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var62 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var66 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var67 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var68 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var73 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var77 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var78 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var79 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var83 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var84 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var85 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var96 == 1);

  }

  public void test225() throws Throwable {

    demo.pathplanning.model.CartesianGraph var2 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.algorithms.AStar var3 = new demo.pathplanning.algorithms.AStar(var2);
    demo.pathplanning.model.CartesianGraph var4 = var3.getGraph();
    demo.pathplanning.model.CartesianGraph var5 = var3.getGraph();
    demo.pathplanning.algorithms.PathPlanningContext var6 = new demo.pathplanning.algorithms.PathPlanningContext((demo.pathplanning.algorithms.PathPlanner)var3);
    demo.pathplanning.model.CartesianGraph var7 = var3.getGraph();
    int var8 = var7.getYSize();
    demo.pathplanning.model.CartesianGraph var11 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var14 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var15 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var18 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var21 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var22 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.Node var23 = new demo.pathplanning.model.Node(var7, var15, 1);
    int var24 = var23.getCost();
    demo.pathplanning.model.CartesianGraph var27 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var28 = var27.getXSize();
    int var29 = var27.getYSize();
    int var30 = var27.getYSize();
    demo.pathplanning.model.CartesianGraph var33 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var34 = new demo.pathplanning.model.Location(var30, 1);
    demo.pathplanning.model.CartesianGraph var35 = new demo.pathplanning.model.CartesianGraph(var24, 1);
    demo.pathplanning.model.CartesianGraph var38 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var41 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var42 = new demo.pathplanning.model.Location(1, 1);
    boolean var44 = var42.equals((java.lang.Object)0L);
    demo.pathplanning.model.Node var45 = var35.getNode(var42);
    demo.pathplanning.algorithms.AStar var46 = new demo.pathplanning.algorithms.AStar(var35);
    demo.pathplanning.model.CartesianGraph var49 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var52 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var53 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var56 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var57 = var56.getXSize();
    int var58 = var56.getYSize();
    int var59 = var56.getYSize();
    demo.pathplanning.model.CartesianGraph var62 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var63 = var62.getXSize();
    int var64 = var62.getYSize();
    int var65 = var62.getYSize();
    demo.pathplanning.model.CartesianGraph var66 = new demo.pathplanning.model.CartesianGraph(var59, var65);
    demo.pathplanning.model.CartesianGraph var67 = new demo.pathplanning.model.CartesianGraph(1, var59);
    int var68 = var67.getYSize();
    demo.pathplanning.model.CartesianGraph var71 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var72 = var71.getXSize();
    int var73 = var71.getYSize();
    int var74 = var71.getYSize();
    demo.pathplanning.model.CartesianGraph var77 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var78 = new demo.pathplanning.model.Location(var74, 1);
    java.lang.String var79 = var78.toString();
    demo.pathplanning.model.Node var80 = var67.getNode(var78);
    int var81 = var78.getY();
    java.lang.String var82 = var78.toString();
    int var83 = var78.getX();
    int var84 = var78.getY();
    demo.pathplanning.model.Node var85 = var35.getNode(var78);
    java.lang.String var86 = var35.toString();
    int var87 = var35.getYSize();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var8 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var24 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var28 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var29 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var30 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var44 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var45);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var57 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var58 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var59 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var63 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var64 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var65 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var68 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var72 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var73 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var74 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var79 + "' != '" + "(1,1)"+ "'", var79.equals("(1,1)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var80);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var81 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var82 + "' != '" + "(1,1)"+ "'", var82.equals("(1,1)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var83 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var84 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var85);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var86 + "' != '" + "0,\n"+ "'", var86.equals("0,\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var87 == 1);

  }

  public void test226() throws Throwable {

    demo.pathplanning.model.CartesianGraph var2 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var3 = var2.getXSize();
    int var4 = var2.getYSize();
    int var5 = var2.getYSize();
    demo.pathplanning.model.CartesianGraph var8 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var9 = var8.getXSize();
    int var10 = var8.getYSize();
    int var11 = var8.getYSize();
    demo.pathplanning.model.CartesianGraph var14 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var15 = var14.getXSize();
    int var16 = var14.getYSize();
    int var17 = var14.getYSize();
    demo.pathplanning.model.CartesianGraph var18 = new demo.pathplanning.model.CartesianGraph(var11, var17);
    demo.pathplanning.model.CartesianGraph var21 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var24 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var25 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var26 = new demo.pathplanning.model.CartesianGraph(var11, 1);
    demo.pathplanning.model.CartesianGraph var27 = new demo.pathplanning.model.CartesianGraph(var5, var11);
    demo.pathplanning.model.CartesianGraph var30 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var31 = var30.getXSize();
    int var32 = var30.getYSize();
    int var33 = var30.getYSize();
    demo.pathplanning.model.CartesianGraph var36 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var37 = var36.getXSize();
    int var38 = var36.getYSize();
    int var39 = var36.getYSize();
    demo.pathplanning.model.CartesianGraph var40 = new demo.pathplanning.model.CartesianGraph(var33, var39);
    demo.pathplanning.model.CartesianGraph var43 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var46 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var47 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var48 = new demo.pathplanning.model.CartesianGraph(var33, 1);
    demo.pathplanning.model.CartesianGraph var49 = new demo.pathplanning.model.CartesianGraph(var5, 1);
    demo.pathplanning.algorithms.AStar var50 = new demo.pathplanning.algorithms.AStar(var49);
    demo.pathplanning.model.CartesianGraph var53 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var56 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var57 = new demo.pathplanning.model.Location(1, 1);
    int var58 = var57.getX();
    demo.pathplanning.model.Node var59 = var49.getNode(var57);
    int var60 = var49.getXSize();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var3 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var4 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var5 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var9 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var11 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var15 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var16 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var17 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var31 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var32 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var33 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var37 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var38 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var39 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var58 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var59);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var60 == 1);

  }

  public void test227() throws Throwable {

    demo.pathplanning.model.CartesianGraph var2 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var3 = var2.getXSize();
    int var4 = var2.getYSize();
    int var5 = var2.getYSize();
    demo.pathplanning.model.CartesianGraph var8 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var9 = var8.getXSize();
    int var10 = var8.getYSize();
    int var11 = var8.getYSize();
    demo.pathplanning.model.CartesianGraph var12 = new demo.pathplanning.model.CartesianGraph(var5, var11);
    demo.pathplanning.model.CartesianGraph var15 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var18 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var19 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var20 = new demo.pathplanning.model.CartesianGraph(var5, 1);
    java.lang.String var21 = var20.toString();
    demo.pathplanning.model.CartesianGraph var24 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var27 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var28 = new demo.pathplanning.model.Location(1, 1);
    boolean var30 = var28.equals((java.lang.Object)0L);
    demo.pathplanning.model.Node var31 = var20.getNode(var28);
    demo.pathplanning.model.CartesianGraph var34 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var37 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var38 = new demo.pathplanning.model.Location(1, 1);
    boolean var40 = var38.equals((java.lang.Object)0L);
    int var41 = var38.getX();
    int var42 = var38.getX();
    demo.pathplanning.model.CartesianGraph var45 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var46 = var45.getXSize();
    demo.pathplanning.model.Node var47 = new demo.pathplanning.model.Node(var20, var38, var46);
    int var48 = var47.getCost();
    demo.pathplanning.model.CartesianGraph var51 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var52 = var51.getXSize();
    int var53 = var51.getYSize();
    int var54 = var51.getYSize();
    demo.pathplanning.model.CartesianGraph var57 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var58 = new demo.pathplanning.model.Location(var54, 1);
    java.lang.String var59 = var58.toString();
    boolean var60 = var47.equals((java.lang.Object)var58);
    java.lang.String var61 = var47.toString();
    int var62 = var47.getCost();
    demo.pathplanning.model.Location var63 = var47.getLocation();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var3 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var4 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var5 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var9 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var11 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var21 + "' != '" + "0,\n"+ "'", var21.equals("0,\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var30 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var31);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var40 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var41 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var42 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var46 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var48 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var52 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var53 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var54 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var59 + "' != '" + "(1,1)"+ "'", var59.equals("(1,1)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var60 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var61 + "' != '" + "(1,1)=1"+ "'", var61.equals("(1,1)=1"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var62 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var63);

  }

  public void test228() throws Throwable {

    demo.pathplanning.model.CartesianGraph var2 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var3 = var2.getXSize();
    int var4 = var2.getYSize();
    int var5 = var2.getYSize();
    demo.pathplanning.model.CartesianGraph var8 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var9 = var8.getXSize();
    int var10 = var8.getYSize();
    int var11 = var8.getYSize();
    demo.pathplanning.model.CartesianGraph var12 = new demo.pathplanning.model.CartesianGraph(var5, var11);
    demo.pathplanning.model.CartesianGraph var15 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var18 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var19 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var20 = new demo.pathplanning.model.CartesianGraph(var5, 1);
    int var21 = var20.getXSize();
    demo.pathplanning.model.CartesianGraph var24 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var25 = var24.getXSize();
    int var26 = var24.getYSize();
    int var27 = var24.getYSize();
    demo.pathplanning.model.CartesianGraph var28 = new demo.pathplanning.model.CartesianGraph(var21, var27);
    demo.pathplanning.model.CartesianGraph var31 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var34 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var35 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var38 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var39 = var38.getXSize();
    int var40 = var38.getYSize();
    int var41 = var38.getYSize();
    demo.pathplanning.model.CartesianGraph var44 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var45 = var44.getXSize();
    int var46 = var44.getYSize();
    int var47 = var44.getYSize();
    demo.pathplanning.model.CartesianGraph var48 = new demo.pathplanning.model.CartesianGraph(var41, var47);
    demo.pathplanning.model.CartesianGraph var49 = new demo.pathplanning.model.CartesianGraph(1, var41);
    demo.pathplanning.model.CartesianGraph var52 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var55 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var56 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var59 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var60 = var59.getXSize();
    int var61 = var59.getYSize();
    int var62 = var59.getYSize();
    demo.pathplanning.model.CartesianGraph var65 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var66 = var65.getXSize();
    int var67 = var65.getYSize();
    int var68 = var65.getYSize();
    demo.pathplanning.model.CartesianGraph var69 = new demo.pathplanning.model.CartesianGraph(var62, var68);
    demo.pathplanning.model.CartesianGraph var70 = new demo.pathplanning.model.CartesianGraph(1, var62);
    demo.pathplanning.model.Location var71 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.Location var72 = new demo.pathplanning.model.Location(var21, 1);
    int var73 = var72.getX();
    demo.pathplanning.model.CartesianGraph var76 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var77 = var76.getXSize();
    int var78 = var76.getYSize();
    int var79 = var76.getYSize();
    demo.pathplanning.model.CartesianGraph var82 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var83 = var82.getXSize();
    int var84 = var82.getYSize();
    int var85 = var82.getYSize();
    demo.pathplanning.model.CartesianGraph var86 = new demo.pathplanning.model.CartesianGraph(var79, var85);
    demo.pathplanning.model.Location var87 = new demo.pathplanning.model.Location(var73, var85);
    java.lang.String var88 = var87.toString();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var3 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var4 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var5 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var9 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var11 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var21 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var25 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var26 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var27 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var39 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var40 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var41 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var45 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var46 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var47 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var60 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var61 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var62 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var66 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var67 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var68 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var73 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var77 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var78 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var79 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var83 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var84 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var85 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var88 + "' != '" + "(1,1)"+ "'", var88.equals("(1,1)"));

  }

  public void test229() throws Throwable {

    demo.pathplanning.model.CartesianGraph var2 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var3 = var2.getXSize();
    demo.pathplanning.algorithms.AStar var4 = new demo.pathplanning.algorithms.AStar(var2);
    demo.pathplanning.model.CartesianGraph var7 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var10 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var11 = new demo.pathplanning.model.Location(1, 1);
    boolean var13 = var11.equals((java.lang.Object)0L);
    demo.pathplanning.model.Node var14 = var2.getNode(var11);
    int var15 = var2.getYSize();
    demo.pathplanning.model.CartesianGraph var18 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var19 = var18.getXSize();
    int var20 = var18.getYSize();
    int var21 = var18.getYSize();
    demo.pathplanning.model.CartesianGraph var24 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var25 = new demo.pathplanning.model.Location(var21, 1);
    java.lang.String var26 = var25.toString();
    demo.pathplanning.model.CartesianGraph var29 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var32 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var33 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var36 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var37 = var36.getXSize();
    int var38 = var36.getYSize();
    int var39 = var36.getYSize();
    demo.pathplanning.model.CartesianGraph var42 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var43 = var42.getXSize();
    int var44 = var42.getYSize();
    int var45 = var42.getYSize();
    demo.pathplanning.model.CartesianGraph var46 = new demo.pathplanning.model.CartesianGraph(var39, var45);
    demo.pathplanning.model.CartesianGraph var47 = new demo.pathplanning.model.CartesianGraph(1, var39);
    demo.pathplanning.model.Node var48 = new demo.pathplanning.model.Node(var2, var25, var39);
    demo.pathplanning.model.CartesianGraph var51 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.algorithms.AStar var52 = new demo.pathplanning.algorithms.AStar(var51);
    demo.pathplanning.model.CartesianGraph var53 = var52.getGraph();
    demo.pathplanning.model.CartesianGraph var54 = var52.getGraph();
    demo.pathplanning.algorithms.PathPlanningContext var55 = new demo.pathplanning.algorithms.PathPlanningContext((demo.pathplanning.algorithms.PathPlanner)var52);
    demo.pathplanning.model.CartesianGraph var56 = var52.getGraph();
    int var57 = var56.getYSize();
    demo.pathplanning.model.CartesianGraph var60 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var63 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var64 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var67 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var70 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var71 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.Node var72 = new demo.pathplanning.model.Node(var56, var64, 1);
    demo.pathplanning.model.Node var73 = var2.getNode(var64);
    demo.pathplanning.model.CartesianGraph var76 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.algorithms.AStar var77 = new demo.pathplanning.algorithms.AStar(var76);
    java.lang.String var78 = var76.toString();
    demo.pathplanning.model.CartesianGraph var81 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var84 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var85 = new demo.pathplanning.model.Location(1, 1);
    boolean var87 = var85.equals((java.lang.Object)0L);
    demo.pathplanning.model.Node var88 = var76.getNode(var85);
    demo.pathplanning.model.Node var89 = var2.getNode(var85);
    int var90 = var85.getX();
    int var91 = var85.getY();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var3 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var13 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var14);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var15 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var19 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var20 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var21 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var26 + "' != '" + "(1,1)"+ "'", var26.equals("(1,1)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var37 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var38 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var39 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var43 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var44 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var45 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var53);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var54);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var56);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var57 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var73);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var78 + "' != '" + "0,\n"+ "'", var78.equals("0,\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var87 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var88);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var89);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var90 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var91 == 1);

  }

  public void test230() throws Throwable {

    demo.pathplanning.model.CartesianGraph var2 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var3 = var2.getXSize();
    demo.pathplanning.algorithms.AStar var4 = new demo.pathplanning.algorithms.AStar(var2);
    demo.pathplanning.model.CartesianGraph var7 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var10 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var11 = new demo.pathplanning.model.Location(1, 1);
    boolean var13 = var11.equals((java.lang.Object)0L);
    demo.pathplanning.model.Node var14 = var2.getNode(var11);
    int var15 = var2.getYSize();
    demo.pathplanning.model.CartesianGraph var18 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var19 = var18.getXSize();
    int var20 = var18.getYSize();
    int var21 = var18.getYSize();
    demo.pathplanning.model.CartesianGraph var24 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var25 = new demo.pathplanning.model.Location(var21, 1);
    java.lang.String var26 = var25.toString();
    demo.pathplanning.model.CartesianGraph var29 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var32 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var33 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var36 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var37 = var36.getXSize();
    int var38 = var36.getYSize();
    int var39 = var36.getYSize();
    demo.pathplanning.model.CartesianGraph var42 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var43 = var42.getXSize();
    int var44 = var42.getYSize();
    int var45 = var42.getYSize();
    demo.pathplanning.model.CartesianGraph var46 = new demo.pathplanning.model.CartesianGraph(var39, var45);
    demo.pathplanning.model.CartesianGraph var47 = new demo.pathplanning.model.CartesianGraph(1, var39);
    demo.pathplanning.model.Node var48 = new demo.pathplanning.model.Node(var2, var25, var39);
    java.util.Collection var49 = var48.getNeighbors();
    java.lang.String var50 = var48.toString();
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      demo.pathplanning.model.Direction var51 = demo.pathplanning.model.Direction.valueOf(var50);
      fail("Expected exception of type java.lang.IllegalArgumentException");
    } catch (java.lang.IllegalArgumentException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var3 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var13 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var14);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var15 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var19 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var20 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var21 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var26 + "' != '" + "(1,1)"+ "'", var26.equals("(1,1)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var37 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var38 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var39 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var43 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var44 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var45 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var49);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var50 + "' != '" + "(1,1)=1"+ "'", var50.equals("(1,1)=1"));

  }

  public void test231() throws Throwable {

    demo.pathplanning.model.CartesianGraph var2 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var5 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var6 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var9 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var10 = var9.getXSize();
    int var11 = var9.getYSize();
    int var12 = var9.getYSize();
    demo.pathplanning.model.CartesianGraph var15 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var16 = var15.getXSize();
    int var17 = var15.getYSize();
    int var18 = var15.getYSize();
    demo.pathplanning.model.CartesianGraph var19 = new demo.pathplanning.model.CartesianGraph(var12, var18);
    demo.pathplanning.model.CartesianGraph var20 = new demo.pathplanning.model.CartesianGraph(1, var12);
    int var21 = var20.getYSize();
    demo.pathplanning.model.CartesianGraph var24 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.algorithms.AStar var25 = new demo.pathplanning.algorithms.AStar(var24);
    java.lang.String var26 = var24.toString();
    demo.pathplanning.model.CartesianGraph var29 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var32 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var33 = new demo.pathplanning.model.Location(1, 1);
    boolean var35 = var33.equals((java.lang.Object)0L);
    demo.pathplanning.model.Node var36 = var24.getNode(var33);
    demo.pathplanning.model.CartesianGraph var39 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var40 = var39.getXSize();
    int var41 = var39.getYSize();
    int var42 = var39.getYSize();
    demo.pathplanning.model.CartesianGraph var45 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var46 = var45.getXSize();
    int var47 = var45.getYSize();
    int var48 = var45.getYSize();
    demo.pathplanning.model.CartesianGraph var49 = new demo.pathplanning.model.CartesianGraph(var42, var48);
    demo.pathplanning.model.CartesianGraph var52 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var55 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var56 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var57 = new demo.pathplanning.model.CartesianGraph(var42, 1);
    demo.pathplanning.model.Node var58 = new demo.pathplanning.model.Node(var20, var33, 1);
    demo.pathplanning.model.CartesianGraph var61 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.algorithms.AStar var62 = new demo.pathplanning.algorithms.AStar(var61);
    java.lang.String var63 = var61.toString();
    int var64 = var61.getYSize();
    demo.pathplanning.model.CartesianGraph var65 = new demo.pathplanning.model.CartesianGraph(1, var64);
    demo.pathplanning.algorithms.AStar var66 = new demo.pathplanning.algorithms.AStar(var65);
    demo.pathplanning.model.CartesianGraph var67 = var66.getGraph();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var11 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var12 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var16 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var17 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var18 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var21 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var26 + "' != '" + "0,\n"+ "'", var26.equals("0,\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var35 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var36);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var40 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var41 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var42 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var46 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var47 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var48 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var63 + "' != '" + "0,\n"+ "'", var63.equals("0,\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var64 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var67);

  }

  public void test232() throws Throwable {

    demo.pathplanning.model.CartesianGraph var2 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var5 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var6 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var9 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var10 = var9.getXSize();
    int var11 = var9.getYSize();
    int var12 = var9.getYSize();
    demo.pathplanning.model.CartesianGraph var15 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var16 = var15.getXSize();
    int var17 = var15.getYSize();
    int var18 = var15.getYSize();
    demo.pathplanning.model.CartesianGraph var19 = new demo.pathplanning.model.CartesianGraph(var12, var18);
    demo.pathplanning.model.CartesianGraph var20 = new demo.pathplanning.model.CartesianGraph(1, var12);
    java.lang.String var21 = var20.toString();
    int var22 = var20.getYSize();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var11 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var12 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var16 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var17 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var18 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var21 + "' != '" + "0,\n"+ "'", var21.equals("0,\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var22 == 1);

  }

  public void test233() throws Throwable {

    demo.pathplanning.model.CartesianGraph var2 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var3 = var2.getXSize();
    int var4 = var2.getYSize();
    int var5 = var2.getYSize();
    demo.pathplanning.model.CartesianGraph var8 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var9 = var8.getXSize();
    int var10 = var8.getYSize();
    int var11 = var8.getYSize();
    demo.pathplanning.model.CartesianGraph var12 = new demo.pathplanning.model.CartesianGraph(var5, var11);
    demo.pathplanning.model.CartesianGraph var15 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var18 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var19 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var20 = new demo.pathplanning.model.CartesianGraph(var5, 1);
    int var21 = var20.getXSize();
    demo.pathplanning.model.CartesianGraph var24 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var27 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var28 = new demo.pathplanning.model.Location(1, 1);
    int var29 = var28.getY();
    demo.pathplanning.model.CartesianGraph var32 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var33 = var32.getXSize();
    int var34 = var32.getYSize();
    demo.pathplanning.model.CartesianGraph var37 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var38 = var37.getXSize();
    int var39 = var37.getYSize();
    demo.pathplanning.model.CartesianGraph var42 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.algorithms.AStar var43 = new demo.pathplanning.algorithms.AStar(var42);
    java.lang.String var44 = var42.toString();
    demo.pathplanning.model.CartesianGraph var47 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var50 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var51 = new demo.pathplanning.model.Location(1, 1);
    boolean var53 = var51.equals((java.lang.Object)0L);
    demo.pathplanning.model.Node var54 = var42.getNode(var51);
    demo.pathplanning.model.CartesianGraph var57 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var60 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var61 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var64 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var65 = var64.getXSize();
    demo.pathplanning.model.CartesianGraph var68 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var69 = new demo.pathplanning.model.CartesianGraph(var65, 1);
    demo.pathplanning.model.Location var70 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.Node var71 = new demo.pathplanning.model.Node(var37, var51, 1);
    demo.pathplanning.model.CartesianGraph var72 = new demo.pathplanning.model.CartesianGraph(var34, 1);
    demo.pathplanning.model.Node var73 = new demo.pathplanning.model.Node(var20, var28, 1);
    demo.pathplanning.model.CartesianGraph var76 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var79 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var80 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.Location var82 = new demo.pathplanning.model.Location(1, (-1));
    demo.pathplanning.model.CartesianGraph var83 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var84 = var83.getXSize();
    demo.pathplanning.algorithms.AStar var85 = new demo.pathplanning.algorithms.AStar(var83);
    int var86 = var83.getYSize();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var3 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var4 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var5 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var9 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var11 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var21 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var29 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var33 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var34 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var38 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var39 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var44 + "' != '" + "0,\n"+ "'", var44.equals("0,\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var53 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var54);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var65 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var84 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var86 == 1);

  }

  public void test234() throws Throwable {

    demo.pathplanning.model.CartesianGraph var2 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var3 = var2.getXSize();
    int var4 = var2.getYSize();
    int var5 = var2.getYSize();
    demo.pathplanning.model.CartesianGraph var8 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var9 = var8.getXSize();
    int var10 = var8.getYSize();
    int var11 = var8.getYSize();
    demo.pathplanning.model.CartesianGraph var12 = new demo.pathplanning.model.CartesianGraph(var5, var11);
    int var13 = var12.getXSize();
    demo.pathplanning.model.CartesianGraph var16 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.algorithms.AStar var17 = new demo.pathplanning.algorithms.AStar(var16);
    java.lang.String var18 = var16.toString();
    demo.pathplanning.model.CartesianGraph var21 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var24 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var25 = new demo.pathplanning.model.Location(1, 1);
    boolean var27 = var25.equals((java.lang.Object)0L);
    demo.pathplanning.model.Node var28 = var16.getNode(var25);
    demo.pathplanning.model.CartesianGraph var31 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var32 = var31.getXSize();
    demo.pathplanning.algorithms.AStar var33 = new demo.pathplanning.algorithms.AStar(var31);
    demo.pathplanning.model.CartesianGraph var36 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var39 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var40 = new demo.pathplanning.model.Location(1, 1);
    boolean var42 = var40.equals((java.lang.Object)0L);
    demo.pathplanning.model.Node var43 = var31.getNode(var40);
    int var44 = var31.getXSize();
    demo.pathplanning.model.Node var45 = new demo.pathplanning.model.Node(var12, var25, var44);
    java.lang.String var46 = var25.toString();
    java.lang.String var47 = var25.toString();
    java.lang.String var48 = var25.toString();
    java.lang.String var49 = var25.toString();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var3 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var4 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var5 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var9 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var11 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var13 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var18 + "' != '" + "0,\n"+ "'", var18.equals("0,\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var27 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var28);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var32 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var42 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var43);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var44 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var46 + "' != '" + "(1,1)"+ "'", var46.equals("(1,1)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var47 + "' != '" + "(1,1)"+ "'", var47.equals("(1,1)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var48 + "' != '" + "(1,1)"+ "'", var48.equals("(1,1)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var49 + "' != '" + "(1,1)"+ "'", var49.equals("(1,1)"));

  }

  public void test235() throws Throwable {

    demo.pathplanning.model.CartesianGraph var2 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var3 = var2.getXSize();
    int var4 = var2.getYSize();
    int var5 = var2.getYSize();
    demo.pathplanning.model.CartesianGraph var8 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var9 = var8.getXSize();
    int var10 = var8.getYSize();
    int var11 = var8.getYSize();
    demo.pathplanning.model.CartesianGraph var12 = new demo.pathplanning.model.CartesianGraph(var5, var11);
    demo.pathplanning.model.CartesianGraph var15 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var18 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var19 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var20 = new demo.pathplanning.model.CartesianGraph(var5, 1);
    int var21 = var20.getXSize();
    demo.pathplanning.model.CartesianGraph var24 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var25 = var24.getXSize();
    int var26 = var24.getYSize();
    int var27 = var24.getYSize();
    demo.pathplanning.model.CartesianGraph var28 = new demo.pathplanning.model.CartesianGraph(var21, var27);
    int var29 = var28.getYSize();
    int var30 = var28.getYSize();
    java.lang.String var31 = var28.toString();
    demo.pathplanning.algorithms.AStar var32 = new demo.pathplanning.algorithms.AStar(var28);
    int var33 = var28.getXSize();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var3 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var4 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var5 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var9 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var11 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var21 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var25 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var26 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var27 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var29 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var30 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var31 + "' != '" + "0,\n"+ "'", var31.equals("0,\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var33 == 1);

  }

  public void test236() throws Throwable {

    demo.pathplanning.model.CartesianGraph var2 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var3 = var2.getXSize();
    demo.pathplanning.algorithms.AStar var4 = new demo.pathplanning.algorithms.AStar(var2);
    demo.pathplanning.model.CartesianGraph var7 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var10 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var11 = new demo.pathplanning.model.Location(1, 1);
    boolean var13 = var11.equals((java.lang.Object)0L);
    demo.pathplanning.model.Node var14 = var2.getNode(var11);
    int var15 = var2.getYSize();
    demo.pathplanning.model.CartesianGraph var18 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var19 = var18.getXSize();
    int var20 = var18.getYSize();
    int var21 = var18.getYSize();
    demo.pathplanning.model.CartesianGraph var24 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var25 = new demo.pathplanning.model.Location(var21, 1);
    java.lang.String var26 = var25.toString();
    demo.pathplanning.model.CartesianGraph var29 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var32 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var33 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var36 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var37 = var36.getXSize();
    int var38 = var36.getYSize();
    int var39 = var36.getYSize();
    demo.pathplanning.model.CartesianGraph var42 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var43 = var42.getXSize();
    int var44 = var42.getYSize();
    int var45 = var42.getYSize();
    demo.pathplanning.model.CartesianGraph var46 = new demo.pathplanning.model.CartesianGraph(var39, var45);
    demo.pathplanning.model.CartesianGraph var47 = new demo.pathplanning.model.CartesianGraph(1, var39);
    demo.pathplanning.model.Node var48 = new demo.pathplanning.model.Node(var2, var25, var39);
    demo.pathplanning.model.CartesianGraph var51 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.algorithms.AStar var52 = new demo.pathplanning.algorithms.AStar(var51);
    demo.pathplanning.model.CartesianGraph var53 = var52.getGraph();
    demo.pathplanning.model.CartesianGraph var54 = var52.getGraph();
    demo.pathplanning.algorithms.PathPlanningContext var55 = new demo.pathplanning.algorithms.PathPlanningContext((demo.pathplanning.algorithms.PathPlanner)var52);
    demo.pathplanning.model.CartesianGraph var56 = var52.getGraph();
    int var57 = var56.getYSize();
    demo.pathplanning.model.CartesianGraph var60 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var63 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var64 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var67 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var70 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var71 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.Node var72 = new demo.pathplanning.model.Node(var56, var64, 1);
    demo.pathplanning.model.Node var73 = var2.getNode(var64);
    java.lang.String var74 = var64.toString();
    int var75 = var64.getY();
    java.lang.String var76 = var64.toString();
    int var77 = var64.getX();
    java.lang.String var78 = var64.toString();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var3 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var13 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var14);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var15 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var19 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var20 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var21 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var26 + "' != '" + "(1,1)"+ "'", var26.equals("(1,1)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var37 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var38 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var39 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var43 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var44 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var45 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var53);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var54);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var56);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var57 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var73);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var74 + "' != '" + "(1,1)"+ "'", var74.equals("(1,1)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var75 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var76 + "' != '" + "(1,1)"+ "'", var76.equals("(1,1)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var77 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var78 + "' != '" + "(1,1)"+ "'", var78.equals("(1,1)"));

  }

  public void test237() throws Throwable {

    demo.pathplanning.model.CartesianGraph var2 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.algorithms.AStar var3 = new demo.pathplanning.algorithms.AStar(var2);
    demo.pathplanning.model.CartesianGraph var4 = var3.getGraph();
    demo.pathplanning.model.CartesianGraph var5 = var3.getGraph();
    demo.pathplanning.algorithms.PathPlanningContext var6 = new demo.pathplanning.algorithms.PathPlanningContext((demo.pathplanning.algorithms.PathPlanner)var3);
    demo.pathplanning.model.CartesianGraph var7 = var3.getGraph();
    int var8 = var7.getYSize();
    demo.pathplanning.model.CartesianGraph var11 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var14 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var15 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var18 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var21 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var22 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.Node var23 = new demo.pathplanning.model.Node(var7, var15, 1);
    demo.pathplanning.model.CartesianGraph var26 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var29 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var30 = new demo.pathplanning.model.Location(1, 1);
    int var31 = var30.getX();
    demo.pathplanning.model.CartesianGraph var34 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var37 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var38 = new demo.pathplanning.model.Location(1, 1);
    boolean var40 = var38.equals((java.lang.Object)0L);
    int var41 = var38.getX();
    int var42 = var38.getX();
    int var43 = var38.getY();
    demo.pathplanning.model.CartesianGraph var46 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var47 = var46.getXSize();
    demo.pathplanning.algorithms.AStar var48 = new demo.pathplanning.algorithms.AStar(var46);
    demo.pathplanning.model.CartesianGraph var51 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var54 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var55 = new demo.pathplanning.model.Location(1, 1);
    boolean var57 = var55.equals((java.lang.Object)0L);
    demo.pathplanning.model.Node var58 = var46.getNode(var55);
    boolean var59 = var38.equals((java.lang.Object)var55);
    int var60 = var55.getY();
    boolean var61 = var30.equals((java.lang.Object)var55);
    int var62 = var55.getY();
    java.lang.String var63 = var55.toString();
    demo.pathplanning.model.Node var64 = var7.getNode(var55);
    int var65 = var7.getYSize();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var8 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var31 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var40 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var41 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var42 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var43 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var47 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var57 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var58);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var59 == true);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var60 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var61 == true);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var62 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var63 + "' != '" + "(1,1)"+ "'", var63.equals("(1,1)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var64);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var65 == 1);

  }

  public void test238() throws Throwable {

    demo.pathplanning.model.CartesianGraph var2 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var3 = var2.getXSize();
    demo.pathplanning.algorithms.AStar var4 = new demo.pathplanning.algorithms.AStar(var2);
    demo.pathplanning.model.CartesianGraph var7 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var10 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var11 = new demo.pathplanning.model.Location(1, 1);
    boolean var13 = var11.equals((java.lang.Object)0L);
    demo.pathplanning.model.Node var14 = var2.getNode(var11);
    int var15 = var11.getY();
    int var16 = var11.getY();
    java.lang.String var17 = var11.toString();
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      demo.pathplanning.model.Direction var18 = demo.pathplanning.model.Direction.valueOf(var17);
      fail("Expected exception of type java.lang.IllegalArgumentException");
    } catch (java.lang.IllegalArgumentException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var3 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var13 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var14);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var15 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var16 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var17 + "' != '" + "(1,1)"+ "'", var17.equals("(1,1)"));

  }

  public void test239() throws Throwable {

    demo.pathplanning.model.CartesianGraph var2 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var3 = var2.getXSize();
    int var4 = var2.getYSize();
    int var5 = var2.getYSize();
    demo.pathplanning.model.CartesianGraph var8 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var9 = var8.getXSize();
    int var10 = var8.getYSize();
    int var11 = var8.getYSize();
    demo.pathplanning.model.CartesianGraph var12 = new demo.pathplanning.model.CartesianGraph(var5, var11);
    demo.pathplanning.model.CartesianGraph var15 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var18 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var19 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var20 = new demo.pathplanning.model.CartesianGraph(var5, 1);
    int var21 = var20.getXSize();
    demo.pathplanning.model.CartesianGraph var24 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var25 = var24.getXSize();
    int var26 = var24.getYSize();
    int var27 = var24.getYSize();
    demo.pathplanning.model.CartesianGraph var28 = new demo.pathplanning.model.CartesianGraph(var21, var27);
    demo.pathplanning.model.CartesianGraph var31 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var34 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var35 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var38 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var39 = var38.getXSize();
    int var40 = var38.getYSize();
    int var41 = var38.getYSize();
    demo.pathplanning.model.CartesianGraph var44 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var45 = var44.getXSize();
    int var46 = var44.getYSize();
    int var47 = var44.getYSize();
    demo.pathplanning.model.CartesianGraph var48 = new demo.pathplanning.model.CartesianGraph(var41, var47);
    demo.pathplanning.model.CartesianGraph var49 = new demo.pathplanning.model.CartesianGraph(1, var41);
    demo.pathplanning.model.CartesianGraph var52 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var55 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var56 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var59 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var60 = var59.getXSize();
    int var61 = var59.getYSize();
    int var62 = var59.getYSize();
    demo.pathplanning.model.CartesianGraph var65 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var66 = var65.getXSize();
    int var67 = var65.getYSize();
    int var68 = var65.getYSize();
    demo.pathplanning.model.CartesianGraph var69 = new demo.pathplanning.model.CartesianGraph(var62, var68);
    demo.pathplanning.model.CartesianGraph var70 = new demo.pathplanning.model.CartesianGraph(1, var62);
    demo.pathplanning.model.Location var71 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.Location var72 = new demo.pathplanning.model.Location(var21, 1);
    int var73 = var72.getX();
    java.lang.String var74 = var72.toString();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var3 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var4 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var5 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var9 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var11 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var21 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var25 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var26 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var27 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var39 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var40 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var41 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var45 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var46 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var47 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var60 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var61 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var62 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var66 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var67 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var68 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var73 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var74 + "' != '" + "(1,1)"+ "'", var74.equals("(1,1)"));

  }

  public void test240() throws Throwable {

    demo.pathplanning.model.CartesianGraph var2 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var3 = var2.getXSize();
    int var4 = var2.getYSize();
    demo.pathplanning.model.CartesianGraph var7 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.algorithms.AStar var8 = new demo.pathplanning.algorithms.AStar(var7);
    java.lang.String var9 = var7.toString();
    demo.pathplanning.model.CartesianGraph var12 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var15 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var16 = new demo.pathplanning.model.Location(1, 1);
    boolean var18 = var16.equals((java.lang.Object)0L);
    demo.pathplanning.model.Node var19 = var7.getNode(var16);
    demo.pathplanning.model.CartesianGraph var22 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var25 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var26 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var29 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var30 = var29.getXSize();
    demo.pathplanning.model.CartesianGraph var33 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var34 = new demo.pathplanning.model.CartesianGraph(var30, 1);
    demo.pathplanning.model.Location var35 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.Node var36 = new demo.pathplanning.model.Node(var2, var16, 1);
    int var37 = var16.getX();
    demo.pathplanning.model.CartesianGraph var40 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var41 = var40.getXSize();
    demo.pathplanning.model.CartesianGraph var44 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var45 = new demo.pathplanning.model.CartesianGraph(var41, 1);
    int var46 = var45.getYSize();
    boolean var47 = var16.equals((java.lang.Object)var46);
    int var48 = var16.getY();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var3 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var4 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var9 + "' != '" + "0,\n"+ "'", var9.equals("0,\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var18 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var19);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var30 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var37 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var41 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var46 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var47 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var48 == 1);

  }

  public void test241() throws Throwable {

    demo.pathplanning.model.CartesianGraph var2 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.algorithms.AStar var3 = new demo.pathplanning.algorithms.AStar(var2);
    demo.pathplanning.model.CartesianGraph var4 = var3.getGraph();
    demo.pathplanning.algorithms.PathPlanningContext var5 = new demo.pathplanning.algorithms.PathPlanningContext((demo.pathplanning.algorithms.PathPlanner)var3);
    demo.pathplanning.model.CartesianGraph var6 = var3.getGraph();
    demo.pathplanning.algorithms.PathPlanningContext var7 = new demo.pathplanning.algorithms.PathPlanningContext((demo.pathplanning.algorithms.PathPlanner)var3);
    demo.pathplanning.algorithms.PathPlanningContext var8 = new demo.pathplanning.algorithms.PathPlanningContext((demo.pathplanning.algorithms.PathPlanner)var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var6);

  }

  public void test242() throws Throwable {

    demo.pathplanning.model.CartesianGraph var2 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var5 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var6 = new demo.pathplanning.model.Location(1, 1);
    boolean var8 = var6.equals((java.lang.Object)0L);
    int var9 = var6.getX();
    int var10 = var6.getX();
    int var11 = var6.getY();
    demo.pathplanning.model.CartesianGraph var14 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var15 = var14.getXSize();
    int var16 = var14.getYSize();
    int var17 = var14.getYSize();
    demo.pathplanning.model.CartesianGraph var20 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var21 = var20.getXSize();
    int var22 = var20.getYSize();
    int var23 = var20.getYSize();
    demo.pathplanning.model.CartesianGraph var24 = new demo.pathplanning.model.CartesianGraph(var17, var23);
    demo.pathplanning.model.CartesianGraph var27 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var30 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var31 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var32 = new demo.pathplanning.model.CartesianGraph(var17, 1);
    int var33 = var32.getXSize();
    demo.pathplanning.model.CartesianGraph var36 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var37 = var36.getXSize();
    int var38 = var36.getYSize();
    int var39 = var36.getYSize();
    demo.pathplanning.model.CartesianGraph var40 = new demo.pathplanning.model.CartesianGraph(var33, var39);
    int var41 = var40.getYSize();
    int var42 = var40.getYSize();
    demo.pathplanning.model.Location var43 = new demo.pathplanning.model.Location(var11, var42);
    java.lang.String var44 = var43.toString();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var9 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var11 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var15 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var16 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var17 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var21 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var22 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var23 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var33 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var37 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var38 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var39 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var41 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var42 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var44 + "' != '" + "(1,1)"+ "'", var44.equals("(1,1)"));

  }

  public void test243() throws Throwable {

    demo.pathplanning.model.CartesianGraph var2 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var3 = var2.getXSize();
    int var4 = var2.getYSize();
    demo.pathplanning.model.CartesianGraph var7 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.algorithms.AStar var8 = new demo.pathplanning.algorithms.AStar(var7);
    java.lang.String var9 = var7.toString();
    demo.pathplanning.model.CartesianGraph var12 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var15 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var16 = new demo.pathplanning.model.Location(1, 1);
    boolean var18 = var16.equals((java.lang.Object)0L);
    demo.pathplanning.model.Node var19 = var7.getNode(var16);
    demo.pathplanning.model.CartesianGraph var22 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var25 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var26 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var29 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var30 = var29.getXSize();
    demo.pathplanning.model.CartesianGraph var33 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var34 = new demo.pathplanning.model.CartesianGraph(var30, 1);
    demo.pathplanning.model.Location var35 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.Node var36 = new demo.pathplanning.model.Node(var2, var16, 1);
    int var37 = var16.getX();
    demo.pathplanning.model.CartesianGraph var40 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var41 = var40.getXSize();
    demo.pathplanning.model.CartesianGraph var44 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var45 = new demo.pathplanning.model.CartesianGraph(var41, 1);
    boolean var46 = var16.equals((java.lang.Object)var41);
    int var47 = var16.getY();
    int var48 = var16.getY();
    int var49 = var16.getY();
    demo.pathplanning.model.CartesianGraph var52 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var53 = var52.getXSize();
    int var54 = var52.getYSize();
    demo.pathplanning.model.CartesianGraph var57 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var58 = var57.getXSize();
    int var59 = var57.getYSize();
    demo.pathplanning.model.CartesianGraph var62 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.algorithms.AStar var63 = new demo.pathplanning.algorithms.AStar(var62);
    java.lang.String var64 = var62.toString();
    demo.pathplanning.model.CartesianGraph var67 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var70 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var71 = new demo.pathplanning.model.Location(1, 1);
    boolean var73 = var71.equals((java.lang.Object)0L);
    demo.pathplanning.model.Node var74 = var62.getNode(var71);
    demo.pathplanning.model.CartesianGraph var77 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var80 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var81 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var84 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var85 = var84.getXSize();
    demo.pathplanning.model.CartesianGraph var88 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var89 = new demo.pathplanning.model.CartesianGraph(var85, 1);
    demo.pathplanning.model.Location var90 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.Node var91 = new demo.pathplanning.model.Node(var57, var71, 1);
    demo.pathplanning.model.CartesianGraph var92 = new demo.pathplanning.model.CartesianGraph(var54, 1);
    boolean var93 = var16.equals((java.lang.Object)var92);
    java.lang.String var94 = var92.toString();
    java.lang.String var95 = var92.toString();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var3 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var4 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var9 + "' != '" + "0,\n"+ "'", var9.equals("0,\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var18 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var19);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var30 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var37 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var41 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var46 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var47 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var48 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var49 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var53 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var54 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var58 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var59 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var64 + "' != '" + "0,\n"+ "'", var64.equals("0,\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var73 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var74);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var85 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var93 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var94 + "' != '" + "0,\n"+ "'", var94.equals("0,\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var95 + "' != '" + "0,\n"+ "'", var95.equals("0,\n"));

  }

  public void test244() throws Throwable {

    demo.pathplanning.model.CartesianGraph var2 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var5 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var6 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var9 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var10 = var9.getXSize();
    int var11 = var9.getYSize();
    int var12 = var9.getYSize();
    demo.pathplanning.model.CartesianGraph var15 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var16 = var15.getXSize();
    int var17 = var15.getYSize();
    int var18 = var15.getYSize();
    demo.pathplanning.model.CartesianGraph var19 = new demo.pathplanning.model.CartesianGraph(var12, var18);
    demo.pathplanning.model.CartesianGraph var20 = new demo.pathplanning.model.CartesianGraph(1, var12);
    int var21 = var20.getYSize();
    demo.pathplanning.model.CartesianGraph var24 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var25 = var24.getXSize();
    int var26 = var24.getYSize();
    int var27 = var24.getYSize();
    demo.pathplanning.model.CartesianGraph var30 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var31 = new demo.pathplanning.model.Location(var27, 1);
    java.lang.String var32 = var31.toString();
    demo.pathplanning.model.Node var33 = var20.getNode(var31);
    demo.pathplanning.algorithms.AStar var34 = new demo.pathplanning.algorithms.AStar(var20);
    demo.pathplanning.algorithms.PathPlanningContext var35 = new demo.pathplanning.algorithms.PathPlanningContext((demo.pathplanning.algorithms.PathPlanner)var34);
    demo.pathplanning.model.CartesianGraph var38 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var41 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var42 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var45 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var46 = var45.getXSize();
    demo.pathplanning.model.CartesianGraph var49 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var50 = new demo.pathplanning.model.CartesianGraph(var46, 1);
    demo.pathplanning.model.Location var51 = new demo.pathplanning.model.Location(1, 1);
    int var52 = var51.getX();
    int var53 = var51.getY();
    demo.pathplanning.model.CartesianGraph var56 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.algorithms.AStar var57 = new demo.pathplanning.algorithms.AStar(var56);
    boolean var58 = var51.equals((java.lang.Object)var57);
    int var59 = var51.getY();
    demo.pathplanning.model.CartesianGraph var62 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.algorithms.AStar var63 = new demo.pathplanning.algorithms.AStar(var62);
    demo.pathplanning.model.CartesianGraph var64 = var63.getGraph();
    demo.pathplanning.model.CartesianGraph var65 = var63.getGraph();
    demo.pathplanning.algorithms.PathPlanningContext var66 = new demo.pathplanning.algorithms.PathPlanningContext((demo.pathplanning.algorithms.PathPlanner)var63);
    demo.pathplanning.model.CartesianGraph var67 = var63.getGraph();
    int var68 = var67.getYSize();
    demo.pathplanning.model.CartesianGraph var71 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var74 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var75 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var78 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var81 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var82 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.Node var83 = new demo.pathplanning.model.Node(var67, var75, 1);
    java.util.Collection var84 = var83.getNeighbors();
    demo.pathplanning.model.Location var85 = var83.getLocation();
    java.lang.String var86 = var85.toString();
    java.util.List var87 = var34.getPath(var51, var85);

  }

  public void test245() throws Throwable {

    demo.pathplanning.model.CartesianGraph var2 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.algorithms.AStar var3 = new demo.pathplanning.algorithms.AStar(var2);
    java.lang.String var4 = var2.toString();
    demo.pathplanning.model.CartesianGraph var7 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var10 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var11 = new demo.pathplanning.model.Location(1, 1);
    boolean var13 = var11.equals((java.lang.Object)0L);
    demo.pathplanning.model.Node var14 = var2.getNode(var11);
    int var15 = var11.getX();
    demo.pathplanning.model.CartesianGraph var18 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var19 = var18.getXSize();
    int var20 = var18.getYSize();
    demo.pathplanning.model.CartesianGraph var23 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var24 = var23.getXSize();
    int var25 = var23.getYSize();
    demo.pathplanning.model.CartesianGraph var28 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.algorithms.AStar var29 = new demo.pathplanning.algorithms.AStar(var28);
    java.lang.String var30 = var28.toString();
    demo.pathplanning.model.CartesianGraph var33 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var36 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var37 = new demo.pathplanning.model.Location(1, 1);
    boolean var39 = var37.equals((java.lang.Object)0L);
    demo.pathplanning.model.Node var40 = var28.getNode(var37);
    demo.pathplanning.model.CartesianGraph var43 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var46 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var47 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var50 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var51 = var50.getXSize();
    demo.pathplanning.model.CartesianGraph var54 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var55 = new demo.pathplanning.model.CartesianGraph(var51, 1);
    demo.pathplanning.model.Location var56 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.Node var57 = new demo.pathplanning.model.Node(var23, var37, 1);
    demo.pathplanning.model.CartesianGraph var58 = new demo.pathplanning.model.CartesianGraph(var20, 1);
    demo.pathplanning.model.Location var59 = new demo.pathplanning.model.Location(var15, var20);
    java.lang.String var60 = var59.toString();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var4 + "' != '" + "0,\n"+ "'", var4.equals("0,\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var13 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var14);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var15 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var19 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var20 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var24 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var25 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var30 + "' != '" + "0,\n"+ "'", var30.equals("0,\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var39 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var40);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var51 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var60 + "' != '" + "(1,1)"+ "'", var60.equals("(1,1)"));

  }

  public void test246() throws Throwable {

    demo.pathplanning.model.CartesianGraph var2 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var3 = var2.getXSize();
    demo.pathplanning.algorithms.AStar var4 = new demo.pathplanning.algorithms.AStar(var2);
    demo.pathplanning.model.CartesianGraph var7 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var10 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var11 = new demo.pathplanning.model.Location(1, 1);
    boolean var13 = var11.equals((java.lang.Object)0L);
    demo.pathplanning.model.Node var14 = var2.getNode(var11);
    int var15 = var2.getYSize();
    demo.pathplanning.model.CartesianGraph var18 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var19 = var18.getXSize();
    int var20 = var18.getYSize();
    int var21 = var18.getYSize();
    demo.pathplanning.model.CartesianGraph var24 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var25 = new demo.pathplanning.model.Location(var21, 1);
    java.lang.String var26 = var25.toString();
    demo.pathplanning.model.CartesianGraph var29 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var32 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var33 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var36 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var37 = var36.getXSize();
    int var38 = var36.getYSize();
    int var39 = var36.getYSize();
    demo.pathplanning.model.CartesianGraph var42 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var43 = var42.getXSize();
    int var44 = var42.getYSize();
    int var45 = var42.getYSize();
    demo.pathplanning.model.CartesianGraph var46 = new demo.pathplanning.model.CartesianGraph(var39, var45);
    demo.pathplanning.model.CartesianGraph var47 = new demo.pathplanning.model.CartesianGraph(1, var39);
    demo.pathplanning.model.Node var48 = new demo.pathplanning.model.Node(var2, var25, var39);
    demo.pathplanning.model.CartesianGraph var51 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.algorithms.AStar var52 = new demo.pathplanning.algorithms.AStar(var51);
    demo.pathplanning.model.CartesianGraph var53 = var52.getGraph();
    demo.pathplanning.model.CartesianGraph var54 = var52.getGraph();
    demo.pathplanning.algorithms.PathPlanningContext var55 = new demo.pathplanning.algorithms.PathPlanningContext((demo.pathplanning.algorithms.PathPlanner)var52);
    demo.pathplanning.model.CartesianGraph var56 = var52.getGraph();
    int var57 = var56.getYSize();
    demo.pathplanning.model.CartesianGraph var60 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var63 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var64 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var67 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var70 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var71 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.Node var72 = new demo.pathplanning.model.Node(var56, var64, 1);
    demo.pathplanning.model.Node var73 = var2.getNode(var64);
    java.lang.String var74 = var64.toString();
    int var75 = var64.getY();
    int var76 = var64.getY();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var3 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var13 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var14);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var15 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var19 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var20 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var21 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var26 + "' != '" + "(1,1)"+ "'", var26.equals("(1,1)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var37 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var38 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var39 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var43 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var44 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var45 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var53);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var54);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var56);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var57 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var73);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var74 + "' != '" + "(1,1)"+ "'", var74.equals("(1,1)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var75 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var76 == 1);

  }

  public void test247() throws Throwable {

    demo.pathplanning.model.CartesianGraph var2 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var3 = var2.getXSize();
    int var4 = var2.getYSize();
    int var5 = var2.getYSize();
    demo.pathplanning.model.CartesianGraph var8 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var9 = var8.getXSize();
    int var10 = var8.getYSize();
    int var11 = var8.getYSize();
    demo.pathplanning.model.CartesianGraph var12 = new demo.pathplanning.model.CartesianGraph(var5, var11);
    demo.pathplanning.model.CartesianGraph var15 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var18 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var19 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var20 = new demo.pathplanning.model.CartesianGraph(var5, 1);
    java.lang.String var21 = var20.toString();
    demo.pathplanning.model.CartesianGraph var24 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var27 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var28 = new demo.pathplanning.model.Location(1, 1);
    boolean var30 = var28.equals((java.lang.Object)0L);
    demo.pathplanning.model.Node var31 = var20.getNode(var28);
    demo.pathplanning.model.CartesianGraph var34 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var37 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var38 = new demo.pathplanning.model.Location(1, 1);
    boolean var40 = var38.equals((java.lang.Object)0L);
    int var41 = var38.getX();
    int var42 = var38.getX();
    demo.pathplanning.model.CartesianGraph var45 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var46 = var45.getXSize();
    demo.pathplanning.model.Node var47 = new demo.pathplanning.model.Node(var20, var38, var46);
    demo.pathplanning.model.CartesianGraph var50 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.algorithms.AStar var51 = new demo.pathplanning.algorithms.AStar(var50);
    demo.pathplanning.model.CartesianGraph var52 = var51.getGraph();
    demo.pathplanning.model.CartesianGraph var53 = var51.getGraph();
    demo.pathplanning.algorithms.PathPlanningContext var54 = new demo.pathplanning.algorithms.PathPlanningContext((demo.pathplanning.algorithms.PathPlanner)var51);
    demo.pathplanning.model.CartesianGraph var55 = var51.getGraph();
    int var56 = var55.getYSize();
    demo.pathplanning.model.CartesianGraph var57 = new demo.pathplanning.model.CartesianGraph(var46, var56);
    demo.pathplanning.algorithms.AStar var58 = new demo.pathplanning.algorithms.AStar(var57);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var3 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var4 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var5 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var9 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var11 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var21 + "' != '" + "0,\n"+ "'", var21.equals("0,\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var30 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var31);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var40 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var41 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var42 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var46 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var52);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var53);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var55);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var56 == 1);

  }

  public void test248() throws Throwable {

    demo.pathplanning.model.CartesianGraph var2 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var3 = var2.getXSize();
    demo.pathplanning.algorithms.AStar var4 = new demo.pathplanning.algorithms.AStar(var2);
    demo.pathplanning.model.CartesianGraph var7 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var10 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var11 = new demo.pathplanning.model.Location(1, 1);
    boolean var13 = var11.equals((java.lang.Object)0L);
    demo.pathplanning.model.Node var14 = var2.getNode(var11);
    int var15 = var2.getYSize();
    demo.pathplanning.model.CartesianGraph var18 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var19 = var18.getXSize();
    int var20 = var18.getYSize();
    int var21 = var18.getYSize();
    demo.pathplanning.model.CartesianGraph var24 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var25 = new demo.pathplanning.model.Location(var21, 1);
    java.lang.String var26 = var25.toString();
    demo.pathplanning.model.CartesianGraph var29 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var32 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var33 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var36 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var37 = var36.getXSize();
    int var38 = var36.getYSize();
    int var39 = var36.getYSize();
    demo.pathplanning.model.CartesianGraph var42 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var43 = var42.getXSize();
    int var44 = var42.getYSize();
    int var45 = var42.getYSize();
    demo.pathplanning.model.CartesianGraph var46 = new demo.pathplanning.model.CartesianGraph(var39, var45);
    demo.pathplanning.model.CartesianGraph var47 = new demo.pathplanning.model.CartesianGraph(1, var39);
    demo.pathplanning.model.Node var48 = new demo.pathplanning.model.Node(var2, var25, var39);
    demo.pathplanning.model.CartesianGraph var51 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.algorithms.AStar var52 = new demo.pathplanning.algorithms.AStar(var51);
    demo.pathplanning.model.CartesianGraph var53 = var52.getGraph();
    demo.pathplanning.model.CartesianGraph var54 = var52.getGraph();
    demo.pathplanning.algorithms.PathPlanningContext var55 = new demo.pathplanning.algorithms.PathPlanningContext((demo.pathplanning.algorithms.PathPlanner)var52);
    demo.pathplanning.model.CartesianGraph var56 = var52.getGraph();
    int var57 = var56.getYSize();
    demo.pathplanning.model.CartesianGraph var60 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var63 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var64 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var67 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var70 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var71 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.Node var72 = new demo.pathplanning.model.Node(var56, var64, 1);
    java.util.Collection var73 = var72.getNeighbors();
    int var74 = var72.getCost();
    java.util.Collection var75 = var72.getNeighbors();
    demo.pathplanning.model.Location var76 = var72.getLocation();
    int var77 = var72.getCost();
    demo.pathplanning.model.Location var78 = new demo.pathplanning.model.Location(var39, var77);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var3 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var13 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var14);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var15 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var19 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var20 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var21 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var26 + "' != '" + "(1,1)"+ "'", var26.equals("(1,1)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var37 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var38 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var39 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var43 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var44 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var45 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var53);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var54);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var56);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var57 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var73);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var74 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var75);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var76);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var77 == 1);

  }

  public void test249() throws Throwable {

    demo.pathplanning.model.CartesianGraph var2 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.algorithms.AStar var3 = new demo.pathplanning.algorithms.AStar(var2);
    demo.pathplanning.model.CartesianGraph var4 = var3.getGraph();
    demo.pathplanning.model.CartesianGraph var5 = var3.getGraph();
    demo.pathplanning.algorithms.PathPlanningContext var6 = new demo.pathplanning.algorithms.PathPlanningContext((demo.pathplanning.algorithms.PathPlanner)var3);
    demo.pathplanning.model.CartesianGraph var7 = var3.getGraph();
    int var8 = var7.getYSize();
    demo.pathplanning.model.CartesianGraph var11 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var14 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var15 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var18 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var21 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var22 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.Node var23 = new demo.pathplanning.model.Node(var7, var15, 1);
    int var24 = var15.getX();
    demo.pathplanning.model.CartesianGraph var27 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var28 = var27.getXSize();
    int var29 = var27.getYSize();
    demo.pathplanning.model.CartesianGraph var32 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.algorithms.AStar var33 = new demo.pathplanning.algorithms.AStar(var32);
    java.lang.String var34 = var32.toString();
    demo.pathplanning.model.CartesianGraph var37 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var40 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var41 = new demo.pathplanning.model.Location(1, 1);
    boolean var43 = var41.equals((java.lang.Object)0L);
    demo.pathplanning.model.Node var44 = var32.getNode(var41);
    demo.pathplanning.model.CartesianGraph var47 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var50 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var51 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var54 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var55 = var54.getXSize();
    demo.pathplanning.model.CartesianGraph var58 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var59 = new demo.pathplanning.model.CartesianGraph(var55, 1);
    demo.pathplanning.model.Location var60 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.Node var61 = new demo.pathplanning.model.Node(var27, var41, 1);
    demo.pathplanning.model.CartesianGraph var64 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var65 = var64.getXSize();
    demo.pathplanning.algorithms.AStar var66 = new demo.pathplanning.algorithms.AStar(var64);
    demo.pathplanning.model.CartesianGraph var69 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var72 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var73 = new demo.pathplanning.model.Location(1, 1);
    boolean var75 = var73.equals((java.lang.Object)0L);
    demo.pathplanning.model.Node var76 = var64.getNode(var73);
    int var77 = var64.getXSize();
    boolean var78 = var41.equals((java.lang.Object)var64);
    int var79 = var64.getXSize();
    boolean var80 = var15.equals((java.lang.Object)var79);
    java.lang.String var81 = var15.toString();
    int var82 = var15.getY();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var8 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var24 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var28 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var29 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var34 + "' != '" + "0,\n"+ "'", var34.equals("0,\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var43 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var44);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var55 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var65 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var75 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var76);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var77 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var78 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var79 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var80 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var81 + "' != '" + "(1,1)"+ "'", var81.equals("(1,1)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var82 == 1);

  }

  public void test250() throws Throwable {

    demo.pathplanning.model.CartesianGraph var2 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var3 = var2.getXSize();
    demo.pathplanning.algorithms.AStar var4 = new demo.pathplanning.algorithms.AStar(var2);
    demo.pathplanning.model.CartesianGraph var7 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var10 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var11 = new demo.pathplanning.model.Location(1, 1);
    boolean var13 = var11.equals((java.lang.Object)0L);
    demo.pathplanning.model.Node var14 = var2.getNode(var11);
    int var15 = var2.getYSize();
    demo.pathplanning.model.CartesianGraph var18 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var19 = var18.getXSize();
    int var20 = var18.getYSize();
    int var21 = var18.getYSize();
    demo.pathplanning.model.CartesianGraph var24 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var25 = var24.getXSize();
    int var26 = var24.getYSize();
    int var27 = var24.getYSize();
    demo.pathplanning.model.CartesianGraph var28 = new demo.pathplanning.model.CartesianGraph(var21, var27);
    demo.pathplanning.model.CartesianGraph var31 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var34 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var35 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var36 = new demo.pathplanning.model.CartesianGraph(var21, 1);
    int var37 = var36.getXSize();
    demo.pathplanning.model.CartesianGraph var40 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var41 = var40.getXSize();
    int var42 = var40.getYSize();
    int var43 = var40.getYSize();
    demo.pathplanning.model.CartesianGraph var44 = new demo.pathplanning.model.CartesianGraph(var37, var43);
    demo.pathplanning.model.CartesianGraph var45 = new demo.pathplanning.model.CartesianGraph(var15, var37);
    java.lang.String var46 = var45.toString();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var3 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var13 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var14);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var15 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var19 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var20 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var21 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var25 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var26 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var27 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var37 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var41 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var42 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var43 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var46 + "' != '" + "0,\n"+ "'", var46.equals("0,\n"));

  }

  public void test251() throws Throwable {

    demo.pathplanning.model.CartesianGraph var2 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var3 = var2.getXSize();
    int var4 = var2.getYSize();
    demo.pathplanning.model.CartesianGraph var7 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var8 = var7.getXSize();
    int var9 = var7.getYSize();
    demo.pathplanning.model.CartesianGraph var12 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.algorithms.AStar var13 = new demo.pathplanning.algorithms.AStar(var12);
    java.lang.String var14 = var12.toString();
    demo.pathplanning.model.CartesianGraph var17 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var20 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var21 = new demo.pathplanning.model.Location(1, 1);
    boolean var23 = var21.equals((java.lang.Object)0L);
    demo.pathplanning.model.Node var24 = var12.getNode(var21);
    demo.pathplanning.model.CartesianGraph var27 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var30 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var31 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var34 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var35 = var34.getXSize();
    demo.pathplanning.model.CartesianGraph var38 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var39 = new demo.pathplanning.model.CartesianGraph(var35, 1);
    demo.pathplanning.model.Location var40 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.Node var41 = new demo.pathplanning.model.Node(var7, var21, 1);
    demo.pathplanning.model.CartesianGraph var42 = new demo.pathplanning.model.CartesianGraph(var4, 1);
    java.lang.String var43 = var42.toString();
    int var44 = var42.getXSize();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var3 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var4 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var8 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var9 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var14 + "' != '" + "0,\n"+ "'", var14.equals("0,\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var23 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var24);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var35 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var43 + "' != '" + "0,\n"+ "'", var43.equals("0,\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var44 == 1);

  }

  public void test252() throws Throwable {

    demo.pathplanning.model.CartesianGraph var2 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var3 = var2.getXSize();
    demo.pathplanning.algorithms.AStar var4 = new demo.pathplanning.algorithms.AStar(var2);
    demo.pathplanning.model.CartesianGraph var7 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var10 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var11 = new demo.pathplanning.model.Location(1, 1);
    boolean var13 = var11.equals((java.lang.Object)0L);
    demo.pathplanning.model.Node var14 = var2.getNode(var11);
    demo.pathplanning.algorithms.AStar var15 = new demo.pathplanning.algorithms.AStar(var2);
    demo.pathplanning.model.CartesianGraph var16 = var15.getGraph();
    demo.pathplanning.algorithms.PathPlanningContext var17 = new demo.pathplanning.algorithms.PathPlanningContext((demo.pathplanning.algorithms.PathPlanner)var15);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var3 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var13 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var14);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var16);

  }

  public void test253() throws Throwable {

    demo.pathplanning.model.CartesianGraph var2 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var3 = var2.getXSize();
    demo.pathplanning.algorithms.AStar var4 = new demo.pathplanning.algorithms.AStar(var2);
    demo.pathplanning.model.CartesianGraph var7 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var10 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var11 = new demo.pathplanning.model.Location(1, 1);
    boolean var13 = var11.equals((java.lang.Object)0L);
    demo.pathplanning.model.Node var14 = var2.getNode(var11);
    demo.pathplanning.algorithms.AStar var15 = new demo.pathplanning.algorithms.AStar(var2);
    demo.pathplanning.model.CartesianGraph var16 = var15.getGraph();
    java.lang.String var17 = var16.toString();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var3 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var13 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var14);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var16);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var17 + "' != '" + "0,\n"+ "'", var17.equals("0,\n"));

  }

  public void test254() throws Throwable {

    demo.pathplanning.model.CartesianGraph var2 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var3 = var2.getXSize();
    int var4 = var2.getYSize();
    int var5 = var2.getYSize();
    demo.pathplanning.model.CartesianGraph var8 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var9 = var8.getXSize();
    int var10 = var8.getYSize();
    int var11 = var8.getYSize();
    demo.pathplanning.model.CartesianGraph var12 = new demo.pathplanning.model.CartesianGraph(var5, var11);
    demo.pathplanning.model.CartesianGraph var15 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var18 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var19 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var20 = new demo.pathplanning.model.CartesianGraph(var5, 1);
    int var21 = var20.getXSize();
    demo.pathplanning.model.CartesianGraph var24 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var25 = var24.getXSize();
    int var26 = var24.getYSize();
    int var27 = var24.getYSize();
    demo.pathplanning.model.CartesianGraph var28 = new demo.pathplanning.model.CartesianGraph(var21, var27);
    int var29 = var28.getYSize();
    java.lang.String var30 = var28.toString();
    int var31 = var28.getYSize();
    int var32 = var28.getYSize();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var3 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var4 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var5 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var9 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var11 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var21 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var25 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var26 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var27 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var29 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var30 + "' != '" + "0,\n"+ "'", var30.equals("0,\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var31 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var32 == 1);

  }

  public void test255() throws Throwable {

    demo.pathplanning.model.CartesianGraph var2 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var3 = var2.getXSize();
    demo.pathplanning.algorithms.AStar var4 = new demo.pathplanning.algorithms.AStar(var2);
    demo.pathplanning.model.CartesianGraph var7 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var10 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var11 = new demo.pathplanning.model.Location(1, 1);
    boolean var13 = var11.equals((java.lang.Object)0L);
    demo.pathplanning.model.Node var14 = var2.getNode(var11);
    int var15 = var2.getXSize();
    java.lang.String var16 = var2.toString();
    demo.pathplanning.model.CartesianGraph var19 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var22 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var23 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var26 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var27 = var26.getXSize();
    int var28 = var26.getYSize();
    int var29 = var26.getYSize();
    demo.pathplanning.model.CartesianGraph var32 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var33 = var32.getXSize();
    int var34 = var32.getYSize();
    int var35 = var32.getYSize();
    demo.pathplanning.model.CartesianGraph var36 = new demo.pathplanning.model.CartesianGraph(var29, var35);
    demo.pathplanning.model.CartesianGraph var37 = new demo.pathplanning.model.CartesianGraph(1, var29);
    demo.pathplanning.model.CartesianGraph var40 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var43 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var44 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var47 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var48 = var47.getXSize();
    int var49 = var47.getYSize();
    int var50 = var47.getYSize();
    demo.pathplanning.model.CartesianGraph var53 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var54 = var53.getXSize();
    int var55 = var53.getYSize();
    int var56 = var53.getYSize();
    demo.pathplanning.model.CartesianGraph var57 = new demo.pathplanning.model.CartesianGraph(var50, var56);
    demo.pathplanning.model.CartesianGraph var58 = new demo.pathplanning.model.CartesianGraph(1, var50);
    demo.pathplanning.model.Location var59 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var62 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var65 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var66 = new demo.pathplanning.model.Location(1, 1);
    int var67 = var66.getY();
    demo.pathplanning.model.Node var68 = new demo.pathplanning.model.Node(var2, var59, var67);
    demo.pathplanning.algorithms.AStar var69 = new demo.pathplanning.algorithms.AStar(var2);
    java.lang.String var70 = var2.toString();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var3 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var13 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var14);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var15 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var16 + "' != '" + "0,\n"+ "'", var16.equals("0,\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var27 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var28 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var29 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var33 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var34 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var35 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var48 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var49 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var50 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var54 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var55 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var56 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var67 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var70 + "' != '" + "0,\n"+ "'", var70.equals("0,\n"));

  }

  public void test256() throws Throwable {

    demo.pathplanning.model.CartesianGraph var2 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.algorithms.AStar var3 = new demo.pathplanning.algorithms.AStar(var2);
    demo.pathplanning.model.CartesianGraph var4 = var3.getGraph();
    demo.pathplanning.algorithms.PathPlanningContext var5 = new demo.pathplanning.algorithms.PathPlanningContext((demo.pathplanning.algorithms.PathPlanner)var3);
    demo.pathplanning.model.CartesianGraph var6 = var3.getGraph();
    demo.pathplanning.algorithms.PathPlanningContext var7 = new demo.pathplanning.algorithms.PathPlanningContext((demo.pathplanning.algorithms.PathPlanner)var3);
    demo.pathplanning.model.CartesianGraph var8 = var3.getGraph();
    int var9 = var8.getYSize();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var6);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var8);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var9 == 1);

  }

  public void test257() throws Throwable {

    demo.pathplanning.model.CartesianGraph var2 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var3 = var2.getXSize();
    demo.pathplanning.algorithms.AStar var4 = new demo.pathplanning.algorithms.AStar(var2);
    demo.pathplanning.model.CartesianGraph var7 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var10 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var11 = new demo.pathplanning.model.Location(1, 1);
    boolean var13 = var11.equals((java.lang.Object)0L);
    demo.pathplanning.model.Node var14 = var2.getNode(var11);
    int var15 = var2.getYSize();
    demo.pathplanning.model.CartesianGraph var18 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var19 = var18.getXSize();
    int var20 = var18.getYSize();
    int var21 = var18.getYSize();
    demo.pathplanning.model.CartesianGraph var24 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var25 = new demo.pathplanning.model.Location(var21, 1);
    java.lang.String var26 = var25.toString();
    demo.pathplanning.model.CartesianGraph var29 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var32 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var33 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var36 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var37 = var36.getXSize();
    int var38 = var36.getYSize();
    int var39 = var36.getYSize();
    demo.pathplanning.model.CartesianGraph var42 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var43 = var42.getXSize();
    int var44 = var42.getYSize();
    int var45 = var42.getYSize();
    demo.pathplanning.model.CartesianGraph var46 = new demo.pathplanning.model.CartesianGraph(var39, var45);
    demo.pathplanning.model.CartesianGraph var47 = new demo.pathplanning.model.CartesianGraph(1, var39);
    demo.pathplanning.model.Node var48 = new demo.pathplanning.model.Node(var2, var25, var39);
    java.util.Collection var49 = var48.getNeighbors();
    java.lang.String var50 = var48.toString();
    demo.pathplanning.model.Location var51 = var48.getLocation();
    java.util.Collection var52 = var48.getNeighbors();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var3 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var13 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var14);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var15 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var19 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var20 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var21 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var26 + "' != '" + "(1,1)"+ "'", var26.equals("(1,1)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var37 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var38 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var39 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var43 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var44 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var45 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var49);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var50 + "' != '" + "(1,1)=1"+ "'", var50.equals("(1,1)=1"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var51);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var52);

  }

  public void test258() throws Throwable {

    demo.pathplanning.model.CartesianGraph var2 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var3 = var2.getXSize();
    demo.pathplanning.algorithms.AStar var4 = new demo.pathplanning.algorithms.AStar(var2);
    demo.pathplanning.model.CartesianGraph var7 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var10 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var11 = new demo.pathplanning.model.Location(1, 1);
    boolean var13 = var11.equals((java.lang.Object)0L);
    demo.pathplanning.model.Node var14 = var2.getNode(var11);
    demo.pathplanning.algorithms.AStar var15 = new demo.pathplanning.algorithms.AStar(var2);
    demo.pathplanning.algorithms.PathPlanningContext var16 = new demo.pathplanning.algorithms.PathPlanningContext((demo.pathplanning.algorithms.PathPlanner)var15);
    demo.pathplanning.model.CartesianGraph var17 = var15.getGraph();
    java.lang.String var18 = var17.toString();
    java.lang.String var19 = var17.toString();
    int var20 = var17.getXSize();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var3 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var13 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var14);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var17);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var18 + "' != '" + "0,\n"+ "'", var18.equals("0,\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var19 + "' != '" + "0,\n"+ "'", var19.equals("0,\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var20 == 1);

  }

  public void test259() throws Throwable {

    demo.pathplanning.model.CartesianGraph var2 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var5 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var6 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var9 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var10 = var9.getXSize();
    int var11 = var9.getYSize();
    int var12 = var9.getYSize();
    demo.pathplanning.model.CartesianGraph var15 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var16 = var15.getXSize();
    int var17 = var15.getYSize();
    int var18 = var15.getYSize();
    demo.pathplanning.model.CartesianGraph var19 = new demo.pathplanning.model.CartesianGraph(var12, var18);
    demo.pathplanning.model.CartesianGraph var20 = new demo.pathplanning.model.CartesianGraph(1, var12);
    demo.pathplanning.model.CartesianGraph var23 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var24 = var23.getXSize();
    demo.pathplanning.algorithms.AStar var25 = new demo.pathplanning.algorithms.AStar(var23);
    demo.pathplanning.model.CartesianGraph var28 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var31 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var32 = new demo.pathplanning.model.Location(1, 1);
    boolean var34 = var32.equals((java.lang.Object)0L);
    demo.pathplanning.model.Node var35 = var23.getNode(var32);
    int var36 = var23.getYSize();
    demo.pathplanning.model.CartesianGraph var37 = new demo.pathplanning.model.CartesianGraph(var12, var36);
    int var38 = var37.getYSize();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var11 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var12 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var16 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var17 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var18 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var24 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var34 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var35);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var36 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var38 == 1);

  }

  public void test260() throws Throwable {

    demo.pathplanning.model.CartesianGraph var2 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var3 = var2.getXSize();
    demo.pathplanning.algorithms.AStar var4 = new demo.pathplanning.algorithms.AStar(var2);
    demo.pathplanning.algorithms.PathPlanningContext var5 = new demo.pathplanning.algorithms.PathPlanningContext((demo.pathplanning.algorithms.PathPlanner)var4);
    demo.pathplanning.algorithms.PathPlanningContext var6 = new demo.pathplanning.algorithms.PathPlanningContext((demo.pathplanning.algorithms.PathPlanner)var4);
    demo.pathplanning.model.CartesianGraph var9 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var10 = var9.getXSize();
    int var11 = var9.getYSize();
    int var12 = var9.getYSize();
    demo.pathplanning.model.CartesianGraph var15 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var16 = var15.getXSize();
    int var17 = var15.getYSize();
    int var18 = var15.getYSize();
    demo.pathplanning.model.CartesianGraph var19 = new demo.pathplanning.model.CartesianGraph(var12, var18);
    demo.pathplanning.model.CartesianGraph var22 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var25 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var26 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var27 = new demo.pathplanning.model.CartesianGraph(var12, 1);
    int var28 = var27.getXSize();
    demo.pathplanning.model.CartesianGraph var31 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var34 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var35 = new demo.pathplanning.model.Location(1, 1);
    int var36 = var35.getY();
    demo.pathplanning.model.CartesianGraph var39 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var40 = var39.getXSize();
    int var41 = var39.getYSize();
    demo.pathplanning.model.CartesianGraph var44 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var45 = var44.getXSize();
    int var46 = var44.getYSize();
    demo.pathplanning.model.CartesianGraph var49 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.algorithms.AStar var50 = new demo.pathplanning.algorithms.AStar(var49);
    java.lang.String var51 = var49.toString();
    demo.pathplanning.model.CartesianGraph var54 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var57 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var58 = new demo.pathplanning.model.Location(1, 1);
    boolean var60 = var58.equals((java.lang.Object)0L);
    demo.pathplanning.model.Node var61 = var49.getNode(var58);
    demo.pathplanning.model.CartesianGraph var64 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var67 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var68 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var71 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var72 = var71.getXSize();
    demo.pathplanning.model.CartesianGraph var75 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var76 = new demo.pathplanning.model.CartesianGraph(var72, 1);
    demo.pathplanning.model.Location var77 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.Node var78 = new demo.pathplanning.model.Node(var44, var58, 1);
    demo.pathplanning.model.CartesianGraph var79 = new demo.pathplanning.model.CartesianGraph(var41, 1);
    demo.pathplanning.model.Node var80 = new demo.pathplanning.model.Node(var27, var35, 1);
    int var81 = var35.getX();
    demo.pathplanning.model.CartesianGraph var84 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var87 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var88 = new demo.pathplanning.model.Location(1, 1);
    boolean var90 = var88.equals((java.lang.Object)0L);
    int var91 = var88.getX();
    int var92 = var88.getX();
    java.util.List var93 = var4.getPath(var35, var88);

  }

  public void test261() throws Throwable {

    demo.pathplanning.model.CartesianGraph var2 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var3 = var2.getXSize();
    int var4 = var2.getYSize();
    int var5 = var2.getYSize();
    demo.pathplanning.model.CartesianGraph var8 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var9 = var8.getXSize();
    int var10 = var8.getYSize();
    int var11 = var8.getYSize();
    demo.pathplanning.model.CartesianGraph var12 = new demo.pathplanning.model.CartesianGraph(var5, var11);
    int var13 = var12.getXSize();
    demo.pathplanning.model.CartesianGraph var16 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var17 = var16.getXSize();
    int var18 = var16.getYSize();
    int var19 = var16.getYSize();
    demo.pathplanning.model.CartesianGraph var22 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var23 = var22.getXSize();
    int var24 = var22.getYSize();
    int var25 = var22.getYSize();
    demo.pathplanning.model.CartesianGraph var26 = new demo.pathplanning.model.CartesianGraph(var19, var25);
    demo.pathplanning.model.CartesianGraph var29 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var32 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var33 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var34 = new demo.pathplanning.model.CartesianGraph(var19, 1);
    int var35 = var34.getXSize();
    demo.pathplanning.model.CartesianGraph var38 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var39 = var38.getXSize();
    int var40 = var38.getYSize();
    int var41 = var38.getYSize();
    demo.pathplanning.model.CartesianGraph var42 = new demo.pathplanning.model.CartesianGraph(var35, var41);
    demo.pathplanning.model.CartesianGraph var45 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var48 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var49 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var52 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var53 = var52.getXSize();
    int var54 = var52.getYSize();
    int var55 = var52.getYSize();
    demo.pathplanning.model.CartesianGraph var58 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var59 = var58.getXSize();
    int var60 = var58.getYSize();
    int var61 = var58.getYSize();
    demo.pathplanning.model.CartesianGraph var62 = new demo.pathplanning.model.CartesianGraph(var55, var61);
    demo.pathplanning.model.CartesianGraph var63 = new demo.pathplanning.model.CartesianGraph(1, var55);
    demo.pathplanning.model.CartesianGraph var66 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var69 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var70 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var73 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var74 = var73.getXSize();
    int var75 = var73.getYSize();
    int var76 = var73.getYSize();
    demo.pathplanning.model.CartesianGraph var79 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var80 = var79.getXSize();
    int var81 = var79.getYSize();
    int var82 = var79.getYSize();
    demo.pathplanning.model.CartesianGraph var83 = new demo.pathplanning.model.CartesianGraph(var76, var82);
    demo.pathplanning.model.CartesianGraph var84 = new demo.pathplanning.model.CartesianGraph(1, var76);
    demo.pathplanning.model.Location var85 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.Location var86 = new demo.pathplanning.model.Location(var35, 1);
    int var87 = var86.getX();
    demo.pathplanning.model.CartesianGraph var88 = new demo.pathplanning.model.CartesianGraph(var13, var87);
    demo.pathplanning.algorithms.AStar var89 = new demo.pathplanning.algorithms.AStar(var88);
    java.lang.String var90 = var88.toString();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var3 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var4 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var5 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var9 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var11 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var13 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var17 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var18 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var19 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var23 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var24 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var25 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var35 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var39 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var40 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var41 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var53 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var54 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var55 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var59 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var60 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var61 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var74 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var75 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var76 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var80 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var81 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var82 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var87 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var90 + "' != '" + "0,\n"+ "'", var90.equals("0,\n"));

  }

  public void test262() throws Throwable {

    demo.pathplanning.model.CartesianGraph var2 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var3 = var2.getXSize();
    int var4 = var2.getYSize();
    int var5 = var2.getYSize();
    demo.pathplanning.model.CartesianGraph var8 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var9 = var8.getXSize();
    int var10 = var8.getYSize();
    int var11 = var8.getYSize();
    demo.pathplanning.model.CartesianGraph var12 = new demo.pathplanning.model.CartesianGraph(var5, var11);
    demo.pathplanning.model.CartesianGraph var15 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var18 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var19 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var20 = new demo.pathplanning.model.CartesianGraph(var5, 1);
    java.lang.String var21 = var20.toString();
    demo.pathplanning.model.CartesianGraph var24 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var27 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var28 = new demo.pathplanning.model.Location(1, 1);
    boolean var30 = var28.equals((java.lang.Object)0L);
    demo.pathplanning.model.Node var31 = var20.getNode(var28);
    demo.pathplanning.model.CartesianGraph var34 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var37 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var38 = new demo.pathplanning.model.Location(1, 1);
    boolean var40 = var38.equals((java.lang.Object)0L);
    int var41 = var38.getX();
    int var42 = var38.getX();
    demo.pathplanning.model.CartesianGraph var45 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var46 = var45.getXSize();
    demo.pathplanning.model.Node var47 = new demo.pathplanning.model.Node(var20, var38, var46);
    demo.pathplanning.algorithms.AStar var48 = new demo.pathplanning.algorithms.AStar(var20);
    demo.pathplanning.model.CartesianGraph var49 = var48.getGraph();
    demo.pathplanning.model.CartesianGraph var52 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.algorithms.AStar var53 = new demo.pathplanning.algorithms.AStar(var52);
    java.lang.String var54 = var52.toString();
    demo.pathplanning.model.CartesianGraph var57 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var60 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var61 = new demo.pathplanning.model.Location(1, 1);
    boolean var63 = var61.equals((java.lang.Object)0L);
    demo.pathplanning.model.Node var64 = var52.getNode(var61);
    int var65 = var61.getX();
    demo.pathplanning.model.CartesianGraph var68 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var69 = var68.getXSize();
    demo.pathplanning.model.CartesianGraph var72 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var73 = new demo.pathplanning.model.CartesianGraph(var69, 1);
    demo.pathplanning.model.CartesianGraph var76 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.algorithms.AStar var77 = new demo.pathplanning.algorithms.AStar(var76);
    demo.pathplanning.model.CartesianGraph var78 = var77.getGraph();
    demo.pathplanning.model.CartesianGraph var79 = var77.getGraph();
    demo.pathplanning.algorithms.PathPlanningContext var80 = new demo.pathplanning.algorithms.PathPlanningContext((demo.pathplanning.algorithms.PathPlanner)var77);
    demo.pathplanning.model.CartesianGraph var81 = var77.getGraph();
    int var82 = var81.getYSize();
    demo.pathplanning.model.CartesianGraph var83 = new demo.pathplanning.model.CartesianGraph(var69, var82);
    int var84 = var83.getXSize();
    demo.pathplanning.algorithms.AStar var85 = new demo.pathplanning.algorithms.AStar(var83);
    int var86 = var83.getYSize();
    demo.pathplanning.model.Node var87 = new demo.pathplanning.model.Node(var49, var61, var86);
    int var88 = var49.getXSize();
    java.lang.String var89 = var49.toString();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var3 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var4 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var5 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var9 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var11 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var21 + "' != '" + "0,\n"+ "'", var21.equals("0,\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var30 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var31);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var40 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var41 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var42 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var46 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var49);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var54 + "' != '" + "0,\n"+ "'", var54.equals("0,\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var63 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var64);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var65 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var69 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var78);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var79);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var81);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var82 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var84 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var86 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var88 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var89 + "' != '" + "0,\n"+ "'", var89.equals("0,\n"));

  }

  public void test263() throws Throwable {

    demo.pathplanning.model.CartesianGraph var2 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var3 = var2.getXSize();
    demo.pathplanning.algorithms.AStar var4 = new demo.pathplanning.algorithms.AStar(var2);
    demo.pathplanning.model.CartesianGraph var7 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var10 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var11 = new demo.pathplanning.model.Location(1, 1);
    boolean var13 = var11.equals((java.lang.Object)0L);
    demo.pathplanning.model.Node var14 = var2.getNode(var11);
    demo.pathplanning.algorithms.AStar var15 = new demo.pathplanning.algorithms.AStar(var2);
    demo.pathplanning.algorithms.PathPlanningContext var16 = new demo.pathplanning.algorithms.PathPlanningContext((demo.pathplanning.algorithms.PathPlanner)var15);
    demo.pathplanning.model.CartesianGraph var17 = var15.getGraph();
    java.lang.String var18 = var17.toString();
    int var19 = var17.getYSize();
    java.lang.String var20 = var17.toString();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var3 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var13 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var14);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var17);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var18 + "' != '" + "0,\n"+ "'", var18.equals("0,\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var19 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var20 + "' != '" + "0,\n"+ "'", var20.equals("0,\n"));

  }

  public void test264() throws Throwable {

    demo.pathplanning.model.CartesianGraph var2 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.algorithms.AStar var3 = new demo.pathplanning.algorithms.AStar(var2);
    java.lang.String var4 = var2.toString();
    int var5 = var2.getXSize();
    demo.pathplanning.model.CartesianGraph var8 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var9 = var8.getXSize();
    demo.pathplanning.model.CartesianGraph var12 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var13 = new demo.pathplanning.model.CartesianGraph(var9, 1);
    demo.pathplanning.model.CartesianGraph var16 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.algorithms.AStar var17 = new demo.pathplanning.algorithms.AStar(var16);
    demo.pathplanning.model.CartesianGraph var18 = var17.getGraph();
    demo.pathplanning.model.CartesianGraph var19 = var17.getGraph();
    demo.pathplanning.algorithms.PathPlanningContext var20 = new demo.pathplanning.algorithms.PathPlanningContext((demo.pathplanning.algorithms.PathPlanner)var17);
    demo.pathplanning.model.CartesianGraph var21 = var17.getGraph();
    int var22 = var21.getYSize();
    demo.pathplanning.model.CartesianGraph var23 = new demo.pathplanning.model.CartesianGraph(var9, var22);
    demo.pathplanning.model.Location var24 = new demo.pathplanning.model.Location(var5, var9);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var4 + "' != '" + "0,\n"+ "'", var4.equals("0,\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var5 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var9 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var18);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var19);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var21);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var22 == 1);

  }

  public void test265() throws Throwable {

    demo.pathplanning.model.CartesianGraph var2 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var5 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var6 = new demo.pathplanning.model.Location(1, 1);
    boolean var8 = var6.equals((java.lang.Object)0L);
    demo.pathplanning.model.CartesianGraph var11 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var14 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var15 = new demo.pathplanning.model.Location(1, 1);
    boolean var17 = var15.equals((java.lang.Object)0L);
    int var18 = var15.getX();
    int var19 = var15.getX();
    int var20 = var15.getY();
    demo.pathplanning.model.CartesianGraph var23 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var24 = var23.getXSize();
    demo.pathplanning.algorithms.AStar var25 = new demo.pathplanning.algorithms.AStar(var23);
    demo.pathplanning.model.CartesianGraph var28 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var31 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var32 = new demo.pathplanning.model.Location(1, 1);
    boolean var34 = var32.equals((java.lang.Object)0L);
    demo.pathplanning.model.Node var35 = var23.getNode(var32);
    boolean var36 = var15.equals((java.lang.Object)var32);
    int var37 = var32.getY();
    int var38 = var32.getX();
    demo.pathplanning.model.CartesianGraph var41 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var42 = var41.getXSize();
    demo.pathplanning.algorithms.AStar var43 = new demo.pathplanning.algorithms.AStar(var41);
    demo.pathplanning.model.CartesianGraph var46 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var49 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var50 = new demo.pathplanning.model.Location(1, 1);
    boolean var52 = var50.equals((java.lang.Object)0L);
    demo.pathplanning.model.Node var53 = var41.getNode(var50);
    int var54 = var50.getY();
    int var55 = var50.getY();
    demo.pathplanning.model.CartesianGraph var56 = new demo.pathplanning.model.CartesianGraph(var38, var55);
    int var57 = var56.getYSize();
    boolean var58 = var6.equals((java.lang.Object)var57);
    boolean var60 = var6.equals((java.lang.Object)(-1.0f));
    int var61 = var6.getX();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var17 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var18 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var19 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var20 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var24 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var34 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var35);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var36 == true);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var37 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var38 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var42 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var52 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var53);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var54 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var55 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var57 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var58 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var60 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var61 == 1);

  }

  public void test266() throws Throwable {

    demo.pathplanning.model.CartesianGraph var2 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var3 = var2.getXSize();
    int var4 = var2.getYSize();
    int var5 = var2.getYSize();
    demo.pathplanning.model.CartesianGraph var8 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var9 = var8.getXSize();
    int var10 = var8.getYSize();
    int var11 = var8.getYSize();
    demo.pathplanning.model.CartesianGraph var14 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var15 = var14.getXSize();
    int var16 = var14.getYSize();
    int var17 = var14.getYSize();
    demo.pathplanning.model.CartesianGraph var18 = new demo.pathplanning.model.CartesianGraph(var11, var17);
    demo.pathplanning.model.CartesianGraph var21 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var24 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var25 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var26 = new demo.pathplanning.model.CartesianGraph(var11, 1);
    demo.pathplanning.model.CartesianGraph var27 = new demo.pathplanning.model.CartesianGraph(var5, var11);
    demo.pathplanning.model.CartesianGraph var30 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var31 = var30.getXSize();
    int var32 = var30.getYSize();
    int var33 = var30.getYSize();
    demo.pathplanning.model.CartesianGraph var36 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var37 = var36.getXSize();
    int var38 = var36.getYSize();
    int var39 = var36.getYSize();
    demo.pathplanning.model.CartesianGraph var40 = new demo.pathplanning.model.CartesianGraph(var33, var39);
    demo.pathplanning.model.CartesianGraph var43 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var46 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var47 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var48 = new demo.pathplanning.model.CartesianGraph(var33, 1);
    demo.pathplanning.model.CartesianGraph var49 = new demo.pathplanning.model.CartesianGraph(var5, 1);
    demo.pathplanning.model.CartesianGraph var52 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.algorithms.AStar var53 = new demo.pathplanning.algorithms.AStar(var52);
    demo.pathplanning.model.CartesianGraph var54 = var53.getGraph();
    demo.pathplanning.model.CartesianGraph var55 = var53.getGraph();
    demo.pathplanning.algorithms.PathPlanningContext var56 = new demo.pathplanning.algorithms.PathPlanningContext((demo.pathplanning.algorithms.PathPlanner)var53);
    demo.pathplanning.model.CartesianGraph var57 = var53.getGraph();
    int var58 = var57.getYSize();
    demo.pathplanning.model.CartesianGraph var61 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var64 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var65 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var68 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var71 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var72 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.Node var73 = new demo.pathplanning.model.Node(var57, var65, 1);
    int var74 = var73.getCost();
    demo.pathplanning.model.CartesianGraph var77 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var78 = var77.getXSize();
    int var79 = var77.getYSize();
    int var80 = var77.getYSize();
    demo.pathplanning.model.CartesianGraph var83 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var84 = new demo.pathplanning.model.Location(var80, 1);
    demo.pathplanning.model.CartesianGraph var85 = new demo.pathplanning.model.CartesianGraph(var74, 1);
    demo.pathplanning.model.CartesianGraph var88 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var91 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var92 = new demo.pathplanning.model.Location(1, 1);
    boolean var94 = var92.equals((java.lang.Object)0L);
    demo.pathplanning.model.Node var95 = var85.getNode(var92);
    java.lang.String var96 = var85.toString();
    int var97 = var85.getXSize();
    demo.pathplanning.model.Location var98 = new demo.pathplanning.model.Location(var5, var97);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var3 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var4 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var5 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var9 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var11 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var15 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var16 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var17 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var31 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var32 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var33 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var37 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var38 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var39 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var54);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var55);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var57);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var58 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var74 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var78 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var79 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var80 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var94 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var95);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var96 + "' != '" + "0,\n"+ "'", var96.equals("0,\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var97 == 1);

  }

  public void test267() throws Throwable {

    demo.pathplanning.model.CartesianGraph var2 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var3 = var2.getXSize();
    demo.pathplanning.algorithms.AStar var4 = new demo.pathplanning.algorithms.AStar(var2);
    demo.pathplanning.model.CartesianGraph var7 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var10 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var11 = new demo.pathplanning.model.Location(1, 1);
    boolean var13 = var11.equals((java.lang.Object)0L);
    demo.pathplanning.model.Node var14 = var2.getNode(var11);
    int var15 = var2.getXSize();
    java.lang.String var16 = var2.toString();
    demo.pathplanning.model.CartesianGraph var19 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var22 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var23 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var26 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var27 = var26.getXSize();
    int var28 = var26.getYSize();
    int var29 = var26.getYSize();
    demo.pathplanning.model.CartesianGraph var32 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var33 = var32.getXSize();
    int var34 = var32.getYSize();
    int var35 = var32.getYSize();
    demo.pathplanning.model.CartesianGraph var36 = new demo.pathplanning.model.CartesianGraph(var29, var35);
    demo.pathplanning.model.CartesianGraph var37 = new demo.pathplanning.model.CartesianGraph(1, var29);
    demo.pathplanning.model.CartesianGraph var40 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var43 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var44 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var47 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var48 = var47.getXSize();
    int var49 = var47.getYSize();
    int var50 = var47.getYSize();
    demo.pathplanning.model.CartesianGraph var53 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var54 = var53.getXSize();
    int var55 = var53.getYSize();
    int var56 = var53.getYSize();
    demo.pathplanning.model.CartesianGraph var57 = new demo.pathplanning.model.CartesianGraph(var50, var56);
    demo.pathplanning.model.CartesianGraph var58 = new demo.pathplanning.model.CartesianGraph(1, var50);
    demo.pathplanning.model.Location var59 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var62 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var65 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var66 = new demo.pathplanning.model.Location(1, 1);
    int var67 = var66.getY();
    demo.pathplanning.model.Node var68 = new demo.pathplanning.model.Node(var2, var59, var67);
    demo.pathplanning.algorithms.AStar var69 = new demo.pathplanning.algorithms.AStar(var2);
    demo.pathplanning.model.CartesianGraph var70 = var69.getGraph();
    int var71 = var70.getYSize();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var3 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var13 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var14);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var15 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var16 + "' != '" + "0,\n"+ "'", var16.equals("0,\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var27 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var28 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var29 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var33 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var34 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var35 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var48 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var49 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var50 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var54 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var55 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var56 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var67 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var70);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var71 == 1);

  }

  public void test268() throws Throwable {

    demo.pathplanning.model.CartesianGraph var2 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var3 = var2.getXSize();
    demo.pathplanning.algorithms.AStar var4 = new demo.pathplanning.algorithms.AStar(var2);
    demo.pathplanning.model.CartesianGraph var7 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var10 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var11 = new demo.pathplanning.model.Location(1, 1);
    boolean var13 = var11.equals((java.lang.Object)0L);
    demo.pathplanning.model.Node var14 = var2.getNode(var11);
    int var15 = var2.getYSize();
    int var16 = var2.getYSize();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var3 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var13 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var14);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var15 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var16 == 1);

  }

  public void test269() throws Throwable {

    demo.pathplanning.model.CartesianGraph var2 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var3 = var2.getXSize();
    int var4 = var2.getYSize();
    int var5 = var2.getYSize();
    demo.pathplanning.model.CartesianGraph var8 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var9 = var8.getXSize();
    int var10 = var8.getYSize();
    int var11 = var8.getYSize();
    demo.pathplanning.model.CartesianGraph var12 = new demo.pathplanning.model.CartesianGraph(var5, var11);
    int var13 = var12.getXSize();
    demo.pathplanning.model.CartesianGraph var16 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.algorithms.AStar var17 = new demo.pathplanning.algorithms.AStar(var16);
    java.lang.String var18 = var16.toString();
    demo.pathplanning.model.CartesianGraph var21 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var24 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var25 = new demo.pathplanning.model.Location(1, 1);
    boolean var27 = var25.equals((java.lang.Object)0L);
    demo.pathplanning.model.Node var28 = var16.getNode(var25);
    demo.pathplanning.model.CartesianGraph var31 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var32 = var31.getXSize();
    demo.pathplanning.algorithms.AStar var33 = new demo.pathplanning.algorithms.AStar(var31);
    demo.pathplanning.model.CartesianGraph var36 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var39 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var40 = new demo.pathplanning.model.Location(1, 1);
    boolean var42 = var40.equals((java.lang.Object)0L);
    demo.pathplanning.model.Node var43 = var31.getNode(var40);
    int var44 = var31.getXSize();
    demo.pathplanning.model.Node var45 = new demo.pathplanning.model.Node(var12, var25, var44);
    java.lang.String var46 = var45.toString();
    java.util.Collection var47 = var45.getNeighbors();
    int var48 = var45.getCost();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var3 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var4 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var5 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var9 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var11 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var13 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var18 + "' != '" + "0,\n"+ "'", var18.equals("0,\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var27 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var28);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var32 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var42 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var43);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var44 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var46 + "' != '" + "(1,1)=1"+ "'", var46.equals("(1,1)=1"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var47);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var48 == 1);

  }

  public void test270() throws Throwable {

    demo.pathplanning.model.CartesianGraph var2 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.algorithms.AStar var3 = new demo.pathplanning.algorithms.AStar(var2);
    demo.pathplanning.model.CartesianGraph var4 = var3.getGraph();
    demo.pathplanning.model.CartesianGraph var5 = var3.getGraph();
    demo.pathplanning.algorithms.PathPlanningContext var6 = new demo.pathplanning.algorithms.PathPlanningContext((demo.pathplanning.algorithms.PathPlanner)var3);
    demo.pathplanning.model.CartesianGraph var7 = var3.getGraph();
    int var8 = var7.getYSize();
    demo.pathplanning.model.CartesianGraph var11 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var14 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var15 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var18 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var21 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var22 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.Node var23 = new demo.pathplanning.model.Node(var7, var15, 1);
    int var24 = var7.getYSize();
    demo.pathplanning.model.CartesianGraph var27 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.algorithms.AStar var28 = new demo.pathplanning.algorithms.AStar(var27);
    java.lang.String var29 = var27.toString();
    demo.pathplanning.model.CartesianGraph var32 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var35 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var36 = new demo.pathplanning.model.Location(1, 1);
    boolean var38 = var36.equals((java.lang.Object)0L);
    int var39 = var36.getX();
    int var40 = var36.getX();
    demo.pathplanning.model.CartesianGraph var43 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.algorithms.AStar var44 = new demo.pathplanning.algorithms.AStar(var43);
    demo.pathplanning.model.CartesianGraph var45 = var44.getGraph();
    demo.pathplanning.model.CartesianGraph var46 = var44.getGraph();
    demo.pathplanning.algorithms.PathPlanningContext var47 = new demo.pathplanning.algorithms.PathPlanningContext((demo.pathplanning.algorithms.PathPlanner)var44);
    demo.pathplanning.model.CartesianGraph var48 = var44.getGraph();
    int var49 = var48.getYSize();
    demo.pathplanning.model.CartesianGraph var52 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var55 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var56 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var59 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var62 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var63 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.Node var64 = new demo.pathplanning.model.Node(var48, var56, 1);
    demo.pathplanning.model.CartesianGraph var67 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var70 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var71 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var74 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var75 = var74.getXSize();
    int var76 = var74.getYSize();
    int var77 = var74.getYSize();
    demo.pathplanning.model.CartesianGraph var80 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var81 = var80.getXSize();
    int var82 = var80.getYSize();
    int var83 = var80.getYSize();
    demo.pathplanning.model.CartesianGraph var84 = new demo.pathplanning.model.CartesianGraph(var77, var83);
    demo.pathplanning.model.CartesianGraph var85 = new demo.pathplanning.model.CartesianGraph(1, var77);
    demo.pathplanning.model.CartesianGraph var86 = new demo.pathplanning.model.CartesianGraph(1, var77);
    demo.pathplanning.model.Node var87 = new demo.pathplanning.model.Node(var27, var36, var77);
    demo.pathplanning.model.CartesianGraph var90 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var93 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var94 = new demo.pathplanning.model.Location(1, 1);
    int var95 = var94.getX();
    demo.pathplanning.model.Node var96 = new demo.pathplanning.model.Node(var7, var36, var95);
    int var97 = var7.getYSize();
    java.lang.String var98 = var7.toString();
    int var99 = var7.getYSize();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var8 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var24 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var29 + "' != '" + "0,\n"+ "'", var29.equals("0,\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var38 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var39 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var40 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var45);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var46);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var48);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var49 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var75 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var76 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var77 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var81 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var82 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var83 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var95 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var97 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var98 + "' != '" + "0,\n"+ "'", var98.equals("0,\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var99 == 1);

  }

  public void test271() throws Throwable {

    demo.pathplanning.model.CartesianGraph var2 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.algorithms.AStar var3 = new demo.pathplanning.algorithms.AStar(var2);
    demo.pathplanning.model.CartesianGraph var4 = var3.getGraph();
    demo.pathplanning.model.CartesianGraph var5 = var3.getGraph();
    demo.pathplanning.algorithms.PathPlanningContext var6 = new demo.pathplanning.algorithms.PathPlanningContext((demo.pathplanning.algorithms.PathPlanner)var3);
    demo.pathplanning.model.CartesianGraph var7 = var3.getGraph();
    int var8 = var7.getYSize();
    demo.pathplanning.model.CartesianGraph var11 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var14 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var15 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var18 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var21 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var22 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.Node var23 = new demo.pathplanning.model.Node(var7, var15, 1);
    int var24 = var23.getCost();
    java.util.Collection var25 = var23.getNeighbors();
    int var26 = var23.getCost();
    demo.pathplanning.model.CartesianGraph var29 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var30 = var29.getXSize();
    demo.pathplanning.model.CartesianGraph var33 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var34 = new demo.pathplanning.model.CartesianGraph(var30, 1);
    demo.pathplanning.model.CartesianGraph var37 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.algorithms.AStar var38 = new demo.pathplanning.algorithms.AStar(var37);
    demo.pathplanning.model.CartesianGraph var39 = var38.getGraph();
    demo.pathplanning.model.CartesianGraph var40 = var38.getGraph();
    demo.pathplanning.algorithms.PathPlanningContext var41 = new demo.pathplanning.algorithms.PathPlanningContext((demo.pathplanning.algorithms.PathPlanner)var38);
    demo.pathplanning.model.CartesianGraph var42 = var38.getGraph();
    int var43 = var42.getYSize();
    demo.pathplanning.model.CartesianGraph var44 = new demo.pathplanning.model.CartesianGraph(var30, var43);
    int var45 = var44.getXSize();
    demo.pathplanning.algorithms.AStar var46 = new demo.pathplanning.algorithms.AStar(var44);
    boolean var47 = var23.equals((java.lang.Object)var44);
    demo.pathplanning.algorithms.AStar var48 = new demo.pathplanning.algorithms.AStar(var44);
    java.lang.String var49 = var44.toString();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var8 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var24 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var25);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var26 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var30 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var39);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var40);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var42);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var43 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var45 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var47 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var49 + "' != '" + "0,\n"+ "'", var49.equals("0,\n"));

  }

  public void test272() throws Throwable {

    demo.pathplanning.model.CartesianGraph var2 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.algorithms.AStar var3 = new demo.pathplanning.algorithms.AStar(var2);
    demo.pathplanning.model.CartesianGraph var4 = var3.getGraph();
    demo.pathplanning.model.CartesianGraph var5 = var3.getGraph();
    demo.pathplanning.algorithms.PathPlanningContext var6 = new demo.pathplanning.algorithms.PathPlanningContext((demo.pathplanning.algorithms.PathPlanner)var3);
    demo.pathplanning.model.CartesianGraph var7 = var3.getGraph();
    int var8 = var7.getYSize();
    demo.pathplanning.model.CartesianGraph var11 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var14 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var15 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var18 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var21 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var22 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.Node var23 = new demo.pathplanning.model.Node(var7, var15, 1);
    java.util.Collection var24 = var23.getNeighbors();
    int var25 = var23.getCost();
    int var26 = var23.getCost();
    demo.pathplanning.model.CartesianGraph var29 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.algorithms.AStar var30 = new demo.pathplanning.algorithms.AStar(var29);
    demo.pathplanning.model.CartesianGraph var31 = var30.getGraph();
    demo.pathplanning.model.CartesianGraph var32 = var30.getGraph();
    demo.pathplanning.algorithms.PathPlanningContext var33 = new demo.pathplanning.algorithms.PathPlanningContext((demo.pathplanning.algorithms.PathPlanner)var30);
    demo.pathplanning.model.CartesianGraph var34 = var30.getGraph();
    int var35 = var34.getYSize();
    demo.pathplanning.model.CartesianGraph var38 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var41 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var42 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var45 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var48 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var49 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.Node var50 = new demo.pathplanning.model.Node(var34, var42, 1);
    int var51 = var50.getCost();
    demo.pathplanning.model.CartesianGraph var54 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var55 = var54.getXSize();
    int var56 = var54.getYSize();
    int var57 = var54.getYSize();
    demo.pathplanning.model.CartesianGraph var60 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var61 = new demo.pathplanning.model.Location(var57, 1);
    demo.pathplanning.model.CartesianGraph var62 = new demo.pathplanning.model.CartesianGraph(var51, 1);
    demo.pathplanning.model.CartesianGraph var65 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.algorithms.AStar var66 = new demo.pathplanning.algorithms.AStar(var65);
    demo.pathplanning.model.CartesianGraph var67 = var66.getGraph();
    demo.pathplanning.model.CartesianGraph var68 = var66.getGraph();
    demo.pathplanning.algorithms.PathPlanningContext var69 = new demo.pathplanning.algorithms.PathPlanningContext((demo.pathplanning.algorithms.PathPlanner)var66);
    demo.pathplanning.model.CartesianGraph var70 = var66.getGraph();
    int var71 = var70.getYSize();
    demo.pathplanning.model.CartesianGraph var72 = new demo.pathplanning.model.CartesianGraph(1, var71);
    int var73 = var72.getXSize();
    java.lang.String var74 = var72.toString();
    boolean var75 = var23.equals((java.lang.Object)var72);
    int var76 = var23.getCost();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var8 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var24);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var25 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var26 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var31);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var32);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var34);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var35 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var51 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var55 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var56 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var57 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var67);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var68);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var70);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var71 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var73 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var74 + "' != '" + "0,\n"+ "'", var74.equals("0,\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var75 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var76 == 1);

  }

  public void test273() throws Throwable {

    demo.pathplanning.model.CartesianGraph var2 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var3 = var2.getXSize();
    int var4 = var2.getYSize();
    int var5 = var2.getYSize();
    demo.pathplanning.model.CartesianGraph var8 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var9 = var8.getXSize();
    int var10 = var8.getYSize();
    int var11 = var8.getYSize();
    demo.pathplanning.model.CartesianGraph var14 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var15 = var14.getXSize();
    int var16 = var14.getYSize();
    int var17 = var14.getYSize();
    demo.pathplanning.model.CartesianGraph var18 = new demo.pathplanning.model.CartesianGraph(var11, var17);
    demo.pathplanning.model.CartesianGraph var21 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var24 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var25 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var26 = new demo.pathplanning.model.CartesianGraph(var11, 1);
    demo.pathplanning.model.CartesianGraph var27 = new demo.pathplanning.model.CartesianGraph(var5, var11);
    demo.pathplanning.model.CartesianGraph var30 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var31 = var30.getXSize();
    int var32 = var30.getYSize();
    int var33 = var30.getYSize();
    demo.pathplanning.model.CartesianGraph var36 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var37 = var36.getXSize();
    int var38 = var36.getYSize();
    int var39 = var36.getYSize();
    demo.pathplanning.model.CartesianGraph var40 = new demo.pathplanning.model.CartesianGraph(var33, var39);
    demo.pathplanning.model.CartesianGraph var43 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var46 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var47 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var48 = new demo.pathplanning.model.CartesianGraph(var33, 1);
    demo.pathplanning.model.CartesianGraph var49 = new demo.pathplanning.model.CartesianGraph(var5, 1);
    demo.pathplanning.algorithms.AStar var50 = new demo.pathplanning.algorithms.AStar(var49);
    demo.pathplanning.model.CartesianGraph var53 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var56 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var57 = new demo.pathplanning.model.Location(1, 1);
    int var58 = var57.getX();
    demo.pathplanning.model.Node var59 = var49.getNode(var57);
    java.lang.String var60 = var49.toString();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var3 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var4 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var5 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var9 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var11 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var15 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var16 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var17 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var31 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var32 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var33 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var37 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var38 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var39 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var58 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var59);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var60 + "' != '" + "0,\n"+ "'", var60.equals("0,\n"));

  }

  public void test274() throws Throwable {

    demo.pathplanning.model.CartesianGraph var2 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var3 = var2.getXSize();
    demo.pathplanning.algorithms.AStar var4 = new demo.pathplanning.algorithms.AStar(var2);
    demo.pathplanning.model.CartesianGraph var7 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var10 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var11 = new demo.pathplanning.model.Location(1, 1);
    boolean var13 = var11.equals((java.lang.Object)0L);
    demo.pathplanning.model.Node var14 = var2.getNode(var11);
    int var15 = var2.getXSize();
    java.lang.String var16 = var2.toString();
    java.lang.String var17 = var2.toString();
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      demo.pathplanning.model.Direction var18 = demo.pathplanning.model.Direction.valueOf(var17);
      fail("Expected exception of type java.lang.IllegalArgumentException");
    } catch (java.lang.IllegalArgumentException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var3 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var13 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var14);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var15 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var16 + "' != '" + "0,\n"+ "'", var16.equals("0,\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var17 + "' != '" + "0,\n"+ "'", var17.equals("0,\n"));

  }

  public void test275() throws Throwable {

    demo.pathplanning.model.CartesianGraph var2 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.algorithms.AStar var3 = new demo.pathplanning.algorithms.AStar(var2);
    demo.pathplanning.model.CartesianGraph var4 = var3.getGraph();
    demo.pathplanning.model.CartesianGraph var5 = var3.getGraph();
    demo.pathplanning.algorithms.PathPlanningContext var6 = new demo.pathplanning.algorithms.PathPlanningContext((demo.pathplanning.algorithms.PathPlanner)var3);
    demo.pathplanning.model.CartesianGraph var7 = var3.getGraph();
    int var8 = var7.getYSize();
    demo.pathplanning.model.CartesianGraph var11 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var14 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var15 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var18 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var21 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var22 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.Node var23 = new demo.pathplanning.model.Node(var7, var15, 1);
    java.util.Collection var24 = var23.getNeighbors();
    int var25 = var23.getCost();
    int var26 = var23.getCost();
    java.lang.String var27 = var23.toString();
    demo.pathplanning.model.CartesianGraph var30 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.algorithms.AStar var31 = new demo.pathplanning.algorithms.AStar(var30);
    demo.pathplanning.model.CartesianGraph var32 = var31.getGraph();
    demo.pathplanning.model.CartesianGraph var33 = var31.getGraph();
    demo.pathplanning.algorithms.PathPlanningContext var34 = new demo.pathplanning.algorithms.PathPlanningContext((demo.pathplanning.algorithms.PathPlanner)var31);
    demo.pathplanning.model.CartesianGraph var35 = var31.getGraph();
    int var36 = var35.getYSize();
    demo.pathplanning.model.CartesianGraph var39 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var42 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var43 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var46 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var49 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var50 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.Node var51 = new demo.pathplanning.model.Node(var35, var43, 1);
    java.lang.String var52 = var51.toString();
    boolean var53 = var23.equals((java.lang.Object)var51);
    java.lang.String var54 = var23.toString();
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      demo.pathplanning.model.Direction var55 = demo.pathplanning.model.Direction.valueOf(var54);
      fail("Expected exception of type java.lang.IllegalArgumentException");
    } catch (java.lang.IllegalArgumentException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var8 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var24);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var25 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var26 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var27 + "' != '" + "(1,1)=1"+ "'", var27.equals("(1,1)=1"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var32);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var33);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var35);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var36 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var52 + "' != '" + "(1,1)=1"+ "'", var52.equals("(1,1)=1"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var53 == true);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var54 + "' != '" + "(1,1)=1"+ "'", var54.equals("(1,1)=1"));

  }

  public void test276() throws Throwable {

    demo.pathplanning.model.CartesianGraph var2 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var3 = var2.getXSize();
    int var4 = var2.getYSize();
    int var5 = var2.getYSize();
    demo.pathplanning.model.CartesianGraph var8 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var9 = var8.getXSize();
    int var10 = var8.getYSize();
    int var11 = var8.getYSize();
    demo.pathplanning.model.CartesianGraph var12 = new demo.pathplanning.model.CartesianGraph(var5, var11);
    demo.pathplanning.model.CartesianGraph var15 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var18 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var19 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var20 = new demo.pathplanning.model.CartesianGraph(var5, 1);
    java.lang.String var21 = var20.toString();
    demo.pathplanning.model.CartesianGraph var24 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var27 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var28 = new demo.pathplanning.model.Location(1, 1);
    boolean var30 = var28.equals((java.lang.Object)0L);
    demo.pathplanning.model.Node var31 = var20.getNode(var28);
    demo.pathplanning.model.CartesianGraph var34 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var37 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var38 = new demo.pathplanning.model.Location(1, 1);
    boolean var40 = var38.equals((java.lang.Object)0L);
    int var41 = var38.getX();
    int var42 = var38.getX();
    demo.pathplanning.model.CartesianGraph var45 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var46 = var45.getXSize();
    demo.pathplanning.model.Node var47 = new demo.pathplanning.model.Node(var20, var38, var46);
    demo.pathplanning.model.CartesianGraph var50 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.algorithms.AStar var51 = new demo.pathplanning.algorithms.AStar(var50);
    demo.pathplanning.model.CartesianGraph var52 = var51.getGraph();
    demo.pathplanning.model.CartesianGraph var53 = var51.getGraph();
    demo.pathplanning.algorithms.PathPlanningContext var54 = new demo.pathplanning.algorithms.PathPlanningContext((demo.pathplanning.algorithms.PathPlanner)var51);
    demo.pathplanning.model.CartesianGraph var55 = var51.getGraph();
    int var56 = var55.getYSize();
    demo.pathplanning.model.CartesianGraph var57 = new demo.pathplanning.model.CartesianGraph(var46, var56);
    demo.pathplanning.model.CartesianGraph var60 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var63 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var64 = new demo.pathplanning.model.Location(1, 1);
    int var65 = var64.getY();
    demo.pathplanning.model.CartesianGraph var68 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.algorithms.AStar var69 = new demo.pathplanning.algorithms.AStar(var68);
    demo.pathplanning.model.CartesianGraph var70 = var69.getGraph();
    demo.pathplanning.model.CartesianGraph var71 = var69.getGraph();
    demo.pathplanning.model.CartesianGraph var72 = var69.getGraph();
    demo.pathplanning.algorithms.AStar var73 = new demo.pathplanning.algorithms.AStar(var72);
    int var74 = var72.getYSize();
    demo.pathplanning.model.Node var75 = new demo.pathplanning.model.Node(var57, var64, var74);
    int var76 = var57.getYSize();
    int var77 = var57.getYSize();
    int var78 = var57.getXSize();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var3 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var4 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var5 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var9 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var11 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var21 + "' != '" + "0,\n"+ "'", var21.equals("0,\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var30 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var31);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var40 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var41 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var42 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var46 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var52);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var53);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var55);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var56 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var65 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var70);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var71);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var72);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var74 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var76 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var77 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var78 == 1);

  }

  public void test277() throws Throwable {

    demo.pathplanning.model.CartesianGraph var2 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var3 = var2.getXSize();
    int var4 = var2.getYSize();
    int var5 = var2.getYSize();
    demo.pathplanning.model.CartesianGraph var8 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var9 = var8.getXSize();
    int var10 = var8.getYSize();
    int var11 = var8.getYSize();
    demo.pathplanning.model.CartesianGraph var14 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var15 = var14.getXSize();
    int var16 = var14.getYSize();
    int var17 = var14.getYSize();
    demo.pathplanning.model.CartesianGraph var18 = new demo.pathplanning.model.CartesianGraph(var11, var17);
    demo.pathplanning.model.CartesianGraph var21 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var24 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var25 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var26 = new demo.pathplanning.model.CartesianGraph(var11, 1);
    demo.pathplanning.model.CartesianGraph var27 = new demo.pathplanning.model.CartesianGraph(var5, var11);
    demo.pathplanning.model.CartesianGraph var30 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var31 = var30.getXSize();
    int var32 = var30.getYSize();
    int var33 = var30.getYSize();
    demo.pathplanning.model.CartesianGraph var36 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var37 = var36.getXSize();
    int var38 = var36.getYSize();
    int var39 = var36.getYSize();
    demo.pathplanning.model.CartesianGraph var40 = new demo.pathplanning.model.CartesianGraph(var33, var39);
    demo.pathplanning.model.CartesianGraph var43 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var46 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var47 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var48 = new demo.pathplanning.model.CartesianGraph(var33, 1);
    demo.pathplanning.model.CartesianGraph var49 = new demo.pathplanning.model.CartesianGraph(var5, 1);
    demo.pathplanning.algorithms.AStar var50 = new demo.pathplanning.algorithms.AStar(var49);
    int var51 = var49.getXSize();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var3 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var4 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var5 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var9 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var11 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var15 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var16 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var17 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var31 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var32 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var33 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var37 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var38 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var39 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var51 == 1);

  }

  public void test278() throws Throwable {

    demo.pathplanning.model.CartesianGraph var2 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.algorithms.AStar var3 = new demo.pathplanning.algorithms.AStar(var2);
    demo.pathplanning.model.CartesianGraph var4 = var3.getGraph();
    demo.pathplanning.model.CartesianGraph var5 = var3.getGraph();
    demo.pathplanning.algorithms.PathPlanningContext var6 = new demo.pathplanning.algorithms.PathPlanningContext((demo.pathplanning.algorithms.PathPlanner)var3);
    demo.pathplanning.model.CartesianGraph var7 = var3.getGraph();
    int var8 = var7.getYSize();
    demo.pathplanning.model.CartesianGraph var11 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var14 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var15 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var18 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var21 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var22 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.Node var23 = new demo.pathplanning.model.Node(var7, var15, 1);
    int var24 = var23.getCost();
    java.util.Collection var25 = var23.getNeighbors();
    java.util.Collection var26 = var23.getNeighbors();
    boolean var28 = var23.equals((java.lang.Object)(-1L));
    int var29 = var23.getCost();
    demo.pathplanning.model.CartesianGraph var32 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var33 = var32.getXSize();
    int var34 = var32.getYSize();
    demo.pathplanning.model.CartesianGraph var37 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.algorithms.AStar var38 = new demo.pathplanning.algorithms.AStar(var37);
    java.lang.String var39 = var37.toString();
    demo.pathplanning.model.CartesianGraph var42 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var45 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var46 = new demo.pathplanning.model.Location(1, 1);
    boolean var48 = var46.equals((java.lang.Object)0L);
    demo.pathplanning.model.Node var49 = var37.getNode(var46);
    demo.pathplanning.model.CartesianGraph var52 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var55 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var56 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var59 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var60 = var59.getXSize();
    demo.pathplanning.model.CartesianGraph var63 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var64 = new demo.pathplanning.model.CartesianGraph(var60, 1);
    demo.pathplanning.model.Location var65 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.Node var66 = new demo.pathplanning.model.Node(var32, var46, 1);
    int var67 = var46.getX();
    demo.pathplanning.model.CartesianGraph var70 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var71 = var70.getXSize();
    demo.pathplanning.model.CartesianGraph var74 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var75 = new demo.pathplanning.model.CartesianGraph(var71, 1);
    boolean var76 = var46.equals((java.lang.Object)var71);
    int var77 = var46.getY();
    int var78 = var46.getY();
    int var79 = var46.getY();
    demo.pathplanning.model.CartesianGraph var80 = new demo.pathplanning.model.CartesianGraph(var29, var79);
    demo.pathplanning.model.CartesianGraph var83 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var86 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var87 = new demo.pathplanning.model.Location(1, 1);
    boolean var89 = var87.equals((java.lang.Object)0L);
    int var90 = var87.getX();
    int var91 = var87.getY();
    demo.pathplanning.model.Node var92 = var80.getNode(var87);
    int var93 = var87.getX();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var8 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var24 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var25);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var26);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var28 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var29 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var33 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var34 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var39 + "' != '" + "0,\n"+ "'", var39.equals("0,\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var48 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var49);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var60 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var67 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var71 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var76 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var77 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var78 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var79 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var89 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var90 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var91 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var92);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var93 == 1);

  }

  public void test279() throws Throwable {

    demo.pathplanning.model.CartesianGraph var2 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var3 = var2.getXSize();
    int var4 = var2.getYSize();
    int var5 = var2.getYSize();
    demo.pathplanning.model.CartesianGraph var8 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var9 = var8.getXSize();
    int var10 = var8.getYSize();
    int var11 = var8.getYSize();
    demo.pathplanning.model.CartesianGraph var12 = new demo.pathplanning.model.CartesianGraph(var5, var11);
    demo.pathplanning.model.CartesianGraph var15 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var18 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var19 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var20 = new demo.pathplanning.model.CartesianGraph(var5, 1);
    java.lang.String var21 = var20.toString();
    demo.pathplanning.model.CartesianGraph var24 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var27 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var28 = new demo.pathplanning.model.Location(1, 1);
    boolean var30 = var28.equals((java.lang.Object)0L);
    demo.pathplanning.model.Node var31 = var20.getNode(var28);
    demo.pathplanning.model.CartesianGraph var34 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var37 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var38 = new demo.pathplanning.model.Location(1, 1);
    boolean var40 = var38.equals((java.lang.Object)0L);
    int var41 = var38.getX();
    int var42 = var38.getX();
    demo.pathplanning.model.CartesianGraph var45 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var46 = var45.getXSize();
    demo.pathplanning.model.Node var47 = new demo.pathplanning.model.Node(var20, var38, var46);
    int var48 = var47.getCost();
    java.util.Collection var49 = var47.getNeighbors();
    int var50 = var47.getCost();
    demo.pathplanning.model.Location var51 = var47.getLocation();
    java.lang.String var52 = var47.toString();
    java.lang.String var53 = var47.toString();
    java.lang.String var54 = var47.toString();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var3 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var4 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var5 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var9 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var11 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var21 + "' != '" + "0,\n"+ "'", var21.equals("0,\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var30 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var31);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var40 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var41 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var42 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var46 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var48 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var49);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var50 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var51);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var52 + "' != '" + "(1,1)=1"+ "'", var52.equals("(1,1)=1"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var53 + "' != '" + "(1,1)=1"+ "'", var53.equals("(1,1)=1"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var54 + "' != '" + "(1,1)=1"+ "'", var54.equals("(1,1)=1"));

  }

  public void test280() throws Throwable {

    demo.pathplanning.model.CartesianGraph var2 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var5 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var6 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var9 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var10 = var9.getXSize();
    int var11 = var9.getYSize();
    int var12 = var9.getYSize();
    demo.pathplanning.model.CartesianGraph var15 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var16 = var15.getXSize();
    int var17 = var15.getYSize();
    int var18 = var15.getYSize();
    demo.pathplanning.model.CartesianGraph var19 = new demo.pathplanning.model.CartesianGraph(var12, var18);
    demo.pathplanning.model.CartesianGraph var20 = new demo.pathplanning.model.CartesianGraph(1, var12);
    int var21 = var20.getYSize();
    demo.pathplanning.model.CartesianGraph var24 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var25 = var24.getXSize();
    int var26 = var24.getYSize();
    int var27 = var24.getYSize();
    demo.pathplanning.model.CartesianGraph var30 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var31 = new demo.pathplanning.model.Location(var27, 1);
    java.lang.String var32 = var31.toString();
    demo.pathplanning.model.Node var33 = var20.getNode(var31);
    int var34 = var31.getY();
    java.lang.String var35 = var31.toString();
    int var36 = var31.getX();
    int var37 = var31.getY();
    boolean var39 = var31.equals((java.lang.Object)'#');
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var11 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var12 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var16 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var17 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var18 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var21 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var25 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var26 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var27 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var32 + "' != '" + "(1,1)"+ "'", var32.equals("(1,1)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var33);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var34 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var35 + "' != '" + "(1,1)"+ "'", var35.equals("(1,1)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var36 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var37 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var39 == false);

  }

  public void test281() throws Throwable {

    demo.pathplanning.model.CartesianGraph var2 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.algorithms.AStar var3 = new demo.pathplanning.algorithms.AStar(var2);
    demo.pathplanning.model.CartesianGraph var4 = var3.getGraph();
    demo.pathplanning.model.CartesianGraph var5 = var3.getGraph();
    demo.pathplanning.algorithms.PathPlanningContext var6 = new demo.pathplanning.algorithms.PathPlanningContext((demo.pathplanning.algorithms.PathPlanner)var3);
    demo.pathplanning.model.CartesianGraph var7 = var3.getGraph();
    int var8 = var7.getYSize();
    demo.pathplanning.model.CartesianGraph var11 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var14 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var15 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var18 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var21 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var22 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.Node var23 = new demo.pathplanning.model.Node(var7, var15, 1);
    int var24 = var23.getCost();
    java.util.Collection var25 = var23.getNeighbors();
    java.util.Collection var26 = var23.getNeighbors();
    demo.pathplanning.model.CartesianGraph var29 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var30 = var29.getXSize();
    int var31 = var29.getYSize();
    int var32 = var29.getYSize();
    demo.pathplanning.model.CartesianGraph var35 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var36 = var35.getXSize();
    int var37 = var35.getYSize();
    int var38 = var35.getYSize();
    demo.pathplanning.model.CartesianGraph var39 = new demo.pathplanning.model.CartesianGraph(var32, var38);
    demo.pathplanning.model.CartesianGraph var42 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var45 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var46 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var47 = new demo.pathplanning.model.CartesianGraph(var32, 1);
    java.lang.String var48 = var47.toString();
    demo.pathplanning.model.CartesianGraph var51 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var54 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var55 = new demo.pathplanning.model.Location(1, 1);
    boolean var57 = var55.equals((java.lang.Object)0L);
    demo.pathplanning.model.Node var58 = var47.getNode(var55);
    demo.pathplanning.model.CartesianGraph var61 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var64 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var65 = new demo.pathplanning.model.Location(1, 1);
    boolean var67 = var65.equals((java.lang.Object)0L);
    int var68 = var65.getX();
    int var69 = var65.getX();
    demo.pathplanning.model.CartesianGraph var72 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var73 = var72.getXSize();
    demo.pathplanning.model.Node var74 = new demo.pathplanning.model.Node(var47, var65, var73);
    int var75 = var74.getCost();
    java.util.Collection var76 = var74.getNeighbors();
    demo.pathplanning.model.CartesianGraph var79 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var80 = var79.getXSize();
    demo.pathplanning.algorithms.AStar var81 = new demo.pathplanning.algorithms.AStar(var79);
    demo.pathplanning.model.CartesianGraph var84 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var87 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var88 = new demo.pathplanning.model.Location(1, 1);
    boolean var90 = var88.equals((java.lang.Object)0L);
    demo.pathplanning.model.Node var91 = var79.getNode(var88);
    demo.pathplanning.algorithms.AStar var92 = new demo.pathplanning.algorithms.AStar(var79);
    demo.pathplanning.model.CartesianGraph var93 = var92.getGraph();
    boolean var94 = var74.equals((java.lang.Object)var92);
    java.lang.String var95 = var74.toString();
    java.lang.String var96 = var74.toString();
    boolean var97 = var23.equals((java.lang.Object)var74);
    demo.pathplanning.model.Location var98 = var74.getLocation();
    int var99 = var98.getY();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var8 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var24 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var25);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var26);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var30 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var31 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var32 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var36 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var37 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var38 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var48 + "' != '" + "0,\n"+ "'", var48.equals("0,\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var57 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var58);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var67 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var68 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var69 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var73 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var75 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var76);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var80 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var90 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var91);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var93);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var94 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var95 + "' != '" + "(1,1)=1"+ "'", var95.equals("(1,1)=1"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var96 + "' != '" + "(1,1)=1"+ "'", var96.equals("(1,1)=1"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var97 == true);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var98);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var99 == 1);

  }

  public void test282() throws Throwable {

    demo.pathplanning.model.CartesianGraph var2 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var3 = var2.getXSize();
    int var4 = var2.getYSize();
    demo.pathplanning.model.CartesianGraph var7 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.algorithms.AStar var8 = new demo.pathplanning.algorithms.AStar(var7);
    java.lang.String var9 = var7.toString();
    demo.pathplanning.model.CartesianGraph var12 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var15 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var16 = new demo.pathplanning.model.Location(1, 1);
    boolean var18 = var16.equals((java.lang.Object)0L);
    demo.pathplanning.model.Node var19 = var7.getNode(var16);
    demo.pathplanning.model.CartesianGraph var22 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var25 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var26 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var29 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var30 = var29.getXSize();
    demo.pathplanning.model.CartesianGraph var33 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var34 = new demo.pathplanning.model.CartesianGraph(var30, 1);
    demo.pathplanning.model.Location var35 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.Node var36 = new demo.pathplanning.model.Node(var2, var16, 1);
    int var37 = var16.getX();
    java.lang.String var38 = var16.toString();
    demo.pathplanning.model.CartesianGraph var41 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.algorithms.AStar var42 = new demo.pathplanning.algorithms.AStar(var41);
    java.lang.String var43 = var41.toString();
    demo.pathplanning.model.CartesianGraph var46 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var49 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var50 = new demo.pathplanning.model.Location(1, 1);
    boolean var52 = var50.equals((java.lang.Object)0L);
    demo.pathplanning.model.Node var53 = var41.getNode(var50);
    java.lang.String var54 = var50.toString();
    demo.pathplanning.model.CartesianGraph var57 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.algorithms.AStar var58 = new demo.pathplanning.algorithms.AStar(var57);
    demo.pathplanning.model.CartesianGraph var59 = var58.getGraph();
    demo.pathplanning.model.CartesianGraph var60 = var58.getGraph();
    demo.pathplanning.algorithms.PathPlanningContext var61 = new demo.pathplanning.algorithms.PathPlanningContext((demo.pathplanning.algorithms.PathPlanner)var58);
    demo.pathplanning.model.CartesianGraph var62 = var58.getGraph();
    int var63 = var62.getYSize();
    demo.pathplanning.model.CartesianGraph var66 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var69 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var70 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var73 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var76 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var77 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.Node var78 = new demo.pathplanning.model.Node(var62, var70, 1);
    boolean var79 = var50.equals((java.lang.Object)1);
    int var80 = var50.getX();
    int var81 = var50.getY();
    int var82 = var50.getY();
    boolean var83 = var16.equals((java.lang.Object)var50);
    int var84 = var16.getX();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var3 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var4 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var9 + "' != '" + "0,\n"+ "'", var9.equals("0,\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var18 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var19);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var30 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var37 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var38 + "' != '" + "(1,1)"+ "'", var38.equals("(1,1)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var43 + "' != '" + "0,\n"+ "'", var43.equals("0,\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var52 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var53);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var54 + "' != '" + "(1,1)"+ "'", var54.equals("(1,1)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var59);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var60);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var62);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var63 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var79 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var80 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var81 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var82 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var83 == true);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var84 == 1);

  }

  public void test283() throws Throwable {

    demo.pathplanning.model.CartesianGraph var2 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var3 = var2.getXSize();
    demo.pathplanning.algorithms.AStar var4 = new demo.pathplanning.algorithms.AStar(var2);
    demo.pathplanning.model.CartesianGraph var7 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var10 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var11 = new demo.pathplanning.model.Location(1, 1);
    boolean var13 = var11.equals((java.lang.Object)0L);
    demo.pathplanning.model.Node var14 = var2.getNode(var11);
    int var15 = var2.getXSize();
    java.lang.String var16 = var2.toString();
    demo.pathplanning.model.CartesianGraph var19 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var22 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var23 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var26 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var27 = var26.getXSize();
    int var28 = var26.getYSize();
    int var29 = var26.getYSize();
    demo.pathplanning.model.CartesianGraph var32 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var33 = var32.getXSize();
    int var34 = var32.getYSize();
    int var35 = var32.getYSize();
    demo.pathplanning.model.CartesianGraph var36 = new demo.pathplanning.model.CartesianGraph(var29, var35);
    demo.pathplanning.model.CartesianGraph var37 = new demo.pathplanning.model.CartesianGraph(1, var29);
    demo.pathplanning.model.CartesianGraph var40 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var43 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var44 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var47 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var48 = var47.getXSize();
    int var49 = var47.getYSize();
    int var50 = var47.getYSize();
    demo.pathplanning.model.CartesianGraph var53 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var54 = var53.getXSize();
    int var55 = var53.getYSize();
    int var56 = var53.getYSize();
    demo.pathplanning.model.CartesianGraph var57 = new demo.pathplanning.model.CartesianGraph(var50, var56);
    demo.pathplanning.model.CartesianGraph var58 = new demo.pathplanning.model.CartesianGraph(1, var50);
    demo.pathplanning.model.Location var59 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var62 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var65 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var66 = new demo.pathplanning.model.Location(1, 1);
    int var67 = var66.getY();
    demo.pathplanning.model.Node var68 = new demo.pathplanning.model.Node(var2, var59, var67);
    java.lang.String var69 = var2.toString();
    demo.pathplanning.algorithms.AStar var70 = new demo.pathplanning.algorithms.AStar(var2);
    int var71 = var2.getYSize();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var3 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var13 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var14);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var15 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var16 + "' != '" + "0,\n"+ "'", var16.equals("0,\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var27 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var28 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var29 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var33 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var34 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var35 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var48 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var49 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var50 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var54 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var55 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var56 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var67 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var69 + "' != '" + "0,\n"+ "'", var69.equals("0,\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var71 == 1);

  }

  public void test284() throws Throwable {

    demo.pathplanning.model.CartesianGraph var2 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var3 = var2.getXSize();
    demo.pathplanning.algorithms.AStar var4 = new demo.pathplanning.algorithms.AStar(var2);
    demo.pathplanning.algorithms.PathPlanningContext var5 = new demo.pathplanning.algorithms.PathPlanningContext((demo.pathplanning.algorithms.PathPlanner)var4);
    demo.pathplanning.model.CartesianGraph var8 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var11 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var12 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var15 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var16 = var15.getXSize();
    demo.pathplanning.model.CartesianGraph var19 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var20 = new demo.pathplanning.model.CartesianGraph(var16, 1);
    demo.pathplanning.model.Location var21 = new demo.pathplanning.model.Location(1, 1);
    int var22 = var21.getX();
    int var23 = var21.getX();
    demo.pathplanning.model.CartesianGraph var26 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var27 = var26.getXSize();
    demo.pathplanning.algorithms.AStar var28 = new demo.pathplanning.algorithms.AStar(var26);
    int var29 = var26.getYSize();
    int var30 = var26.getXSize();
    demo.pathplanning.model.CartesianGraph var33 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var36 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var37 = new demo.pathplanning.model.Location(1, 1);
    boolean var39 = var37.equals((java.lang.Object)0L);
    int var40 = var37.getX();
    int var41 = var37.getX();
    int var42 = var37.getY();
    demo.pathplanning.model.Node var43 = var26.getNode(var37);
    demo.pathplanning.model.CartesianGraph var46 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var47 = var46.getXSize();
    int var48 = var46.getYSize();
    demo.pathplanning.model.CartesianGraph var51 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.algorithms.AStar var52 = new demo.pathplanning.algorithms.AStar(var51);
    java.lang.String var53 = var51.toString();
    demo.pathplanning.model.CartesianGraph var56 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var59 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var60 = new demo.pathplanning.model.Location(1, 1);
    boolean var62 = var60.equals((java.lang.Object)0L);
    demo.pathplanning.model.Node var63 = var51.getNode(var60);
    demo.pathplanning.model.CartesianGraph var66 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var69 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var70 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var73 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var74 = var73.getXSize();
    demo.pathplanning.model.CartesianGraph var77 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var78 = new demo.pathplanning.model.CartesianGraph(var74, 1);
    demo.pathplanning.model.Location var79 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.Node var80 = new demo.pathplanning.model.Node(var46, var60, 1);
    int var81 = var60.getX();
    demo.pathplanning.model.CartesianGraph var84 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var85 = var84.getXSize();
    demo.pathplanning.model.CartesianGraph var88 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var89 = new demo.pathplanning.model.CartesianGraph(var85, 1);
    boolean var90 = var60.equals((java.lang.Object)var85);
    demo.pathplanning.model.Node var91 = var26.getNode(var60);
    java.util.List var92 = var5.getPath(var21, var60);

  }

  public void test285() throws Throwable {

    demo.pathplanning.model.CartesianGraph var2 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.algorithms.AStar var3 = new demo.pathplanning.algorithms.AStar(var2);
    demo.pathplanning.model.CartesianGraph var4 = var3.getGraph();
    demo.pathplanning.model.CartesianGraph var5 = var3.getGraph();
    int var6 = var5.getYSize();
    demo.pathplanning.model.CartesianGraph var9 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var10 = var9.getXSize();
    demo.pathplanning.model.CartesianGraph var13 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var14 = new demo.pathplanning.model.CartesianGraph(var10, 1);
    demo.pathplanning.model.CartesianGraph var17 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.algorithms.AStar var18 = new demo.pathplanning.algorithms.AStar(var17);
    demo.pathplanning.model.CartesianGraph var19 = var18.getGraph();
    demo.pathplanning.model.CartesianGraph var20 = var18.getGraph();
    demo.pathplanning.algorithms.PathPlanningContext var21 = new demo.pathplanning.algorithms.PathPlanningContext((demo.pathplanning.algorithms.PathPlanner)var18);
    demo.pathplanning.model.CartesianGraph var22 = var18.getGraph();
    int var23 = var22.getYSize();
    demo.pathplanning.model.CartesianGraph var24 = new demo.pathplanning.model.CartesianGraph(var10, var23);
    demo.pathplanning.model.CartesianGraph var27 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var30 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var31 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var34 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var35 = var34.getXSize();
    demo.pathplanning.model.CartesianGraph var38 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var39 = new demo.pathplanning.model.CartesianGraph(var35, 1);
    demo.pathplanning.model.Location var40 = new demo.pathplanning.model.Location(1, 1);
    int var41 = var40.getX();
    int var42 = var40.getY();
    demo.pathplanning.model.Node var43 = var24.getNode(var40);
    demo.pathplanning.model.Node var44 = var5.getNode(var40);
    demo.pathplanning.model.CartesianGraph var47 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var48 = var47.getXSize();
    demo.pathplanning.model.CartesianGraph var51 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var52 = new demo.pathplanning.model.CartesianGraph(var48, 1);
    demo.pathplanning.model.CartesianGraph var55 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.algorithms.AStar var56 = new demo.pathplanning.algorithms.AStar(var55);
    demo.pathplanning.model.CartesianGraph var57 = var56.getGraph();
    demo.pathplanning.model.CartesianGraph var58 = var56.getGraph();
    demo.pathplanning.algorithms.PathPlanningContext var59 = new demo.pathplanning.algorithms.PathPlanningContext((demo.pathplanning.algorithms.PathPlanner)var56);
    demo.pathplanning.model.CartesianGraph var60 = var56.getGraph();
    int var61 = var60.getYSize();
    demo.pathplanning.model.CartesianGraph var62 = new demo.pathplanning.model.CartesianGraph(var48, var61);
    int var63 = var62.getXSize();
    demo.pathplanning.algorithms.AStar var64 = new demo.pathplanning.algorithms.AStar(var62);
    boolean var65 = var40.equals((java.lang.Object)var62);
    int var66 = var40.getX();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var6 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var19);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var20);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var22);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var23 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var35 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var41 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var42 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var43);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var44);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var48 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var57);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var58);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var60);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var61 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var63 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var65 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var66 == 1);

  }

  public void test286() throws Throwable {

    demo.pathplanning.model.CartesianGraph var2 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.algorithms.AStar var3 = new demo.pathplanning.algorithms.AStar(var2);
    java.lang.String var4 = var2.toString();
    demo.pathplanning.model.CartesianGraph var7 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var8 = var7.getXSize();
    int var9 = var7.getYSize();
    demo.pathplanning.model.CartesianGraph var12 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.algorithms.AStar var13 = new demo.pathplanning.algorithms.AStar(var12);
    java.lang.String var14 = var12.toString();
    demo.pathplanning.model.CartesianGraph var17 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var20 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var21 = new demo.pathplanning.model.Location(1, 1);
    boolean var23 = var21.equals((java.lang.Object)0L);
    demo.pathplanning.model.Node var24 = var12.getNode(var21);
    demo.pathplanning.model.CartesianGraph var27 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var30 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var31 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var34 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var35 = var34.getXSize();
    demo.pathplanning.model.CartesianGraph var38 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var39 = new demo.pathplanning.model.CartesianGraph(var35, 1);
    demo.pathplanning.model.Location var40 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.Node var41 = new demo.pathplanning.model.Node(var7, var21, 1);
    int var42 = var21.getX();
    demo.pathplanning.model.CartesianGraph var45 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var46 = var45.getXSize();
    demo.pathplanning.model.CartesianGraph var49 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var50 = new demo.pathplanning.model.CartesianGraph(var46, 1);
    int var51 = var50.getYSize();
    boolean var52 = var21.equals((java.lang.Object)var51);
    demo.pathplanning.model.CartesianGraph var55 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.algorithms.AStar var56 = new demo.pathplanning.algorithms.AStar(var55);
    demo.pathplanning.model.CartesianGraph var57 = var56.getGraph();
    demo.pathplanning.model.CartesianGraph var58 = var56.getGraph();
    int var59 = var58.getYSize();
    demo.pathplanning.model.CartesianGraph var62 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var63 = var62.getXSize();
    demo.pathplanning.model.CartesianGraph var66 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var67 = new demo.pathplanning.model.CartesianGraph(var63, 1);
    demo.pathplanning.model.CartesianGraph var70 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.algorithms.AStar var71 = new demo.pathplanning.algorithms.AStar(var70);
    demo.pathplanning.model.CartesianGraph var72 = var71.getGraph();
    demo.pathplanning.model.CartesianGraph var73 = var71.getGraph();
    demo.pathplanning.algorithms.PathPlanningContext var74 = new demo.pathplanning.algorithms.PathPlanningContext((demo.pathplanning.algorithms.PathPlanner)var71);
    demo.pathplanning.model.CartesianGraph var75 = var71.getGraph();
    int var76 = var75.getYSize();
    demo.pathplanning.model.CartesianGraph var77 = new demo.pathplanning.model.CartesianGraph(var63, var76);
    demo.pathplanning.model.CartesianGraph var80 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var83 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var84 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var87 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var88 = var87.getXSize();
    demo.pathplanning.model.CartesianGraph var91 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var92 = new demo.pathplanning.model.CartesianGraph(var88, 1);
    demo.pathplanning.model.Location var93 = new demo.pathplanning.model.Location(1, 1);
    int var94 = var93.getX();
    int var95 = var93.getY();
    demo.pathplanning.model.Node var96 = var77.getNode(var93);
    demo.pathplanning.model.Node var97 = var58.getNode(var93);
    int var98 = var93.getY();
    demo.pathplanning.model.Node var99 = new demo.pathplanning.model.Node(var2, var21, var98);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var4 + "' != '" + "0,\n"+ "'", var4.equals("0,\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var8 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var9 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var14 + "' != '" + "0,\n"+ "'", var14.equals("0,\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var23 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var24);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var35 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var42 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var46 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var51 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var52 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var57);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var58);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var59 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var63 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var72);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var73);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var75);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var76 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var88 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var94 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var95 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var96);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var97);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var98 == 1);

  }

  public void test287() throws Throwable {

    demo.pathplanning.model.CartesianGraph var2 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var3 = var2.getXSize();
    int var4 = var2.getYSize();
    int var5 = var2.getYSize();
    demo.pathplanning.model.CartesianGraph var8 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var9 = var8.getXSize();
    int var10 = var8.getYSize();
    int var11 = var8.getYSize();
    demo.pathplanning.model.CartesianGraph var12 = new demo.pathplanning.model.CartesianGraph(var5, var11);
    demo.pathplanning.model.CartesianGraph var15 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var18 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var19 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var20 = new demo.pathplanning.model.CartesianGraph(var5, 1);
    java.lang.String var21 = var20.toString();
    demo.pathplanning.model.CartesianGraph var24 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var27 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var28 = new demo.pathplanning.model.Location(1, 1);
    boolean var30 = var28.equals((java.lang.Object)0L);
    demo.pathplanning.model.Node var31 = var20.getNode(var28);
    demo.pathplanning.model.CartesianGraph var34 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var37 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var38 = new demo.pathplanning.model.Location(1, 1);
    boolean var40 = var38.equals((java.lang.Object)0L);
    int var41 = var38.getX();
    int var42 = var38.getX();
    demo.pathplanning.model.CartesianGraph var45 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var46 = var45.getXSize();
    demo.pathplanning.model.Node var47 = new demo.pathplanning.model.Node(var20, var38, var46);
    int var48 = var47.getCost();
    demo.pathplanning.model.CartesianGraph var51 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var52 = var51.getXSize();
    int var53 = var51.getYSize();
    int var54 = var51.getYSize();
    demo.pathplanning.model.CartesianGraph var57 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var58 = new demo.pathplanning.model.Location(var54, 1);
    java.lang.String var59 = var58.toString();
    boolean var60 = var47.equals((java.lang.Object)var58);
    java.lang.String var61 = var47.toString();
    int var62 = var47.getCost();
    java.util.Collection var63 = var47.getNeighbors();
    java.lang.String var64 = var47.toString();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var3 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var4 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var5 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var9 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var11 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var21 + "' != '" + "0,\n"+ "'", var21.equals("0,\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var30 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var31);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var40 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var41 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var42 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var46 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var48 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var52 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var53 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var54 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var59 + "' != '" + "(1,1)"+ "'", var59.equals("(1,1)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var60 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var61 + "' != '" + "(1,1)=1"+ "'", var61.equals("(1,1)=1"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var62 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var63);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var64 + "' != '" + "(1,1)=1"+ "'", var64.equals("(1,1)=1"));

  }

  public void test288() throws Throwable {

    demo.pathplanning.model.CartesianGraph var2 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var3 = var2.getXSize();
    int var4 = var2.getYSize();
    int var5 = var2.getYSize();
    demo.pathplanning.model.CartesianGraph var8 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var9 = var8.getXSize();
    int var10 = var8.getYSize();
    int var11 = var8.getYSize();
    demo.pathplanning.model.CartesianGraph var12 = new demo.pathplanning.model.CartesianGraph(var5, var11);
    demo.pathplanning.model.CartesianGraph var15 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var18 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var19 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var20 = new demo.pathplanning.model.CartesianGraph(var5, 1);
    int var21 = var20.getXSize();
    demo.pathplanning.model.CartesianGraph var24 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var27 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var28 = new demo.pathplanning.model.Location(1, 1);
    int var29 = var28.getY();
    demo.pathplanning.model.CartesianGraph var32 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var33 = var32.getXSize();
    int var34 = var32.getYSize();
    demo.pathplanning.model.CartesianGraph var37 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var38 = var37.getXSize();
    int var39 = var37.getYSize();
    demo.pathplanning.model.CartesianGraph var42 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.algorithms.AStar var43 = new demo.pathplanning.algorithms.AStar(var42);
    java.lang.String var44 = var42.toString();
    demo.pathplanning.model.CartesianGraph var47 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var50 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var51 = new demo.pathplanning.model.Location(1, 1);
    boolean var53 = var51.equals((java.lang.Object)0L);
    demo.pathplanning.model.Node var54 = var42.getNode(var51);
    demo.pathplanning.model.CartesianGraph var57 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var60 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var61 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var64 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var65 = var64.getXSize();
    demo.pathplanning.model.CartesianGraph var68 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var69 = new demo.pathplanning.model.CartesianGraph(var65, 1);
    demo.pathplanning.model.Location var70 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.Node var71 = new demo.pathplanning.model.Node(var37, var51, 1);
    demo.pathplanning.model.CartesianGraph var72 = new demo.pathplanning.model.CartesianGraph(var34, 1);
    demo.pathplanning.model.Node var73 = new demo.pathplanning.model.Node(var20, var28, 1);
    demo.pathplanning.model.CartesianGraph var76 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var79 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var80 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.Location var82 = new demo.pathplanning.model.Location(1, (-1));
    demo.pathplanning.model.CartesianGraph var83 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var84 = var83.getYSize();
    demo.pathplanning.algorithms.AStar var85 = new demo.pathplanning.algorithms.AStar(var83);
    demo.pathplanning.algorithms.PathPlanningContext var86 = new demo.pathplanning.algorithms.PathPlanningContext((demo.pathplanning.algorithms.PathPlanner)var85);
    demo.pathplanning.algorithms.PathPlanningContext var87 = new demo.pathplanning.algorithms.PathPlanningContext((demo.pathplanning.algorithms.PathPlanner)var85);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var3 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var4 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var5 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var9 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var11 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var21 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var29 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var33 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var34 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var38 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var39 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var44 + "' != '" + "0,\n"+ "'", var44.equals("0,\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var53 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var54);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var65 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var84 == 1);

  }

  public void test289() throws Throwable {

    demo.pathplanning.model.CartesianGraph var2 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var3 = var2.getXSize();
    demo.pathplanning.algorithms.AStar var4 = new demo.pathplanning.algorithms.AStar(var2);
    demo.pathplanning.model.CartesianGraph var7 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var10 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var11 = new demo.pathplanning.model.Location(1, 1);
    boolean var13 = var11.equals((java.lang.Object)0L);
    demo.pathplanning.model.Node var14 = var2.getNode(var11);
    int var15 = var2.getYSize();
    demo.pathplanning.model.CartesianGraph var18 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var19 = var18.getXSize();
    int var20 = var18.getYSize();
    int var21 = var18.getYSize();
    demo.pathplanning.model.CartesianGraph var24 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var25 = new demo.pathplanning.model.Location(var21, 1);
    java.lang.String var26 = var25.toString();
    demo.pathplanning.model.CartesianGraph var29 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var32 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var33 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var36 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var37 = var36.getXSize();
    int var38 = var36.getYSize();
    int var39 = var36.getYSize();
    demo.pathplanning.model.CartesianGraph var42 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var43 = var42.getXSize();
    int var44 = var42.getYSize();
    int var45 = var42.getYSize();
    demo.pathplanning.model.CartesianGraph var46 = new demo.pathplanning.model.CartesianGraph(var39, var45);
    demo.pathplanning.model.CartesianGraph var47 = new demo.pathplanning.model.CartesianGraph(1, var39);
    demo.pathplanning.model.Node var48 = new demo.pathplanning.model.Node(var2, var25, var39);
    java.util.Collection var49 = var48.getNeighbors();
    int var50 = var48.getCost();
    demo.pathplanning.model.CartesianGraph var53 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var54 = var53.getXSize();
    demo.pathplanning.model.CartesianGraph var57 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var58 = new demo.pathplanning.model.CartesianGraph(var54, 1);
    demo.pathplanning.model.CartesianGraph var61 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.algorithms.AStar var62 = new demo.pathplanning.algorithms.AStar(var61);
    demo.pathplanning.model.CartesianGraph var63 = var62.getGraph();
    demo.pathplanning.model.CartesianGraph var64 = var62.getGraph();
    demo.pathplanning.algorithms.PathPlanningContext var65 = new demo.pathplanning.algorithms.PathPlanningContext((demo.pathplanning.algorithms.PathPlanner)var62);
    demo.pathplanning.model.CartesianGraph var66 = var62.getGraph();
    int var67 = var66.getYSize();
    demo.pathplanning.model.CartesianGraph var68 = new demo.pathplanning.model.CartesianGraph(var54, var67);
    int var69 = var68.getXSize();
    demo.pathplanning.algorithms.AStar var70 = new demo.pathplanning.algorithms.AStar(var68);
    java.lang.String var71 = var68.toString();
    boolean var72 = var48.equals((java.lang.Object)var68);
    demo.pathplanning.model.CartesianGraph var75 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var78 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var79 = new demo.pathplanning.model.Location(1, 1);
    boolean var81 = var79.equals((java.lang.Object)0L);
    int var82 = var79.getX();
    int var83 = var79.getX();
    int var84 = var79.getY();
    demo.pathplanning.model.Node var85 = var68.getNode(var79);
    int var86 = var79.getY();
    int var87 = var79.getX();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var3 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var13 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var14);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var15 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var19 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var20 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var21 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var26 + "' != '" + "(1,1)"+ "'", var26.equals("(1,1)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var37 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var38 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var39 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var43 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var44 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var45 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var49);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var50 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var54 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var63);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var64);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var66);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var67 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var69 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var71 + "' != '" + "0,\n"+ "'", var71.equals("0,\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var72 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var81 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var82 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var83 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var84 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var85);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var86 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var87 == 1);

  }

  public void test290() throws Throwable {

    demo.pathplanning.model.CartesianGraph var2 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.algorithms.AStar var3 = new demo.pathplanning.algorithms.AStar(var2);
    demo.pathplanning.model.CartesianGraph var4 = var3.getGraph();
    demo.pathplanning.model.CartesianGraph var5 = var3.getGraph();
    demo.pathplanning.algorithms.PathPlanningContext var6 = new demo.pathplanning.algorithms.PathPlanningContext((demo.pathplanning.algorithms.PathPlanner)var3);
    demo.pathplanning.model.CartesianGraph var7 = var3.getGraph();
    int var8 = var7.getYSize();
    demo.pathplanning.model.CartesianGraph var11 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var14 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var15 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var18 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var21 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var22 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.Node var23 = new demo.pathplanning.model.Node(var7, var15, 1);
    demo.pathplanning.model.CartesianGraph var26 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var29 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var30 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var33 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var34 = var33.getXSize();
    int var35 = var33.getYSize();
    int var36 = var33.getYSize();
    demo.pathplanning.model.CartesianGraph var39 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var40 = var39.getXSize();
    int var41 = var39.getYSize();
    int var42 = var39.getYSize();
    demo.pathplanning.model.CartesianGraph var43 = new demo.pathplanning.model.CartesianGraph(var36, var42);
    demo.pathplanning.model.CartesianGraph var44 = new demo.pathplanning.model.CartesianGraph(1, var36);
    demo.pathplanning.model.CartesianGraph var47 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var50 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var51 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var54 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var55 = var54.getXSize();
    int var56 = var54.getYSize();
    int var57 = var54.getYSize();
    demo.pathplanning.model.CartesianGraph var60 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var61 = var60.getXSize();
    int var62 = var60.getYSize();
    int var63 = var60.getYSize();
    demo.pathplanning.model.CartesianGraph var64 = new demo.pathplanning.model.CartesianGraph(var57, var63);
    demo.pathplanning.model.CartesianGraph var65 = new demo.pathplanning.model.CartesianGraph(1, var57);
    demo.pathplanning.model.Location var66 = new demo.pathplanning.model.Location(1, 1);
    boolean var67 = var23.equals((java.lang.Object)1);
    demo.pathplanning.model.Location var68 = var23.getLocation();
    java.util.Collection var69 = var23.getNeighbors();
    demo.pathplanning.model.Location var70 = var23.getLocation();
    int var71 = var23.getCost();
    demo.pathplanning.model.Location var72 = var23.getLocation();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var8 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var34 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var35 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var36 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var40 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var41 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var42 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var55 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var56 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var57 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var61 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var62 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var63 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var67 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var68);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var69);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var70);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var71 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var72);

  }

  public void test291() throws Throwable {

    demo.pathplanning.model.CartesianGraph var2 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var3 = var2.getXSize();
    int var4 = var2.getYSize();
    demo.pathplanning.model.CartesianGraph var7 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.algorithms.AStar var8 = new demo.pathplanning.algorithms.AStar(var7);
    java.lang.String var9 = var7.toString();
    demo.pathplanning.model.CartesianGraph var12 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var15 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var16 = new demo.pathplanning.model.Location(1, 1);
    boolean var18 = var16.equals((java.lang.Object)0L);
    demo.pathplanning.model.Node var19 = var7.getNode(var16);
    demo.pathplanning.model.CartesianGraph var22 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var25 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var26 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var29 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var30 = var29.getXSize();
    demo.pathplanning.model.CartesianGraph var33 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var34 = new demo.pathplanning.model.CartesianGraph(var30, 1);
    demo.pathplanning.model.Location var35 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.Node var36 = new demo.pathplanning.model.Node(var2, var16, 1);
    demo.pathplanning.model.CartesianGraph var39 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var40 = var39.getXSize();
    demo.pathplanning.algorithms.AStar var41 = new demo.pathplanning.algorithms.AStar(var39);
    demo.pathplanning.model.CartesianGraph var44 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var47 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var48 = new demo.pathplanning.model.Location(1, 1);
    boolean var50 = var48.equals((java.lang.Object)0L);
    demo.pathplanning.model.Node var51 = var39.getNode(var48);
    int var52 = var39.getXSize();
    boolean var53 = var16.equals((java.lang.Object)var39);
    int var54 = var39.getXSize();
    demo.pathplanning.model.CartesianGraph var57 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.algorithms.AStar var58 = new demo.pathplanning.algorithms.AStar(var57);
    demo.pathplanning.model.CartesianGraph var59 = var58.getGraph();
    demo.pathplanning.model.CartesianGraph var60 = var58.getGraph();
    demo.pathplanning.algorithms.PathPlanningContext var61 = new demo.pathplanning.algorithms.PathPlanningContext((demo.pathplanning.algorithms.PathPlanner)var58);
    demo.pathplanning.model.CartesianGraph var62 = var58.getGraph();
    int var63 = var62.getYSize();
    demo.pathplanning.model.CartesianGraph var66 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var69 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var70 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var73 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var76 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var77 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.Node var78 = new demo.pathplanning.model.Node(var62, var70, 1);
    int var79 = var70.getX();
    demo.pathplanning.model.CartesianGraph var80 = new demo.pathplanning.model.CartesianGraph(var54, var79);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var3 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var4 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var9 + "' != '" + "0,\n"+ "'", var9.equals("0,\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var18 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var19);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var30 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var40 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var50 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var51);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var52 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var53 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var54 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var59);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var60);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var62);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var63 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var79 == 1);

  }

  public void test292() throws Throwable {

    demo.pathplanning.model.CartesianGraph var2 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.algorithms.AStar var3 = new demo.pathplanning.algorithms.AStar(var2);
    demo.pathplanning.model.CartesianGraph var4 = var3.getGraph();
    demo.pathplanning.model.CartesianGraph var5 = var3.getGraph();
    demo.pathplanning.algorithms.PathPlanningContext var6 = new demo.pathplanning.algorithms.PathPlanningContext((demo.pathplanning.algorithms.PathPlanner)var3);
    demo.pathplanning.model.CartesianGraph var7 = var3.getGraph();
    int var8 = var7.getYSize();
    demo.pathplanning.model.CartesianGraph var11 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var14 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var15 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var18 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var21 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var22 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.Node var23 = new demo.pathplanning.model.Node(var7, var15, 1);
    java.util.Collection var24 = var23.getNeighbors();
    int var25 = var23.getCost();
    java.util.Collection var26 = var23.getNeighbors();
    demo.pathplanning.model.CartesianGraph var29 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.algorithms.AStar var30 = new demo.pathplanning.algorithms.AStar(var29);
    demo.pathplanning.model.CartesianGraph var31 = var30.getGraph();
    demo.pathplanning.model.CartesianGraph var32 = var30.getGraph();
    demo.pathplanning.algorithms.PathPlanningContext var33 = new demo.pathplanning.algorithms.PathPlanningContext((demo.pathplanning.algorithms.PathPlanner)var30);
    demo.pathplanning.model.CartesianGraph var34 = var30.getGraph();
    int var35 = var34.getYSize();
    demo.pathplanning.model.CartesianGraph var38 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var41 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var42 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var45 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var48 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var49 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.Node var50 = new demo.pathplanning.model.Node(var34, var42, 1);
    java.util.Collection var51 = var50.getNeighbors();
    int var52 = var50.getCost();
    boolean var53 = var23.equals((java.lang.Object)var52);
    demo.pathplanning.model.Location var54 = var23.getLocation();
    demo.pathplanning.model.Location var55 = var23.getLocation();
    int var56 = var55.getY();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var8 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var24);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var25 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var26);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var31);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var32);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var34);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var35 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var51);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var52 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var53 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var54);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var55);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var56 == 1);

  }

  public void test293() throws Throwable {

    demo.pathplanning.model.CartesianGraph var2 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var3 = var2.getXSize();
    int var4 = var2.getYSize();
    int var5 = var2.getYSize();
    demo.pathplanning.model.CartesianGraph var8 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var9 = var8.getXSize();
    int var10 = var8.getYSize();
    int var11 = var8.getYSize();
    demo.pathplanning.model.CartesianGraph var12 = new demo.pathplanning.model.CartesianGraph(var5, var11);
    demo.pathplanning.model.CartesianGraph var15 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var18 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var19 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var20 = new demo.pathplanning.model.CartesianGraph(var5, 1);
    java.lang.String var21 = var20.toString();
    demo.pathplanning.model.CartesianGraph var24 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var27 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var28 = new demo.pathplanning.model.Location(1, 1);
    boolean var30 = var28.equals((java.lang.Object)0L);
    demo.pathplanning.model.Node var31 = var20.getNode(var28);
    demo.pathplanning.model.CartesianGraph var34 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var37 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var38 = new demo.pathplanning.model.Location(1, 1);
    boolean var40 = var38.equals((java.lang.Object)0L);
    int var41 = var38.getX();
    int var42 = var38.getX();
    demo.pathplanning.model.CartesianGraph var45 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var46 = var45.getXSize();
    demo.pathplanning.model.Node var47 = new demo.pathplanning.model.Node(var20, var38, var46);
    int var48 = var47.getCost();
    java.util.Collection var49 = var47.getNeighbors();
    demo.pathplanning.model.Location var50 = var47.getLocation();
    int var51 = var50.getY();
    demo.pathplanning.model.CartesianGraph var54 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var57 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var58 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var61 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var62 = var61.getXSize();
    demo.pathplanning.model.CartesianGraph var65 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var66 = new demo.pathplanning.model.CartesianGraph(var62, 1);
    demo.pathplanning.model.Location var67 = new demo.pathplanning.model.Location(1, 1);
    int var68 = var67.getX();
    int var69 = var67.getY();
    demo.pathplanning.model.CartesianGraph var72 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.algorithms.AStar var73 = new demo.pathplanning.algorithms.AStar(var72);
    boolean var74 = var67.equals((java.lang.Object)var73);
    int var75 = var67.getY();
    boolean var76 = var50.equals((java.lang.Object)var67);
    java.lang.String var77 = var50.toString();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var3 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var4 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var5 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var9 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var11 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var21 + "' != '" + "0,\n"+ "'", var21.equals("0,\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var30 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var31);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var40 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var41 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var42 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var46 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var48 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var49);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var50);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var51 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var62 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var68 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var69 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var74 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var75 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var76 == true);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var77 + "' != '" + "(1,1)"+ "'", var77.equals("(1,1)"));

  }

  public void test294() throws Throwable {

    demo.pathplanning.model.CartesianGraph var2 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var3 = var2.getXSize();
    int var4 = var2.getYSize();
    demo.pathplanning.model.CartesianGraph var7 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.algorithms.AStar var8 = new demo.pathplanning.algorithms.AStar(var7);
    java.lang.String var9 = var7.toString();
    demo.pathplanning.model.CartesianGraph var12 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var15 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var16 = new demo.pathplanning.model.Location(1, 1);
    boolean var18 = var16.equals((java.lang.Object)0L);
    demo.pathplanning.model.Node var19 = var7.getNode(var16);
    demo.pathplanning.model.CartesianGraph var22 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var25 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var26 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var29 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var30 = var29.getXSize();
    demo.pathplanning.model.CartesianGraph var33 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var34 = new demo.pathplanning.model.CartesianGraph(var30, 1);
    demo.pathplanning.model.Location var35 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.Node var36 = new demo.pathplanning.model.Node(var2, var16, 1);
    int var37 = var16.getX();
    demo.pathplanning.model.CartesianGraph var40 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var41 = var40.getXSize();
    demo.pathplanning.model.CartesianGraph var44 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var45 = new demo.pathplanning.model.CartesianGraph(var41, 1);
    boolean var46 = var16.equals((java.lang.Object)var41);
    int var47 = var16.getY();
    java.lang.String var48 = var16.toString();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var3 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var4 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var9 + "' != '" + "0,\n"+ "'", var9.equals("0,\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var18 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var19);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var30 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var37 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var41 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var46 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var47 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var48 + "' != '" + "(1,1)"+ "'", var48.equals("(1,1)"));

  }

  public void test295() throws Throwable {

    demo.pathplanning.model.CartesianGraph var2 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var3 = var2.getXSize();
    demo.pathplanning.algorithms.AStar var4 = new demo.pathplanning.algorithms.AStar(var2);
    demo.pathplanning.model.CartesianGraph var7 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var10 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var11 = new demo.pathplanning.model.Location(1, 1);
    boolean var13 = var11.equals((java.lang.Object)0L);
    demo.pathplanning.model.Node var14 = var2.getNode(var11);
    int var15 = var2.getYSize();
    demo.pathplanning.model.CartesianGraph var18 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var19 = var18.getXSize();
    int var20 = var18.getYSize();
    int var21 = var18.getYSize();
    demo.pathplanning.model.CartesianGraph var24 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var25 = new demo.pathplanning.model.Location(var21, 1);
    java.lang.String var26 = var25.toString();
    demo.pathplanning.model.CartesianGraph var29 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var32 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var33 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var36 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var37 = var36.getXSize();
    int var38 = var36.getYSize();
    int var39 = var36.getYSize();
    demo.pathplanning.model.CartesianGraph var42 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var43 = var42.getXSize();
    int var44 = var42.getYSize();
    int var45 = var42.getYSize();
    demo.pathplanning.model.CartesianGraph var46 = new demo.pathplanning.model.CartesianGraph(var39, var45);
    demo.pathplanning.model.CartesianGraph var47 = new demo.pathplanning.model.CartesianGraph(1, var39);
    demo.pathplanning.model.Node var48 = new demo.pathplanning.model.Node(var2, var25, var39);
    java.lang.String var49 = var48.toString();
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      demo.pathplanning.model.Direction var50 = demo.pathplanning.model.Direction.valueOf(var49);
      fail("Expected exception of type java.lang.IllegalArgumentException");
    } catch (java.lang.IllegalArgumentException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var3 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var13 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var14);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var15 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var19 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var20 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var21 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var26 + "' != '" + "(1,1)"+ "'", var26.equals("(1,1)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var37 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var38 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var39 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var43 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var44 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var45 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var49 + "' != '" + "(1,1)=1"+ "'", var49.equals("(1,1)=1"));

  }

  public void test296() throws Throwable {

    demo.pathplanning.model.CartesianGraph var2 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.algorithms.AStar var3 = new demo.pathplanning.algorithms.AStar(var2);
    demo.pathplanning.model.CartesianGraph var4 = var3.getGraph();
    demo.pathplanning.model.CartesianGraph var5 = var3.getGraph();
    demo.pathplanning.algorithms.PathPlanningContext var6 = new demo.pathplanning.algorithms.PathPlanningContext((demo.pathplanning.algorithms.PathPlanner)var3);
    demo.pathplanning.model.CartesianGraph var7 = var3.getGraph();
    int var8 = var7.getYSize();
    java.lang.String var9 = var7.toString();
    demo.pathplanning.model.CartesianGraph var12 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var15 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var16 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var19 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var20 = var19.getXSize();
    int var21 = var19.getYSize();
    int var22 = var19.getYSize();
    demo.pathplanning.model.CartesianGraph var25 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var26 = var25.getXSize();
    int var27 = var25.getYSize();
    int var28 = var25.getYSize();
    demo.pathplanning.model.CartesianGraph var29 = new demo.pathplanning.model.CartesianGraph(var22, var28);
    demo.pathplanning.model.CartesianGraph var30 = new demo.pathplanning.model.CartesianGraph(1, var22);
    int var31 = var30.getYSize();
    demo.pathplanning.model.CartesianGraph var34 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var35 = var34.getXSize();
    int var36 = var34.getYSize();
    int var37 = var34.getYSize();
    demo.pathplanning.model.CartesianGraph var40 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var41 = new demo.pathplanning.model.Location(var37, 1);
    java.lang.String var42 = var41.toString();
    demo.pathplanning.model.Node var43 = var30.getNode(var41);
    int var44 = var41.getX();
    demo.pathplanning.model.CartesianGraph var48 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var49 = var48.getXSize();
    int var50 = var48.getYSize();
    int var51 = var48.getYSize();
    demo.pathplanning.model.CartesianGraph var54 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var55 = var54.getXSize();
    int var56 = var54.getYSize();
    int var57 = var54.getYSize();
    demo.pathplanning.model.CartesianGraph var58 = new demo.pathplanning.model.CartesianGraph(var51, var57);
    demo.pathplanning.model.CartesianGraph var61 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var64 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var65 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var66 = new demo.pathplanning.model.CartesianGraph(var51, 1);
    demo.pathplanning.model.CartesianGraph var67 = new demo.pathplanning.model.CartesianGraph(0, 1);
    demo.pathplanning.model.Node var68 = new demo.pathplanning.model.Node(var7, var41, 1);
    int var69 = var68.getCost();
    demo.pathplanning.model.CartesianGraph var72 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.algorithms.AStar var73 = new demo.pathplanning.algorithms.AStar(var72);
    demo.pathplanning.model.CartesianGraph var74 = var73.getGraph();
    demo.pathplanning.model.CartesianGraph var75 = var73.getGraph();
    demo.pathplanning.model.CartesianGraph var76 = var73.getGraph();
    demo.pathplanning.algorithms.AStar var77 = new demo.pathplanning.algorithms.AStar(var76);
    int var78 = var76.getYSize();
    demo.pathplanning.model.CartesianGraph var79 = new demo.pathplanning.model.CartesianGraph(var69, var78);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var8 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var9 + "' != '" + "0,\n"+ "'", var9.equals("0,\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var20 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var21 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var22 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var26 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var27 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var28 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var31 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var35 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var36 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var37 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var42 + "' != '" + "(1,1)"+ "'", var42.equals("(1,1)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var43);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var44 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var49 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var50 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var51 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var55 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var56 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var57 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var69 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var74);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var75);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var76);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var78 == 1);

  }

  public void test297() throws Throwable {

    demo.pathplanning.model.CartesianGraph var2 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.algorithms.AStar var3 = new demo.pathplanning.algorithms.AStar(var2);
    demo.pathplanning.model.CartesianGraph var4 = var3.getGraph();
    demo.pathplanning.model.CartesianGraph var5 = var3.getGraph();
    demo.pathplanning.algorithms.PathPlanningContext var6 = new demo.pathplanning.algorithms.PathPlanningContext((demo.pathplanning.algorithms.PathPlanner)var3);
    demo.pathplanning.model.CartesianGraph var7 = var3.getGraph();
    int var8 = var7.getYSize();
    demo.pathplanning.model.CartesianGraph var11 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var14 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var15 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var18 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var21 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var22 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.Node var23 = new demo.pathplanning.model.Node(var7, var15, 1);
    java.util.Collection var24 = var23.getNeighbors();
    int var25 = var23.getCost();
    java.lang.String var26 = var23.toString();
    java.lang.String var27 = var23.toString();
    java.util.Collection var28 = var23.getNeighbors();
    int var29 = var23.getCost();
    java.lang.String var30 = var23.toString();
    java.util.Collection var31 = var23.getNeighbors();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var8 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var24);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var25 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var26 + "' != '" + "(1,1)=1"+ "'", var26.equals("(1,1)=1"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var27 + "' != '" + "(1,1)=1"+ "'", var27.equals("(1,1)=1"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var28);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var29 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var30 + "' != '" + "(1,1)=1"+ "'", var30.equals("(1,1)=1"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var31);

  }

  public void test298() throws Throwable {

    demo.pathplanning.model.CartesianGraph var2 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var3 = var2.getXSize();
    int var4 = var2.getYSize();
    int var5 = var2.getYSize();
    demo.pathplanning.model.CartesianGraph var8 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var9 = var8.getXSize();
    int var10 = var8.getYSize();
    int var11 = var8.getYSize();
    demo.pathplanning.model.CartesianGraph var12 = new demo.pathplanning.model.CartesianGraph(var5, var11);
    demo.pathplanning.model.CartesianGraph var15 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var18 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var19 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var20 = new demo.pathplanning.model.CartesianGraph(var5, 1);
    java.lang.String var21 = var20.toString();
    demo.pathplanning.model.CartesianGraph var24 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var27 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var28 = new demo.pathplanning.model.Location(1, 1);
    boolean var30 = var28.equals((java.lang.Object)0L);
    demo.pathplanning.model.Node var31 = var20.getNode(var28);
    demo.pathplanning.model.CartesianGraph var34 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var37 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var38 = new demo.pathplanning.model.Location(1, 1);
    boolean var40 = var38.equals((java.lang.Object)0L);
    int var41 = var38.getX();
    int var42 = var38.getX();
    demo.pathplanning.model.CartesianGraph var45 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var46 = var45.getXSize();
    demo.pathplanning.model.Node var47 = new demo.pathplanning.model.Node(var20, var38, var46);
    demo.pathplanning.model.CartesianGraph var50 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var51 = var50.getXSize();
    demo.pathplanning.model.CartesianGraph var54 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var55 = new demo.pathplanning.model.CartesianGraph(var51, 1);
    demo.pathplanning.model.CartesianGraph var58 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.algorithms.AStar var59 = new demo.pathplanning.algorithms.AStar(var58);
    demo.pathplanning.model.CartesianGraph var60 = var59.getGraph();
    demo.pathplanning.model.CartesianGraph var61 = var59.getGraph();
    demo.pathplanning.algorithms.PathPlanningContext var62 = new demo.pathplanning.algorithms.PathPlanningContext((demo.pathplanning.algorithms.PathPlanner)var59);
    demo.pathplanning.model.CartesianGraph var63 = var59.getGraph();
    int var64 = var63.getYSize();
    demo.pathplanning.model.CartesianGraph var65 = new demo.pathplanning.model.CartesianGraph(var51, var64);
    int var66 = var65.getXSize();
    boolean var67 = var47.equals((java.lang.Object)var66);
    java.util.Collection var68 = var47.getNeighbors();
    int var69 = var47.getCost();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var3 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var4 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var5 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var9 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var11 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var21 + "' != '" + "0,\n"+ "'", var21.equals("0,\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var30 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var31);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var40 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var41 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var42 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var46 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var51 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var60);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var61);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var63);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var64 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var66 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var67 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var68);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var69 == 1);

  }

  public void test299() throws Throwable {

    demo.pathplanning.model.CartesianGraph var2 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var3 = var2.getXSize();
    demo.pathplanning.algorithms.AStar var4 = new demo.pathplanning.algorithms.AStar(var2);
    demo.pathplanning.model.CartesianGraph var7 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var10 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var11 = new demo.pathplanning.model.Location(1, 1);
    boolean var13 = var11.equals((java.lang.Object)0L);
    demo.pathplanning.model.Node var14 = var2.getNode(var11);
    int var15 = var2.getYSize();
    demo.pathplanning.model.CartesianGraph var18 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var19 = var18.getXSize();
    int var20 = var18.getYSize();
    int var21 = var18.getYSize();
    demo.pathplanning.model.CartesianGraph var24 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var25 = new demo.pathplanning.model.Location(var21, 1);
    java.lang.String var26 = var25.toString();
    demo.pathplanning.model.CartesianGraph var29 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var32 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var33 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var36 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var37 = var36.getXSize();
    int var38 = var36.getYSize();
    int var39 = var36.getYSize();
    demo.pathplanning.model.CartesianGraph var42 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var43 = var42.getXSize();
    int var44 = var42.getYSize();
    int var45 = var42.getYSize();
    demo.pathplanning.model.CartesianGraph var46 = new demo.pathplanning.model.CartesianGraph(var39, var45);
    demo.pathplanning.model.CartesianGraph var47 = new demo.pathplanning.model.CartesianGraph(1, var39);
    demo.pathplanning.model.Node var48 = new demo.pathplanning.model.Node(var2, var25, var39);
    java.util.Collection var49 = var48.getNeighbors();
    int var50 = var48.getCost();
    java.util.Collection var51 = var48.getNeighbors();
    java.util.Collection var52 = var48.getNeighbors();
    java.util.Collection var53 = var48.getNeighbors();
    java.util.Collection var54 = var48.getNeighbors();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var3 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var13 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var14);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var15 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var19 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var20 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var21 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var26 + "' != '" + "(1,1)"+ "'", var26.equals("(1,1)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var37 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var38 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var39 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var43 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var44 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var45 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var49);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var50 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var51);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var52);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var53);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var54);

  }

  public void test300() throws Throwable {

    demo.pathplanning.model.CartesianGraph var2 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.algorithms.AStar var3 = new demo.pathplanning.algorithms.AStar(var2);
    demo.pathplanning.model.CartesianGraph var4 = var3.getGraph();
    demo.pathplanning.model.CartesianGraph var5 = var3.getGraph();
    demo.pathplanning.algorithms.PathPlanningContext var6 = new demo.pathplanning.algorithms.PathPlanningContext((demo.pathplanning.algorithms.PathPlanner)var3);
    demo.pathplanning.model.CartesianGraph var7 = var3.getGraph();
    int var8 = var7.getYSize();
    demo.pathplanning.model.CartesianGraph var11 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var14 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var15 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var18 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var21 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var22 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.Node var23 = new demo.pathplanning.model.Node(var7, var15, 1);
    java.util.Collection var24 = var23.getNeighbors();
    int var25 = var23.getCost();
    java.lang.String var26 = var23.toString();
    demo.pathplanning.model.CartesianGraph var29 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.algorithms.AStar var30 = new demo.pathplanning.algorithms.AStar(var29);
    demo.pathplanning.model.CartesianGraph var31 = var30.getGraph();
    demo.pathplanning.model.CartesianGraph var32 = var30.getGraph();
    demo.pathplanning.algorithms.PathPlanningContext var33 = new demo.pathplanning.algorithms.PathPlanningContext((demo.pathplanning.algorithms.PathPlanner)var30);
    demo.pathplanning.model.CartesianGraph var34 = var30.getGraph();
    int var35 = var34.getYSize();
    demo.pathplanning.model.CartesianGraph var38 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var41 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var42 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var45 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var48 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var49 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.Node var50 = new demo.pathplanning.model.Node(var34, var42, 1);
    java.lang.String var51 = var50.toString();
    boolean var52 = var23.equals((java.lang.Object)var50);
    java.lang.String var53 = var50.toString();
    java.util.Collection var54 = var50.getNeighbors();
    java.lang.String var55 = var50.toString();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var8 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var24);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var25 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var26 + "' != '" + "(1,1)=1"+ "'", var26.equals("(1,1)=1"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var31);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var32);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var34);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var35 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var51 + "' != '" + "(1,1)=1"+ "'", var51.equals("(1,1)=1"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var52 == true);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var53 + "' != '" + "(1,1)=1"+ "'", var53.equals("(1,1)=1"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var54);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var55 + "' != '" + "(1,1)=1"+ "'", var55.equals("(1,1)=1"));

  }

  public void test301() throws Throwable {

    demo.pathplanning.model.CartesianGraph var2 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var3 = var2.getXSize();
    int var4 = var2.getYSize();
    int var5 = var2.getYSize();
    demo.pathplanning.model.CartesianGraph var8 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var9 = new demo.pathplanning.model.Location(var5, 1);
    int var10 = var9.getY();
    demo.pathplanning.model.CartesianGraph var13 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var16 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var17 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var20 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var21 = var20.getXSize();
    int var22 = var20.getYSize();
    int var23 = var20.getYSize();
    demo.pathplanning.model.CartesianGraph var26 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var27 = var26.getXSize();
    int var28 = var26.getYSize();
    int var29 = var26.getYSize();
    demo.pathplanning.model.CartesianGraph var30 = new demo.pathplanning.model.CartesianGraph(var23, var29);
    demo.pathplanning.model.CartesianGraph var31 = new demo.pathplanning.model.CartesianGraph(1, var23);
    int var32 = var31.getYSize();
    demo.pathplanning.model.CartesianGraph var35 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.algorithms.AStar var36 = new demo.pathplanning.algorithms.AStar(var35);
    java.lang.String var37 = var35.toString();
    demo.pathplanning.model.CartesianGraph var40 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var43 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var44 = new demo.pathplanning.model.Location(1, 1);
    boolean var46 = var44.equals((java.lang.Object)0L);
    demo.pathplanning.model.Node var47 = var35.getNode(var44);
    demo.pathplanning.model.CartesianGraph var50 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var51 = var50.getXSize();
    int var52 = var50.getYSize();
    int var53 = var50.getYSize();
    demo.pathplanning.model.CartesianGraph var56 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var57 = var56.getXSize();
    int var58 = var56.getYSize();
    int var59 = var56.getYSize();
    demo.pathplanning.model.CartesianGraph var60 = new demo.pathplanning.model.CartesianGraph(var53, var59);
    demo.pathplanning.model.CartesianGraph var63 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var66 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var67 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var68 = new demo.pathplanning.model.CartesianGraph(var53, 1);
    demo.pathplanning.model.Node var69 = new demo.pathplanning.model.Node(var31, var44, 1);
    demo.pathplanning.model.Location var70 = var69.getLocation();
    boolean var71 = var9.equals((java.lang.Object)var70);
    int var72 = var70.getY();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var3 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var4 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var5 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var21 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var22 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var23 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var27 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var28 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var29 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var32 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var37 + "' != '" + "0,\n"+ "'", var37.equals("0,\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var46 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var47);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var51 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var52 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var53 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var57 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var58 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var59 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var70);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var71 == true);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var72 == 1);

  }

  public void test302() throws Throwable {

    demo.pathplanning.model.CartesianGraph var2 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var3 = var2.getXSize();
    int var4 = var2.getYSize();
    int var5 = var2.getYSize();
    demo.pathplanning.model.CartesianGraph var8 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var9 = var8.getXSize();
    int var10 = var8.getYSize();
    int var11 = var8.getYSize();
    demo.pathplanning.model.CartesianGraph var12 = new demo.pathplanning.model.CartesianGraph(var5, var11);
    demo.pathplanning.model.CartesianGraph var15 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var18 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var19 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var20 = new demo.pathplanning.model.CartesianGraph(var5, 1);
    int var21 = var20.getXSize();
    demo.pathplanning.model.CartesianGraph var24 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var25 = var24.getXSize();
    int var26 = var24.getYSize();
    int var27 = var24.getYSize();
    demo.pathplanning.model.CartesianGraph var28 = new demo.pathplanning.model.CartesianGraph(var21, var27);
    demo.pathplanning.model.CartesianGraph var31 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var34 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var35 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var38 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var39 = var38.getXSize();
    int var40 = var38.getYSize();
    int var41 = var38.getYSize();
    demo.pathplanning.model.CartesianGraph var44 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var45 = var44.getXSize();
    int var46 = var44.getYSize();
    int var47 = var44.getYSize();
    demo.pathplanning.model.CartesianGraph var48 = new demo.pathplanning.model.CartesianGraph(var41, var47);
    demo.pathplanning.model.CartesianGraph var49 = new demo.pathplanning.model.CartesianGraph(1, var41);
    demo.pathplanning.model.CartesianGraph var52 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var55 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var56 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var59 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var60 = var59.getXSize();
    int var61 = var59.getYSize();
    int var62 = var59.getYSize();
    demo.pathplanning.model.CartesianGraph var65 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var66 = var65.getXSize();
    int var67 = var65.getYSize();
    int var68 = var65.getYSize();
    demo.pathplanning.model.CartesianGraph var69 = new demo.pathplanning.model.CartesianGraph(var62, var68);
    demo.pathplanning.model.CartesianGraph var70 = new demo.pathplanning.model.CartesianGraph(1, var62);
    demo.pathplanning.model.Location var71 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.Location var72 = new demo.pathplanning.model.Location(var21, 1);
    int var73 = var72.getX();
    demo.pathplanning.model.CartesianGraph var76 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var77 = var76.getXSize();
    demo.pathplanning.algorithms.AStar var78 = new demo.pathplanning.algorithms.AStar(var76);
    demo.pathplanning.model.CartesianGraph var81 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var82 = var81.getXSize();
    int var83 = var81.getYSize();
    int var84 = var81.getYSize();
    demo.pathplanning.model.CartesianGraph var87 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var88 = new demo.pathplanning.model.Location(var84, 1);
    java.lang.String var89 = var88.toString();
    demo.pathplanning.model.Node var90 = var76.getNode(var88);
    demo.pathplanning.algorithms.AStar var91 = new demo.pathplanning.algorithms.AStar(var76);
    int var92 = var76.getYSize();
    demo.pathplanning.model.CartesianGraph var93 = new demo.pathplanning.model.CartesianGraph(var73, var92);
    demo.pathplanning.algorithms.AStar var94 = new demo.pathplanning.algorithms.AStar(var93);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var3 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var4 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var5 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var9 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var11 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var21 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var25 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var26 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var27 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var39 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var40 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var41 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var45 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var46 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var47 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var60 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var61 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var62 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var66 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var67 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var68 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var73 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var77 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var82 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var83 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var84 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var89 + "' != '" + "(1,1)"+ "'", var89.equals("(1,1)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var90);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var92 == 1);

  }

  public void test303() throws Throwable {

    demo.pathplanning.model.CartesianGraph var2 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var3 = var2.getXSize();
    int var4 = var2.getYSize();
    int var5 = var2.getYSize();
    demo.pathplanning.model.CartesianGraph var8 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var9 = var8.getXSize();
    int var10 = var8.getYSize();
    int var11 = var8.getYSize();
    demo.pathplanning.model.CartesianGraph var12 = new demo.pathplanning.model.CartesianGraph(var5, var11);
    java.lang.String var13 = var12.toString();
    demo.pathplanning.model.CartesianGraph var16 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var17 = var16.getXSize();
    int var18 = var16.getYSize();
    demo.pathplanning.model.CartesianGraph var21 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var22 = var21.getXSize();
    demo.pathplanning.algorithms.AStar var23 = new demo.pathplanning.algorithms.AStar(var21);
    demo.pathplanning.model.CartesianGraph var26 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var29 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var30 = new demo.pathplanning.model.Location(1, 1);
    boolean var32 = var30.equals((java.lang.Object)0L);
    demo.pathplanning.model.Node var33 = var21.getNode(var30);
    int var34 = var30.getY();
    demo.pathplanning.model.CartesianGraph var37 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.algorithms.AStar var38 = new demo.pathplanning.algorithms.AStar(var37);
    demo.pathplanning.model.CartesianGraph var39 = var38.getGraph();
    demo.pathplanning.model.CartesianGraph var40 = var38.getGraph();
    demo.pathplanning.algorithms.PathPlanningContext var41 = new demo.pathplanning.algorithms.PathPlanningContext((demo.pathplanning.algorithms.PathPlanner)var38);
    demo.pathplanning.model.CartesianGraph var42 = var38.getGraph();
    int var43 = var42.getYSize();
    demo.pathplanning.model.CartesianGraph var46 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var49 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var50 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var53 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var56 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var57 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.Node var58 = new demo.pathplanning.model.Node(var42, var50, 1);
    java.util.Collection var59 = var58.getNeighbors();
    int var60 = var58.getCost();
    java.util.Collection var61 = var58.getNeighbors();
    demo.pathplanning.model.CartesianGraph var64 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.algorithms.AStar var65 = new demo.pathplanning.algorithms.AStar(var64);
    demo.pathplanning.model.CartesianGraph var66 = var65.getGraph();
    demo.pathplanning.model.CartesianGraph var67 = var65.getGraph();
    demo.pathplanning.algorithms.PathPlanningContext var68 = new demo.pathplanning.algorithms.PathPlanningContext((demo.pathplanning.algorithms.PathPlanner)var65);
    demo.pathplanning.model.CartesianGraph var69 = var65.getGraph();
    int var70 = var69.getYSize();
    demo.pathplanning.model.CartesianGraph var73 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var76 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var77 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var80 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var83 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var84 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.Node var85 = new demo.pathplanning.model.Node(var69, var77, 1);
    java.util.Collection var86 = var85.getNeighbors();
    int var87 = var85.getCost();
    boolean var88 = var58.equals((java.lang.Object)var87);
    demo.pathplanning.model.Node var89 = new demo.pathplanning.model.Node(var16, var30, var87);
    demo.pathplanning.model.Node var90 = var12.getNode(var30);
    demo.pathplanning.algorithms.AStar var91 = new demo.pathplanning.algorithms.AStar(var12);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var3 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var4 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var5 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var9 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var11 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var13 + "' != '" + "0,\n"+ "'", var13.equals("0,\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var17 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var18 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var22 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var32 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var33);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var34 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var39);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var40);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var42);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var43 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var59);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var60 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var61);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var66);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var67);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var69);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var70 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var86);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var87 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var88 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var90);

  }

  public void test304() throws Throwable {

    demo.pathplanning.model.CartesianGraph var2 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.algorithms.AStar var3 = new demo.pathplanning.algorithms.AStar(var2);
    demo.pathplanning.model.CartesianGraph var4 = var3.getGraph();
    demo.pathplanning.algorithms.PathPlanningContext var5 = new demo.pathplanning.algorithms.PathPlanningContext((demo.pathplanning.algorithms.PathPlanner)var3);
    demo.pathplanning.model.CartesianGraph var8 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.algorithms.AStar var9 = new demo.pathplanning.algorithms.AStar(var8);
    demo.pathplanning.model.CartesianGraph var10 = var9.getGraph();
    demo.pathplanning.model.CartesianGraph var11 = var9.getGraph();
    demo.pathplanning.algorithms.PathPlanningContext var12 = new demo.pathplanning.algorithms.PathPlanningContext((demo.pathplanning.algorithms.PathPlanner)var9);
    demo.pathplanning.model.CartesianGraph var13 = var9.getGraph();
    int var14 = var13.getYSize();
    demo.pathplanning.model.CartesianGraph var17 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var20 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var21 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var24 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var27 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var28 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.Node var29 = new demo.pathplanning.model.Node(var13, var21, 1);
    java.util.Collection var30 = var29.getNeighbors();
    demo.pathplanning.model.Location var31 = var29.getLocation();
    java.lang.String var32 = var31.toString();
    java.lang.String var33 = var31.toString();
    demo.pathplanning.model.CartesianGraph var36 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var39 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var40 = new demo.pathplanning.model.Location(1, 1);
    int var41 = var40.getX();
    demo.pathplanning.model.CartesianGraph var44 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var47 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var48 = new demo.pathplanning.model.Location(1, 1);
    boolean var50 = var48.equals((java.lang.Object)0L);
    int var51 = var48.getX();
    int var52 = var48.getX();
    int var53 = var48.getY();
    demo.pathplanning.model.CartesianGraph var56 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var57 = var56.getXSize();
    demo.pathplanning.algorithms.AStar var58 = new demo.pathplanning.algorithms.AStar(var56);
    demo.pathplanning.model.CartesianGraph var61 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var64 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var65 = new demo.pathplanning.model.Location(1, 1);
    boolean var67 = var65.equals((java.lang.Object)0L);
    demo.pathplanning.model.Node var68 = var56.getNode(var65);
    boolean var69 = var48.equals((java.lang.Object)var65);
    int var70 = var65.getY();
    boolean var71 = var40.equals((java.lang.Object)var65);
    java.util.List var72 = var5.getPath(var31, var65);

  }

  public void test305() throws Throwable {

    demo.pathplanning.model.CartesianGraph var2 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var3 = var2.getXSize();
    int var4 = var2.getYSize();
    demo.pathplanning.model.CartesianGraph var7 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var8 = var7.getXSize();
    demo.pathplanning.algorithms.AStar var9 = new demo.pathplanning.algorithms.AStar(var7);
    demo.pathplanning.model.CartesianGraph var12 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var15 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var16 = new demo.pathplanning.model.Location(1, 1);
    boolean var18 = var16.equals((java.lang.Object)0L);
    demo.pathplanning.model.Node var19 = var7.getNode(var16);
    int var20 = var16.getY();
    demo.pathplanning.model.CartesianGraph var23 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.algorithms.AStar var24 = new demo.pathplanning.algorithms.AStar(var23);
    demo.pathplanning.model.CartesianGraph var25 = var24.getGraph();
    demo.pathplanning.model.CartesianGraph var26 = var24.getGraph();
    demo.pathplanning.algorithms.PathPlanningContext var27 = new demo.pathplanning.algorithms.PathPlanningContext((demo.pathplanning.algorithms.PathPlanner)var24);
    demo.pathplanning.model.CartesianGraph var28 = var24.getGraph();
    int var29 = var28.getYSize();
    demo.pathplanning.model.CartesianGraph var32 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var35 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var36 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var39 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var42 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var43 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.Node var44 = new demo.pathplanning.model.Node(var28, var36, 1);
    java.util.Collection var45 = var44.getNeighbors();
    int var46 = var44.getCost();
    java.util.Collection var47 = var44.getNeighbors();
    demo.pathplanning.model.CartesianGraph var50 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.algorithms.AStar var51 = new demo.pathplanning.algorithms.AStar(var50);
    demo.pathplanning.model.CartesianGraph var52 = var51.getGraph();
    demo.pathplanning.model.CartesianGraph var53 = var51.getGraph();
    demo.pathplanning.algorithms.PathPlanningContext var54 = new demo.pathplanning.algorithms.PathPlanningContext((demo.pathplanning.algorithms.PathPlanner)var51);
    demo.pathplanning.model.CartesianGraph var55 = var51.getGraph();
    int var56 = var55.getYSize();
    demo.pathplanning.model.CartesianGraph var59 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var62 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var63 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var66 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var69 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var70 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.Node var71 = new demo.pathplanning.model.Node(var55, var63, 1);
    java.util.Collection var72 = var71.getNeighbors();
    int var73 = var71.getCost();
    boolean var74 = var44.equals((java.lang.Object)var73);
    demo.pathplanning.model.Node var75 = new demo.pathplanning.model.Node(var2, var16, var73);
    int var76 = var2.getXSize();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var3 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var4 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var8 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var18 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var19);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var20 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var25);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var26);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var28);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var29 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var45);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var46 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var47);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var52);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var53);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var55);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var56 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var72);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var73 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var74 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var76 == 1);

  }

  public void test306() throws Throwable {

    demo.pathplanning.model.CartesianGraph var2 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.algorithms.AStar var3 = new demo.pathplanning.algorithms.AStar(var2);
    demo.pathplanning.model.CartesianGraph var4 = var3.getGraph();
    demo.pathplanning.model.CartesianGraph var5 = var3.getGraph();
    demo.pathplanning.algorithms.PathPlanningContext var6 = new demo.pathplanning.algorithms.PathPlanningContext((demo.pathplanning.algorithms.PathPlanner)var3);
    demo.pathplanning.model.CartesianGraph var7 = var3.getGraph();
    int var8 = var7.getYSize();
    demo.pathplanning.model.CartesianGraph var11 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var14 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var15 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var18 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var21 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var22 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.Node var23 = new demo.pathplanning.model.Node(var7, var15, 1);
    int var24 = var23.getCost();
    java.util.Collection var25 = var23.getNeighbors();
    java.util.Collection var26 = var23.getNeighbors();
    demo.pathplanning.model.CartesianGraph var29 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var30 = var29.getXSize();
    int var31 = var29.getYSize();
    int var32 = var29.getYSize();
    demo.pathplanning.model.CartesianGraph var35 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var36 = var35.getXSize();
    int var37 = var35.getYSize();
    int var38 = var35.getYSize();
    demo.pathplanning.model.CartesianGraph var39 = new demo.pathplanning.model.CartesianGraph(var32, var38);
    demo.pathplanning.model.CartesianGraph var42 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var45 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var46 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var47 = new demo.pathplanning.model.CartesianGraph(var32, 1);
    java.lang.String var48 = var47.toString();
    demo.pathplanning.model.CartesianGraph var51 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var54 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var55 = new demo.pathplanning.model.Location(1, 1);
    boolean var57 = var55.equals((java.lang.Object)0L);
    demo.pathplanning.model.Node var58 = var47.getNode(var55);
    demo.pathplanning.model.CartesianGraph var61 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var64 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var65 = new demo.pathplanning.model.Location(1, 1);
    boolean var67 = var65.equals((java.lang.Object)0L);
    int var68 = var65.getX();
    int var69 = var65.getX();
    demo.pathplanning.model.CartesianGraph var72 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var73 = var72.getXSize();
    demo.pathplanning.model.Node var74 = new demo.pathplanning.model.Node(var47, var65, var73);
    int var75 = var74.getCost();
    java.util.Collection var76 = var74.getNeighbors();
    demo.pathplanning.model.CartesianGraph var79 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var80 = var79.getXSize();
    demo.pathplanning.algorithms.AStar var81 = new demo.pathplanning.algorithms.AStar(var79);
    demo.pathplanning.model.CartesianGraph var84 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var87 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var88 = new demo.pathplanning.model.Location(1, 1);
    boolean var90 = var88.equals((java.lang.Object)0L);
    demo.pathplanning.model.Node var91 = var79.getNode(var88);
    demo.pathplanning.algorithms.AStar var92 = new demo.pathplanning.algorithms.AStar(var79);
    demo.pathplanning.model.CartesianGraph var93 = var92.getGraph();
    boolean var94 = var74.equals((java.lang.Object)var92);
    java.lang.String var95 = var74.toString();
    java.lang.String var96 = var74.toString();
    boolean var97 = var23.equals((java.lang.Object)var74);
    java.lang.String var98 = var74.toString();
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      demo.pathplanning.model.Direction var99 = demo.pathplanning.model.Direction.valueOf(var98);
      fail("Expected exception of type java.lang.IllegalArgumentException");
    } catch (java.lang.IllegalArgumentException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var8 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var24 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var25);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var26);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var30 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var31 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var32 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var36 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var37 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var38 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var48 + "' != '" + "0,\n"+ "'", var48.equals("0,\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var57 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var58);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var67 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var68 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var69 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var73 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var75 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var76);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var80 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var90 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var91);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var93);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var94 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var95 + "' != '" + "(1,1)=1"+ "'", var95.equals("(1,1)=1"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var96 + "' != '" + "(1,1)=1"+ "'", var96.equals("(1,1)=1"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var97 == true);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var98 + "' != '" + "(1,1)=1"+ "'", var98.equals("(1,1)=1"));

  }

  public void test307() throws Throwable {

    demo.pathplanning.model.CartesianGraph var2 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var5 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var6 = new demo.pathplanning.model.Location(1, 1);
    int var7 = var6.getX();
    demo.pathplanning.model.CartesianGraph var10 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var13 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var14 = new demo.pathplanning.model.Location(1, 1);
    boolean var16 = var14.equals((java.lang.Object)0L);
    int var17 = var14.getX();
    int var18 = var14.getX();
    int var19 = var14.getY();
    demo.pathplanning.model.CartesianGraph var22 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var23 = var22.getXSize();
    demo.pathplanning.algorithms.AStar var24 = new demo.pathplanning.algorithms.AStar(var22);
    demo.pathplanning.model.CartesianGraph var27 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var30 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var31 = new demo.pathplanning.model.Location(1, 1);
    boolean var33 = var31.equals((java.lang.Object)0L);
    demo.pathplanning.model.Node var34 = var22.getNode(var31);
    boolean var35 = var14.equals((java.lang.Object)var31);
    int var36 = var31.getY();
    boolean var37 = var6.equals((java.lang.Object)var31);
    int var38 = var31.getY();
    int var39 = var31.getY();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var7 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var16 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var17 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var18 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var19 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var23 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var33 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var34);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var35 == true);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var36 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var37 == true);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var38 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var39 == 1);

  }

  public void test308() throws Throwable {

    demo.pathplanning.model.CartesianGraph var2 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var3 = var2.getXSize();
    int var4 = var2.getYSize();
    int var5 = var2.getYSize();
    demo.pathplanning.model.CartesianGraph var8 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var9 = var8.getXSize();
    int var10 = var8.getYSize();
    int var11 = var8.getYSize();
    demo.pathplanning.model.CartesianGraph var12 = new demo.pathplanning.model.CartesianGraph(var5, var11);
    demo.pathplanning.model.CartesianGraph var15 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var18 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var19 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var20 = new demo.pathplanning.model.CartesianGraph(var5, 1);
    int var21 = var20.getXSize();
    demo.pathplanning.model.CartesianGraph var24 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var27 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var28 = new demo.pathplanning.model.Location(1, 1);
    int var29 = var28.getY();
    demo.pathplanning.model.CartesianGraph var32 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var33 = var32.getXSize();
    int var34 = var32.getYSize();
    demo.pathplanning.model.CartesianGraph var37 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var38 = var37.getXSize();
    int var39 = var37.getYSize();
    demo.pathplanning.model.CartesianGraph var42 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.algorithms.AStar var43 = new demo.pathplanning.algorithms.AStar(var42);
    java.lang.String var44 = var42.toString();
    demo.pathplanning.model.CartesianGraph var47 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var50 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var51 = new demo.pathplanning.model.Location(1, 1);
    boolean var53 = var51.equals((java.lang.Object)0L);
    demo.pathplanning.model.Node var54 = var42.getNode(var51);
    demo.pathplanning.model.CartesianGraph var57 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var60 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var61 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var64 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var65 = var64.getXSize();
    demo.pathplanning.model.CartesianGraph var68 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var69 = new demo.pathplanning.model.CartesianGraph(var65, 1);
    demo.pathplanning.model.Location var70 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.Node var71 = new demo.pathplanning.model.Node(var37, var51, 1);
    demo.pathplanning.model.CartesianGraph var72 = new demo.pathplanning.model.CartesianGraph(var34, 1);
    demo.pathplanning.model.Node var73 = new demo.pathplanning.model.Node(var20, var28, 1);
    demo.pathplanning.model.CartesianGraph var76 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var79 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var80 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.Location var82 = new demo.pathplanning.model.Location(1, (-1));
    demo.pathplanning.model.CartesianGraph var83 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var84 = var83.getYSize();
    java.lang.String var85 = var83.toString();
    demo.pathplanning.algorithms.AStar var86 = new demo.pathplanning.algorithms.AStar(var83);
    demo.pathplanning.model.CartesianGraph var87 = var86.getGraph();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var3 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var4 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var5 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var9 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var11 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var21 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var29 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var33 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var34 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var38 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var39 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var44 + "' != '" + "0,\n"+ "'", var44.equals("0,\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var53 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var54);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var65 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var84 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var85 + "' != '" + "0,\n"+ "'", var85.equals("0,\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var87);

  }

  public void test309() throws Throwable {

    demo.pathplanning.model.CartesianGraph var2 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var3 = var2.getXSize();
    demo.pathplanning.algorithms.AStar var4 = new demo.pathplanning.algorithms.AStar(var2);
    int var5 = var2.getYSize();
    int var6 = var2.getXSize();
    demo.pathplanning.model.CartesianGraph var9 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var12 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var13 = new demo.pathplanning.model.Location(1, 1);
    boolean var15 = var13.equals((java.lang.Object)0L);
    int var16 = var13.getX();
    int var17 = var13.getX();
    int var18 = var13.getY();
    demo.pathplanning.model.Node var19 = var2.getNode(var13);
    java.lang.String var20 = var13.toString();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var3 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var5 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var6 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var15 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var16 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var17 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var18 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var19);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var20 + "' != '" + "(1,1)"+ "'", var20.equals("(1,1)"));

  }

  public void test310() throws Throwable {

    demo.pathplanning.model.CartesianGraph var2 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.algorithms.AStar var3 = new demo.pathplanning.algorithms.AStar(var2);
    demo.pathplanning.model.CartesianGraph var4 = var3.getGraph();
    demo.pathplanning.algorithms.PathPlanningContext var5 = new demo.pathplanning.algorithms.PathPlanningContext((demo.pathplanning.algorithms.PathPlanner)var3);
    demo.pathplanning.model.CartesianGraph var6 = var3.getGraph();
    demo.pathplanning.model.CartesianGraph var9 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var12 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var13 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var16 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var17 = var16.getXSize();
    int var18 = var16.getYSize();
    int var19 = var16.getYSize();
    demo.pathplanning.model.CartesianGraph var22 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var23 = var22.getXSize();
    int var24 = var22.getYSize();
    int var25 = var22.getYSize();
    demo.pathplanning.model.CartesianGraph var26 = new demo.pathplanning.model.CartesianGraph(var19, var25);
    demo.pathplanning.model.CartesianGraph var27 = new demo.pathplanning.model.CartesianGraph(1, var19);
    demo.pathplanning.model.CartesianGraph var30 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.algorithms.AStar var31 = new demo.pathplanning.algorithms.AStar(var30);
    demo.pathplanning.model.CartesianGraph var32 = var31.getGraph();
    demo.pathplanning.model.CartesianGraph var33 = var31.getGraph();
    demo.pathplanning.algorithms.PathPlanningContext var34 = new demo.pathplanning.algorithms.PathPlanningContext((demo.pathplanning.algorithms.PathPlanner)var31);
    demo.pathplanning.model.CartesianGraph var35 = var31.getGraph();
    int var36 = var35.getYSize();
    demo.pathplanning.model.CartesianGraph var39 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var42 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var43 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var46 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var49 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var50 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.Node var51 = new demo.pathplanning.model.Node(var35, var43, 1);
    int var52 = var35.getYSize();
    demo.pathplanning.model.CartesianGraph var55 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var58 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var59 = new demo.pathplanning.model.Location(1, 1);
    boolean var61 = var59.equals((java.lang.Object)0L);
    int var62 = var59.getX();
    int var63 = var59.getY();
    demo.pathplanning.model.Node var64 = var35.getNode(var59);
    demo.pathplanning.model.Node var65 = var27.getNode(var59);
    demo.pathplanning.model.Node var66 = var6.getNode(var59);
    int var67 = var59.getX();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var6);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var17 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var18 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var19 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var23 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var24 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var25 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var32);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var33);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var35);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var36 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var52 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var61 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var62 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var63 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var64);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var65);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var66);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var67 == 1);

  }

  public void test311() throws Throwable {

    demo.pathplanning.model.CartesianGraph var2 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var3 = var2.getXSize();
    int var4 = var2.getYSize();
    int var5 = var2.getYSize();
    demo.pathplanning.model.CartesianGraph var8 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var9 = var8.getXSize();
    int var10 = var8.getYSize();
    int var11 = var8.getYSize();
    demo.pathplanning.model.CartesianGraph var12 = new demo.pathplanning.model.CartesianGraph(var5, var11);
    demo.pathplanning.model.CartesianGraph var15 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var18 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var19 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var20 = new demo.pathplanning.model.CartesianGraph(var5, 1);
    java.lang.String var21 = var20.toString();
    demo.pathplanning.model.CartesianGraph var24 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var27 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var28 = new demo.pathplanning.model.Location(1, 1);
    boolean var30 = var28.equals((java.lang.Object)0L);
    demo.pathplanning.model.Node var31 = var20.getNode(var28);
    demo.pathplanning.model.CartesianGraph var34 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var37 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var38 = new demo.pathplanning.model.Location(1, 1);
    boolean var40 = var38.equals((java.lang.Object)0L);
    int var41 = var38.getX();
    int var42 = var38.getX();
    demo.pathplanning.model.CartesianGraph var45 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var46 = var45.getXSize();
    demo.pathplanning.model.Node var47 = new demo.pathplanning.model.Node(var20, var38, var46);
    int var48 = var47.getCost();
    java.util.Collection var49 = var47.getNeighbors();
    demo.pathplanning.model.CartesianGraph var52 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var53 = var52.getXSize();
    demo.pathplanning.algorithms.AStar var54 = new demo.pathplanning.algorithms.AStar(var52);
    demo.pathplanning.model.CartesianGraph var57 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var60 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var61 = new demo.pathplanning.model.Location(1, 1);
    boolean var63 = var61.equals((java.lang.Object)0L);
    demo.pathplanning.model.Node var64 = var52.getNode(var61);
    demo.pathplanning.algorithms.AStar var65 = new demo.pathplanning.algorithms.AStar(var52);
    demo.pathplanning.model.CartesianGraph var66 = var65.getGraph();
    boolean var67 = var47.equals((java.lang.Object)var65);
    demo.pathplanning.model.CartesianGraph var68 = var65.getGraph();
    demo.pathplanning.algorithms.AStar var69 = new demo.pathplanning.algorithms.AStar(var68);
    demo.pathplanning.algorithms.PathPlanningContext var70 = new demo.pathplanning.algorithms.PathPlanningContext((demo.pathplanning.algorithms.PathPlanner)var69);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var3 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var4 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var5 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var9 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var11 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var21 + "' != '" + "0,\n"+ "'", var21.equals("0,\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var30 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var31);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var40 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var41 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var42 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var46 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var48 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var49);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var53 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var63 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var64);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var66);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var67 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var68);

  }

  public void test312() throws Throwable {

    demo.pathplanning.model.CartesianGraph var2 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.algorithms.AStar var3 = new demo.pathplanning.algorithms.AStar(var2);
    java.lang.String var4 = var2.toString();
    demo.pathplanning.model.CartesianGraph var7 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var10 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var11 = new demo.pathplanning.model.Location(1, 1);
    boolean var13 = var11.equals((java.lang.Object)0L);
    demo.pathplanning.model.Node var14 = var2.getNode(var11);
    int var15 = var11.getX();
    demo.pathplanning.model.CartesianGraph var18 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var19 = var18.getXSize();
    int var20 = var18.getYSize();
    demo.pathplanning.model.CartesianGraph var23 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var24 = var23.getXSize();
    int var25 = var23.getYSize();
    demo.pathplanning.model.CartesianGraph var28 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.algorithms.AStar var29 = new demo.pathplanning.algorithms.AStar(var28);
    java.lang.String var30 = var28.toString();
    demo.pathplanning.model.CartesianGraph var33 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var36 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var37 = new demo.pathplanning.model.Location(1, 1);
    boolean var39 = var37.equals((java.lang.Object)0L);
    demo.pathplanning.model.Node var40 = var28.getNode(var37);
    demo.pathplanning.model.CartesianGraph var43 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var46 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var47 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var50 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var51 = var50.getXSize();
    demo.pathplanning.model.CartesianGraph var54 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var55 = new demo.pathplanning.model.CartesianGraph(var51, 1);
    demo.pathplanning.model.Location var56 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.Node var57 = new demo.pathplanning.model.Node(var23, var37, 1);
    demo.pathplanning.model.CartesianGraph var58 = new demo.pathplanning.model.CartesianGraph(var20, 1);
    demo.pathplanning.model.Location var59 = new demo.pathplanning.model.Location(var15, var20);
    demo.pathplanning.model.CartesianGraph var62 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var65 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var66 = new demo.pathplanning.model.Location(1, 1);
    boolean var68 = var66.equals((java.lang.Object)0L);
    int var69 = var66.getX();
    demo.pathplanning.model.CartesianGraph var70 = new demo.pathplanning.model.CartesianGraph(var20, var69);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var4 + "' != '" + "0,\n"+ "'", var4.equals("0,\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var13 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var14);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var15 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var19 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var20 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var24 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var25 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var30 + "' != '" + "0,\n"+ "'", var30.equals("0,\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var39 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var40);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var51 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var68 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var69 == 1);

  }

  public void test313() throws Throwable {

    demo.pathplanning.model.CartesianGraph var2 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var3 = var2.getXSize();
    int var4 = var2.getYSize();
    int var5 = var2.getYSize();
    demo.pathplanning.model.CartesianGraph var8 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var9 = var8.getXSize();
    int var10 = var8.getYSize();
    int var11 = var8.getYSize();
    demo.pathplanning.model.CartesianGraph var12 = new demo.pathplanning.model.CartesianGraph(var5, var11);
    demo.pathplanning.model.CartesianGraph var15 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var18 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var19 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var20 = new demo.pathplanning.model.CartesianGraph(var5, 1);
    java.lang.String var21 = var20.toString();
    demo.pathplanning.model.CartesianGraph var24 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var27 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var28 = new demo.pathplanning.model.Location(1, 1);
    boolean var30 = var28.equals((java.lang.Object)0L);
    demo.pathplanning.model.Node var31 = var20.getNode(var28);
    demo.pathplanning.model.CartesianGraph var34 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var37 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var38 = new demo.pathplanning.model.Location(1, 1);
    boolean var40 = var38.equals((java.lang.Object)0L);
    int var41 = var38.getX();
    int var42 = var38.getX();
    demo.pathplanning.model.CartesianGraph var45 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var46 = var45.getXSize();
    demo.pathplanning.model.Node var47 = new demo.pathplanning.model.Node(var20, var38, var46);
    int var48 = var47.getCost();
    java.util.Collection var49 = var47.getNeighbors();
    demo.pathplanning.model.CartesianGraph var52 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var53 = var52.getXSize();
    demo.pathplanning.algorithms.AStar var54 = new demo.pathplanning.algorithms.AStar(var52);
    demo.pathplanning.model.CartesianGraph var57 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var60 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var61 = new demo.pathplanning.model.Location(1, 1);
    boolean var63 = var61.equals((java.lang.Object)0L);
    demo.pathplanning.model.Node var64 = var52.getNode(var61);
    demo.pathplanning.algorithms.AStar var65 = new demo.pathplanning.algorithms.AStar(var52);
    demo.pathplanning.model.CartesianGraph var66 = var65.getGraph();
    boolean var67 = var47.equals((java.lang.Object)var65);
    demo.pathplanning.algorithms.PathPlanningContext var68 = new demo.pathplanning.algorithms.PathPlanningContext((demo.pathplanning.algorithms.PathPlanner)var65);
    demo.pathplanning.model.CartesianGraph var69 = var65.getGraph();
    demo.pathplanning.algorithms.PathPlanningContext var70 = new demo.pathplanning.algorithms.PathPlanningContext((demo.pathplanning.algorithms.PathPlanner)var65);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var3 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var4 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var5 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var9 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var11 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var21 + "' != '" + "0,\n"+ "'", var21.equals("0,\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var30 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var31);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var40 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var41 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var42 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var46 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var48 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var49);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var53 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var63 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var64);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var66);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var67 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var69);

  }

  public void test314() throws Throwable {

    demo.pathplanning.model.CartesianGraph var2 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var5 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var6 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var9 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var10 = var9.getXSize();
    int var11 = var9.getYSize();
    int var12 = var9.getYSize();
    demo.pathplanning.model.CartesianGraph var15 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var16 = var15.getXSize();
    int var17 = var15.getYSize();
    int var18 = var15.getYSize();
    demo.pathplanning.model.CartesianGraph var19 = new demo.pathplanning.model.CartesianGraph(var12, var18);
    demo.pathplanning.model.CartesianGraph var20 = new demo.pathplanning.model.CartesianGraph(1, var12);
    int var21 = var20.getYSize();
    demo.pathplanning.model.CartesianGraph var24 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.algorithms.AStar var25 = new demo.pathplanning.algorithms.AStar(var24);
    java.lang.String var26 = var24.toString();
    demo.pathplanning.model.CartesianGraph var29 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var32 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var33 = new demo.pathplanning.model.Location(1, 1);
    boolean var35 = var33.equals((java.lang.Object)0L);
    demo.pathplanning.model.Node var36 = var24.getNode(var33);
    demo.pathplanning.model.CartesianGraph var39 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var40 = var39.getXSize();
    int var41 = var39.getYSize();
    int var42 = var39.getYSize();
    demo.pathplanning.model.CartesianGraph var45 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var46 = var45.getXSize();
    int var47 = var45.getYSize();
    int var48 = var45.getYSize();
    demo.pathplanning.model.CartesianGraph var49 = new demo.pathplanning.model.CartesianGraph(var42, var48);
    demo.pathplanning.model.CartesianGraph var52 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var55 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var56 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var57 = new demo.pathplanning.model.CartesianGraph(var42, 1);
    demo.pathplanning.model.Node var58 = new demo.pathplanning.model.Node(var20, var33, 1);
    demo.pathplanning.model.Location var59 = var58.getLocation();
    demo.pathplanning.model.CartesianGraph var62 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var65 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var66 = new demo.pathplanning.model.Location(1, 1);
    int var67 = var66.getX();
    boolean var68 = var58.equals((java.lang.Object)var66);
    demo.pathplanning.model.Location var69 = var58.getLocation();
    demo.pathplanning.model.CartesianGraph var72 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.algorithms.AStar var73 = new demo.pathplanning.algorithms.AStar(var72);
    demo.pathplanning.model.CartesianGraph var74 = var73.getGraph();
    demo.pathplanning.model.CartesianGraph var75 = var73.getGraph();
    demo.pathplanning.algorithms.PathPlanningContext var76 = new demo.pathplanning.algorithms.PathPlanningContext((demo.pathplanning.algorithms.PathPlanner)var73);
    demo.pathplanning.model.CartesianGraph var77 = var73.getGraph();
    int var78 = var77.getYSize();
    demo.pathplanning.model.CartesianGraph var81 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var84 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var85 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var88 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var91 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var92 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.Node var93 = new demo.pathplanning.model.Node(var77, var85, 1);
    int var94 = var93.getCost();
    java.util.Collection var95 = var93.getNeighbors();
    java.util.Collection var96 = var93.getNeighbors();
    boolean var97 = var69.equals((java.lang.Object)var93);
    int var98 = var69.getY();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var11 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var12 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var16 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var17 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var18 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var21 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var26 + "' != '" + "0,\n"+ "'", var26.equals("0,\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var35 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var36);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var40 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var41 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var42 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var46 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var47 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var48 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var59);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var67 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var68 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var69);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var74);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var75);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var77);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var78 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var94 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var95);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var96);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var97 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var98 == 1);

  }

  public void test315() throws Throwable {

    demo.pathplanning.model.CartesianGraph var2 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var3 = var2.getXSize();
    demo.pathplanning.algorithms.AStar var4 = new demo.pathplanning.algorithms.AStar(var2);
    demo.pathplanning.model.CartesianGraph var7 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var10 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var11 = new demo.pathplanning.model.Location(1, 1);
    boolean var13 = var11.equals((java.lang.Object)0L);
    demo.pathplanning.model.Node var14 = var2.getNode(var11);
    int var15 = var2.getYSize();
    demo.pathplanning.model.CartesianGraph var18 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var19 = var18.getXSize();
    int var20 = var18.getYSize();
    int var21 = var18.getYSize();
    demo.pathplanning.model.CartesianGraph var24 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var25 = new demo.pathplanning.model.Location(var21, 1);
    java.lang.String var26 = var25.toString();
    demo.pathplanning.model.CartesianGraph var29 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var32 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var33 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var36 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var37 = var36.getXSize();
    int var38 = var36.getYSize();
    int var39 = var36.getYSize();
    demo.pathplanning.model.CartesianGraph var42 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var43 = var42.getXSize();
    int var44 = var42.getYSize();
    int var45 = var42.getYSize();
    demo.pathplanning.model.CartesianGraph var46 = new demo.pathplanning.model.CartesianGraph(var39, var45);
    demo.pathplanning.model.CartesianGraph var47 = new demo.pathplanning.model.CartesianGraph(1, var39);
    demo.pathplanning.model.Node var48 = new demo.pathplanning.model.Node(var2, var25, var39);
    int var49 = var25.getY();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var3 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var13 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var14);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var15 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var19 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var20 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var21 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var26 + "' != '" + "(1,1)"+ "'", var26.equals("(1,1)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var37 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var38 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var39 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var43 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var44 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var45 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var49 == 1);

  }

  public void test316() throws Throwable {

    demo.pathplanning.model.CartesianGraph var2 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var3 = var2.getXSize();
    demo.pathplanning.algorithms.AStar var4 = new demo.pathplanning.algorithms.AStar(var2);
    demo.pathplanning.model.CartesianGraph var7 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var10 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var11 = new demo.pathplanning.model.Location(1, 1);
    boolean var13 = var11.equals((java.lang.Object)0L);
    demo.pathplanning.model.Node var14 = var2.getNode(var11);
    int var15 = var2.getYSize();
    demo.pathplanning.model.CartesianGraph var18 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var19 = var18.getXSize();
    int var20 = var18.getYSize();
    int var21 = var18.getYSize();
    demo.pathplanning.model.CartesianGraph var24 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var25 = new demo.pathplanning.model.Location(var21, 1);
    java.lang.String var26 = var25.toString();
    demo.pathplanning.model.CartesianGraph var29 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var32 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var33 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var36 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var37 = var36.getXSize();
    int var38 = var36.getYSize();
    int var39 = var36.getYSize();
    demo.pathplanning.model.CartesianGraph var42 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var43 = var42.getXSize();
    int var44 = var42.getYSize();
    int var45 = var42.getYSize();
    demo.pathplanning.model.CartesianGraph var46 = new demo.pathplanning.model.CartesianGraph(var39, var45);
    demo.pathplanning.model.CartesianGraph var47 = new demo.pathplanning.model.CartesianGraph(1, var39);
    demo.pathplanning.model.Node var48 = new demo.pathplanning.model.Node(var2, var25, var39);
    java.util.Collection var49 = var48.getNeighbors();
    int var50 = var48.getCost();
    java.util.Collection var51 = var48.getNeighbors();
    java.util.Collection var52 = var48.getNeighbors();
    java.lang.String var53 = var48.toString();
    java.util.Collection var54 = var48.getNeighbors();
    demo.pathplanning.model.Location var55 = var48.getLocation();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var3 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var13 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var14);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var15 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var19 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var20 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var21 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var26 + "' != '" + "(1,1)"+ "'", var26.equals("(1,1)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var37 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var38 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var39 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var43 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var44 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var45 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var49);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var50 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var51);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var52);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var53 + "' != '" + "(1,1)=1"+ "'", var53.equals("(1,1)=1"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var54);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var55);

  }

  public void test317() throws Throwable {

    demo.pathplanning.model.CartesianGraph var2 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var3 = var2.getXSize();
    demo.pathplanning.algorithms.AStar var4 = new demo.pathplanning.algorithms.AStar(var2);
    demo.pathplanning.model.CartesianGraph var7 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var10 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var11 = new demo.pathplanning.model.Location(1, 1);
    boolean var13 = var11.equals((java.lang.Object)0L);
    demo.pathplanning.model.Node var14 = var2.getNode(var11);
    int var15 = var2.getYSize();
    demo.pathplanning.model.CartesianGraph var18 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var19 = var18.getXSize();
    int var20 = var18.getYSize();
    int var21 = var18.getYSize();
    demo.pathplanning.model.CartesianGraph var24 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var25 = new demo.pathplanning.model.Location(var21, 1);
    java.lang.String var26 = var25.toString();
    demo.pathplanning.model.CartesianGraph var29 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var32 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var33 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var36 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var37 = var36.getXSize();
    int var38 = var36.getYSize();
    int var39 = var36.getYSize();
    demo.pathplanning.model.CartesianGraph var42 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var43 = var42.getXSize();
    int var44 = var42.getYSize();
    int var45 = var42.getYSize();
    demo.pathplanning.model.CartesianGraph var46 = new demo.pathplanning.model.CartesianGraph(var39, var45);
    demo.pathplanning.model.CartesianGraph var47 = new demo.pathplanning.model.CartesianGraph(1, var39);
    demo.pathplanning.model.Node var48 = new demo.pathplanning.model.Node(var2, var25, var39);
    java.util.Collection var49 = var48.getNeighbors();
    int var50 = var48.getCost();
    demo.pathplanning.model.CartesianGraph var53 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var54 = var53.getXSize();
    demo.pathplanning.model.CartesianGraph var57 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var58 = new demo.pathplanning.model.CartesianGraph(var54, 1);
    demo.pathplanning.model.CartesianGraph var61 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.algorithms.AStar var62 = new demo.pathplanning.algorithms.AStar(var61);
    demo.pathplanning.model.CartesianGraph var63 = var62.getGraph();
    demo.pathplanning.model.CartesianGraph var64 = var62.getGraph();
    demo.pathplanning.algorithms.PathPlanningContext var65 = new demo.pathplanning.algorithms.PathPlanningContext((demo.pathplanning.algorithms.PathPlanner)var62);
    demo.pathplanning.model.CartesianGraph var66 = var62.getGraph();
    int var67 = var66.getYSize();
    demo.pathplanning.model.CartesianGraph var68 = new demo.pathplanning.model.CartesianGraph(var54, var67);
    int var69 = var68.getXSize();
    demo.pathplanning.algorithms.AStar var70 = new demo.pathplanning.algorithms.AStar(var68);
    java.lang.String var71 = var68.toString();
    boolean var72 = var48.equals((java.lang.Object)var68);
    demo.pathplanning.model.CartesianGraph var75 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var78 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var79 = new demo.pathplanning.model.Location(1, 1);
    boolean var81 = var79.equals((java.lang.Object)0L);
    int var82 = var79.getX();
    int var83 = var79.getX();
    int var84 = var79.getY();
    demo.pathplanning.model.Node var85 = var68.getNode(var79);
    demo.pathplanning.algorithms.AStar var86 = new demo.pathplanning.algorithms.AStar(var68);
    int var87 = var68.getXSize();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var3 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var13 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var14);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var15 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var19 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var20 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var21 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var26 + "' != '" + "(1,1)"+ "'", var26.equals("(1,1)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var37 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var38 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var39 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var43 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var44 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var45 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var49);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var50 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var54 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var63);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var64);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var66);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var67 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var69 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var71 + "' != '" + "0,\n"+ "'", var71.equals("0,\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var72 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var81 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var82 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var83 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var84 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var85);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var87 == 1);

  }

  public void test318() throws Throwable {

    demo.pathplanning.model.CartesianGraph var2 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.algorithms.AStar var3 = new demo.pathplanning.algorithms.AStar(var2);
    java.lang.String var4 = var2.toString();
    demo.pathplanning.model.CartesianGraph var7 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var10 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var11 = new demo.pathplanning.model.Location(1, 1);
    boolean var13 = var11.equals((java.lang.Object)0L);
    demo.pathplanning.model.Node var14 = var2.getNode(var11);
    demo.pathplanning.model.CartesianGraph var17 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var18 = var17.getXSize();
    int var19 = var17.getYSize();
    int var20 = var17.getYSize();
    demo.pathplanning.model.CartesianGraph var23 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var24 = var23.getXSize();
    int var25 = var23.getYSize();
    int var26 = var23.getYSize();
    demo.pathplanning.model.CartesianGraph var27 = new demo.pathplanning.model.CartesianGraph(var20, var26);
    int var28 = var27.getXSize();
    demo.pathplanning.model.CartesianGraph var31 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.algorithms.AStar var32 = new demo.pathplanning.algorithms.AStar(var31);
    java.lang.String var33 = var31.toString();
    demo.pathplanning.model.CartesianGraph var36 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var39 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var40 = new demo.pathplanning.model.Location(1, 1);
    boolean var42 = var40.equals((java.lang.Object)0L);
    demo.pathplanning.model.Node var43 = var31.getNode(var40);
    demo.pathplanning.model.CartesianGraph var46 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var47 = var46.getXSize();
    demo.pathplanning.algorithms.AStar var48 = new demo.pathplanning.algorithms.AStar(var46);
    demo.pathplanning.model.CartesianGraph var51 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var54 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var55 = new demo.pathplanning.model.Location(1, 1);
    boolean var57 = var55.equals((java.lang.Object)0L);
    demo.pathplanning.model.Node var58 = var46.getNode(var55);
    int var59 = var46.getXSize();
    demo.pathplanning.model.Node var60 = new demo.pathplanning.model.Node(var27, var40, var59);
    java.lang.String var61 = var40.toString();
    int var62 = var40.getY();
    demo.pathplanning.model.Node var63 = var2.getNode(var40);
    int var64 = var2.getYSize();
    demo.pathplanning.model.CartesianGraph var67 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var68 = var67.getXSize();
    int var69 = var67.getYSize();
    int var70 = var67.getYSize();
    demo.pathplanning.model.CartesianGraph var73 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var74 = var73.getXSize();
    int var75 = var73.getYSize();
    int var76 = var73.getYSize();
    demo.pathplanning.model.CartesianGraph var77 = new demo.pathplanning.model.CartesianGraph(var70, var76);
    demo.pathplanning.model.CartesianGraph var80 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var83 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var84 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var85 = new demo.pathplanning.model.CartesianGraph(var70, 1);
    int var86 = var85.getXSize();
    demo.pathplanning.model.CartesianGraph var89 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var90 = var89.getXSize();
    int var91 = var89.getYSize();
    int var92 = var89.getYSize();
    demo.pathplanning.model.CartesianGraph var93 = new demo.pathplanning.model.CartesianGraph(var86, var92);
    int var94 = var93.getYSize();
    int var95 = var93.getYSize();
    int var96 = var93.getYSize();
    demo.pathplanning.model.CartesianGraph var97 = new demo.pathplanning.model.CartesianGraph(var64, var96);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var4 + "' != '" + "0,\n"+ "'", var4.equals("0,\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var13 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var14);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var18 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var19 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var20 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var24 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var25 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var26 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var28 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var33 + "' != '" + "0,\n"+ "'", var33.equals("0,\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var42 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var43);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var47 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var57 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var58);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var59 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var61 + "' != '" + "(1,1)"+ "'", var61.equals("(1,1)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var62 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var63);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var64 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var68 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var69 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var70 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var74 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var75 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var76 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var86 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var90 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var91 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var92 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var94 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var95 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var96 == 1);

  }

  public void test319() throws Throwable {

    demo.pathplanning.model.CartesianGraph var2 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.algorithms.AStar var3 = new demo.pathplanning.algorithms.AStar(var2);
    demo.pathplanning.model.CartesianGraph var4 = var3.getGraph();
    demo.pathplanning.model.CartesianGraph var5 = var3.getGraph();
    demo.pathplanning.model.CartesianGraph var8 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.algorithms.AStar var9 = new demo.pathplanning.algorithms.AStar(var8);
    demo.pathplanning.model.CartesianGraph var10 = var9.getGraph();
    demo.pathplanning.model.CartesianGraph var11 = var9.getGraph();
    demo.pathplanning.algorithms.PathPlanningContext var12 = new demo.pathplanning.algorithms.PathPlanningContext((demo.pathplanning.algorithms.PathPlanner)var9);
    demo.pathplanning.model.CartesianGraph var13 = var9.getGraph();
    int var14 = var13.getYSize();
    demo.pathplanning.model.CartesianGraph var17 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var20 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var21 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var24 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var27 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var28 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.Node var29 = new demo.pathplanning.model.Node(var13, var21, 1);
    java.util.Collection var30 = var29.getNeighbors();
    demo.pathplanning.model.Location var31 = var29.getLocation();
    java.lang.String var32 = var31.toString();
    demo.pathplanning.model.CartesianGraph var35 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var36 = var35.getXSize();
    int var37 = var35.getYSize();
    int var38 = var35.getYSize();
    demo.pathplanning.model.CartesianGraph var41 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var42 = var41.getXSize();
    int var43 = var41.getYSize();
    int var44 = var41.getYSize();
    demo.pathplanning.model.CartesianGraph var45 = new demo.pathplanning.model.CartesianGraph(var38, var44);
    demo.pathplanning.model.CartesianGraph var48 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var51 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var52 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var53 = new demo.pathplanning.model.CartesianGraph(var38, 1);
    java.lang.String var54 = var53.toString();
    demo.pathplanning.model.CartesianGraph var57 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var60 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var61 = new demo.pathplanning.model.Location(1, 1);
    boolean var63 = var61.equals((java.lang.Object)0L);
    demo.pathplanning.model.Node var64 = var53.getNode(var61);
    demo.pathplanning.model.CartesianGraph var67 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var70 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var71 = new demo.pathplanning.model.Location(1, 1);
    boolean var73 = var71.equals((java.lang.Object)0L);
    int var74 = var71.getX();
    int var75 = var71.getX();
    demo.pathplanning.model.CartesianGraph var78 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var79 = var78.getXSize();
    demo.pathplanning.model.Node var80 = new demo.pathplanning.model.Node(var53, var71, var79);
    int var81 = var80.getCost();
    demo.pathplanning.model.CartesianGraph var84 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var85 = var84.getXSize();
    int var86 = var84.getYSize();
    int var87 = var84.getYSize();
    demo.pathplanning.model.CartesianGraph var90 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var91 = new demo.pathplanning.model.Location(var87, 1);
    java.lang.String var92 = var91.toString();
    boolean var93 = var80.equals((java.lang.Object)var91);
    int var94 = var91.getY();
    java.lang.String var95 = var91.toString();
    java.util.List var96 = var3.getPath(var31, var91);

  }

  public void test320() throws Throwable {

    demo.pathplanning.model.CartesianGraph var2 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var3 = var2.getXSize();
    int var4 = var2.getYSize();
    int var5 = var2.getYSize();
    demo.pathplanning.model.CartesianGraph var8 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var9 = var8.getXSize();
    int var10 = var8.getYSize();
    int var11 = var8.getYSize();
    demo.pathplanning.model.CartesianGraph var12 = new demo.pathplanning.model.CartesianGraph(var5, var11);
    demo.pathplanning.model.CartesianGraph var15 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var18 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var19 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var20 = new demo.pathplanning.model.CartesianGraph(var5, 1);
    java.lang.String var21 = var20.toString();
    demo.pathplanning.model.CartesianGraph var24 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var27 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var28 = new demo.pathplanning.model.Location(1, 1);
    boolean var30 = var28.equals((java.lang.Object)0L);
    demo.pathplanning.model.Node var31 = var20.getNode(var28);
    demo.pathplanning.model.CartesianGraph var34 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var37 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var38 = new demo.pathplanning.model.Location(1, 1);
    boolean var40 = var38.equals((java.lang.Object)0L);
    int var41 = var38.getX();
    int var42 = var38.getX();
    demo.pathplanning.model.CartesianGraph var45 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var46 = var45.getXSize();
    demo.pathplanning.model.Node var47 = new demo.pathplanning.model.Node(var20, var38, var46);
    int var48 = var47.getCost();
    java.util.Collection var49 = var47.getNeighbors();
    demo.pathplanning.model.CartesianGraph var52 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var53 = var52.getXSize();
    demo.pathplanning.algorithms.AStar var54 = new demo.pathplanning.algorithms.AStar(var52);
    demo.pathplanning.model.CartesianGraph var57 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var60 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var61 = new demo.pathplanning.model.Location(1, 1);
    boolean var63 = var61.equals((java.lang.Object)0L);
    demo.pathplanning.model.Node var64 = var52.getNode(var61);
    demo.pathplanning.algorithms.AStar var65 = new demo.pathplanning.algorithms.AStar(var52);
    demo.pathplanning.model.CartesianGraph var66 = var65.getGraph();
    boolean var67 = var47.equals((java.lang.Object)var65);
    demo.pathplanning.model.Location var68 = var47.getLocation();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var3 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var4 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var5 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var9 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var11 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var21 + "' != '" + "0,\n"+ "'", var21.equals("0,\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var30 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var31);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var40 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var41 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var42 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var46 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var48 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var49);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var53 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var63 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var64);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var66);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var67 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var68);

  }

  public void test321() throws Throwable {

    demo.pathplanning.model.CartesianGraph var2 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var3 = var2.getXSize();
    demo.pathplanning.algorithms.AStar var4 = new demo.pathplanning.algorithms.AStar(var2);
    demo.pathplanning.model.CartesianGraph var7 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var10 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var11 = new demo.pathplanning.model.Location(1, 1);
    boolean var13 = var11.equals((java.lang.Object)0L);
    demo.pathplanning.model.Node var14 = var2.getNode(var11);
    demo.pathplanning.algorithms.AStar var15 = new demo.pathplanning.algorithms.AStar(var2);
    demo.pathplanning.model.CartesianGraph var16 = var15.getGraph();
    demo.pathplanning.model.CartesianGraph var17 = var15.getGraph();
    demo.pathplanning.model.CartesianGraph var20 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var23 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var24 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var27 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var28 = var27.getXSize();
    int var29 = var27.getYSize();
    int var30 = var27.getYSize();
    demo.pathplanning.model.CartesianGraph var33 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var34 = var33.getXSize();
    int var35 = var33.getYSize();
    int var36 = var33.getYSize();
    demo.pathplanning.model.CartesianGraph var37 = new demo.pathplanning.model.CartesianGraph(var30, var36);
    java.lang.String var38 = var37.toString();
    demo.pathplanning.model.CartesianGraph var41 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.algorithms.AStar var42 = new demo.pathplanning.algorithms.AStar(var41);
    java.lang.String var43 = var41.toString();
    demo.pathplanning.model.CartesianGraph var46 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var49 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var50 = new demo.pathplanning.model.Location(1, 1);
    boolean var52 = var50.equals((java.lang.Object)0L);
    demo.pathplanning.model.Node var53 = var41.getNode(var50);
    java.lang.String var54 = var50.toString();
    demo.pathplanning.model.CartesianGraph var57 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.algorithms.AStar var58 = new demo.pathplanning.algorithms.AStar(var57);
    demo.pathplanning.model.CartesianGraph var59 = var58.getGraph();
    demo.pathplanning.model.CartesianGraph var60 = var58.getGraph();
    demo.pathplanning.algorithms.PathPlanningContext var61 = new demo.pathplanning.algorithms.PathPlanningContext((demo.pathplanning.algorithms.PathPlanner)var58);
    demo.pathplanning.model.CartesianGraph var62 = var58.getGraph();
    int var63 = var62.getYSize();
    demo.pathplanning.model.CartesianGraph var66 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var69 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var70 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var73 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var76 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var77 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.Node var78 = new demo.pathplanning.model.Node(var62, var70, 1);
    boolean var79 = var50.equals((java.lang.Object)1);
    int var80 = var50.getX();
    demo.pathplanning.model.CartesianGraph var83 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var84 = var83.getXSize();
    int var85 = var83.getYSize();
    int var86 = var83.getYSize();
    demo.pathplanning.model.CartesianGraph var89 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var90 = new demo.pathplanning.model.Location(var86, 1);
    demo.pathplanning.model.Node var91 = new demo.pathplanning.model.Node(var37, var50, var86);
    int var92 = var37.getXSize();
    demo.pathplanning.model.Location var93 = new demo.pathplanning.model.Location(1, var92);
    demo.pathplanning.model.Node var94 = var17.getNode(var93);
    int var95 = var93.getX();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var3 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var13 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var14);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var16);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var17);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var28 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var29 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var30 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var34 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var35 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var36 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var38 + "' != '" + "0,\n"+ "'", var38.equals("0,\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var43 + "' != '" + "0,\n"+ "'", var43.equals("0,\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var52 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var53);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var54 + "' != '" + "(1,1)"+ "'", var54.equals("(1,1)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var59);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var60);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var62);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var63 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var79 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var80 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var84 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var85 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var86 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var92 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var94);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var95 == 1);

  }

  public void test322() throws Throwable {

    demo.pathplanning.model.CartesianGraph var2 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var3 = var2.getXSize();
    int var4 = var2.getYSize();
    int var5 = var2.getYSize();
    demo.pathplanning.model.CartesianGraph var8 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var9 = var8.getXSize();
    int var10 = var8.getYSize();
    int var11 = var8.getYSize();
    demo.pathplanning.model.CartesianGraph var12 = new demo.pathplanning.model.CartesianGraph(var5, var11);
    demo.pathplanning.model.CartesianGraph var15 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var18 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var19 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var20 = new demo.pathplanning.model.CartesianGraph(var5, 1);
    java.lang.String var21 = var20.toString();
    demo.pathplanning.model.CartesianGraph var24 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var27 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var28 = new demo.pathplanning.model.Location(1, 1);
    boolean var30 = var28.equals((java.lang.Object)0L);
    demo.pathplanning.model.Node var31 = var20.getNode(var28);
    demo.pathplanning.model.CartesianGraph var34 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var37 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var38 = new demo.pathplanning.model.Location(1, 1);
    boolean var40 = var38.equals((java.lang.Object)0L);
    int var41 = var38.getX();
    int var42 = var38.getX();
    demo.pathplanning.model.CartesianGraph var45 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var46 = var45.getXSize();
    demo.pathplanning.model.Node var47 = new demo.pathplanning.model.Node(var20, var38, var46);
    int var48 = var47.getCost();
    java.util.Collection var49 = var47.getNeighbors();
    demo.pathplanning.model.Location var50 = var47.getLocation();
    int var51 = var50.getY();
    demo.pathplanning.model.CartesianGraph var54 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var57 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var58 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var61 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var62 = var61.getXSize();
    demo.pathplanning.model.CartesianGraph var65 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var66 = new demo.pathplanning.model.CartesianGraph(var62, 1);
    demo.pathplanning.model.Location var67 = new demo.pathplanning.model.Location(1, 1);
    int var68 = var67.getX();
    int var69 = var67.getY();
    demo.pathplanning.model.CartesianGraph var72 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.algorithms.AStar var73 = new demo.pathplanning.algorithms.AStar(var72);
    boolean var74 = var67.equals((java.lang.Object)var73);
    int var75 = var67.getY();
    boolean var76 = var50.equals((java.lang.Object)var67);
    int var77 = var67.getX();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var3 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var4 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var5 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var9 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var11 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var21 + "' != '" + "0,\n"+ "'", var21.equals("0,\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var30 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var31);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var40 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var41 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var42 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var46 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var48 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var49);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var50);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var51 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var62 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var68 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var69 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var74 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var75 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var76 == true);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var77 == 1);

  }

  public void test323() throws Throwable {

    demo.pathplanning.model.CartesianGraph var2 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var3 = var2.getXSize();
    demo.pathplanning.algorithms.AStar var4 = new demo.pathplanning.algorithms.AStar(var2);
    demo.pathplanning.model.CartesianGraph var7 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var10 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var11 = new demo.pathplanning.model.Location(1, 1);
    boolean var13 = var11.equals((java.lang.Object)0L);
    demo.pathplanning.model.Node var14 = var2.getNode(var11);
    int var15 = var2.getYSize();
    demo.pathplanning.model.CartesianGraph var18 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var19 = var18.getXSize();
    int var20 = var18.getYSize();
    int var21 = var18.getYSize();
    demo.pathplanning.model.CartesianGraph var24 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var25 = new demo.pathplanning.model.Location(var21, 1);
    java.lang.String var26 = var25.toString();
    demo.pathplanning.model.CartesianGraph var29 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var32 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var33 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var36 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var37 = var36.getXSize();
    int var38 = var36.getYSize();
    int var39 = var36.getYSize();
    demo.pathplanning.model.CartesianGraph var42 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var43 = var42.getXSize();
    int var44 = var42.getYSize();
    int var45 = var42.getYSize();
    demo.pathplanning.model.CartesianGraph var46 = new demo.pathplanning.model.CartesianGraph(var39, var45);
    demo.pathplanning.model.CartesianGraph var47 = new demo.pathplanning.model.CartesianGraph(1, var39);
    demo.pathplanning.model.Node var48 = new demo.pathplanning.model.Node(var2, var25, var39);
    java.util.Collection var49 = var48.getNeighbors();
    int var50 = var48.getCost();
    java.util.Collection var51 = var48.getNeighbors();
    java.util.Collection var52 = var48.getNeighbors();
    java.lang.String var53 = var48.toString();
    java.util.Collection var54 = var48.getNeighbors();
    java.lang.String var55 = var48.toString();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var3 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var13 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var14);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var15 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var19 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var20 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var21 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var26 + "' != '" + "(1,1)"+ "'", var26.equals("(1,1)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var37 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var38 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var39 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var43 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var44 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var45 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var49);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var50 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var51);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var52);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var53 + "' != '" + "(1,1)=1"+ "'", var53.equals("(1,1)=1"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var54);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var55 + "' != '" + "(1,1)=1"+ "'", var55.equals("(1,1)=1"));

  }

  public void test324() throws Throwable {

    demo.pathplanning.model.CartesianGraph var2 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.algorithms.AStar var3 = new demo.pathplanning.algorithms.AStar(var2);
    demo.pathplanning.model.CartesianGraph var4 = var3.getGraph();
    demo.pathplanning.model.CartesianGraph var5 = var3.getGraph();
    demo.pathplanning.algorithms.PathPlanningContext var6 = new demo.pathplanning.algorithms.PathPlanningContext((demo.pathplanning.algorithms.PathPlanner)var3);
    demo.pathplanning.model.CartesianGraph var7 = var3.getGraph();
    int var8 = var7.getYSize();
    demo.pathplanning.model.CartesianGraph var11 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var14 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var15 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var18 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var21 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var22 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.Node var23 = new demo.pathplanning.model.Node(var7, var15, 1);
    int var24 = var23.getCost();
    demo.pathplanning.model.CartesianGraph var27 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var28 = var27.getXSize();
    int var29 = var27.getYSize();
    int var30 = var27.getYSize();
    demo.pathplanning.model.CartesianGraph var33 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var34 = new demo.pathplanning.model.Location(var30, 1);
    demo.pathplanning.model.CartesianGraph var35 = new demo.pathplanning.model.CartesianGraph(var24, 1);
    demo.pathplanning.model.CartesianGraph var38 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.algorithms.AStar var39 = new demo.pathplanning.algorithms.AStar(var38);
    demo.pathplanning.model.CartesianGraph var40 = var39.getGraph();
    demo.pathplanning.model.CartesianGraph var41 = var39.getGraph();
    demo.pathplanning.algorithms.PathPlanningContext var42 = new demo.pathplanning.algorithms.PathPlanningContext((demo.pathplanning.algorithms.PathPlanner)var39);
    demo.pathplanning.model.CartesianGraph var43 = var39.getGraph();
    int var44 = var43.getYSize();
    demo.pathplanning.model.CartesianGraph var45 = new demo.pathplanning.model.CartesianGraph(1, var44);
    int var46 = var45.getXSize();
    java.lang.String var47 = var45.toString();
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      demo.pathplanning.model.Direction var48 = demo.pathplanning.model.Direction.valueOf(var47);
      fail("Expected exception of type java.lang.IllegalArgumentException");
    } catch (java.lang.IllegalArgumentException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var8 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var24 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var28 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var29 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var30 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var40);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var41);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var43);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var44 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var46 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var47 + "' != '" + "0,\n"+ "'", var47.equals("0,\n"));

  }

  public void test325() throws Throwable {

    demo.pathplanning.model.CartesianGraph var2 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var3 = var2.getXSize();
    demo.pathplanning.algorithms.AStar var4 = new demo.pathplanning.algorithms.AStar(var2);
    demo.pathplanning.model.CartesianGraph var7 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var10 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var11 = new demo.pathplanning.model.Location(1, 1);
    boolean var13 = var11.equals((java.lang.Object)0L);
    demo.pathplanning.model.Node var14 = var2.getNode(var11);
    int var15 = var2.getYSize();
    demo.pathplanning.model.CartesianGraph var18 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var19 = var18.getXSize();
    int var20 = var18.getYSize();
    int var21 = var18.getYSize();
    demo.pathplanning.model.CartesianGraph var24 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var25 = new demo.pathplanning.model.Location(var21, 1);
    java.lang.String var26 = var25.toString();
    demo.pathplanning.model.CartesianGraph var29 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var32 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var33 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var36 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var37 = var36.getXSize();
    int var38 = var36.getYSize();
    int var39 = var36.getYSize();
    demo.pathplanning.model.CartesianGraph var42 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var43 = var42.getXSize();
    int var44 = var42.getYSize();
    int var45 = var42.getYSize();
    demo.pathplanning.model.CartesianGraph var46 = new demo.pathplanning.model.CartesianGraph(var39, var45);
    demo.pathplanning.model.CartesianGraph var47 = new demo.pathplanning.model.CartesianGraph(1, var39);
    demo.pathplanning.model.Node var48 = new demo.pathplanning.model.Node(var2, var25, var39);
    java.util.Collection var49 = var48.getNeighbors();
    int var50 = var48.getCost();
    demo.pathplanning.model.CartesianGraph var53 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var54 = var53.getXSize();
    demo.pathplanning.model.CartesianGraph var57 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var58 = new demo.pathplanning.model.CartesianGraph(var54, 1);
    demo.pathplanning.model.CartesianGraph var61 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.algorithms.AStar var62 = new demo.pathplanning.algorithms.AStar(var61);
    demo.pathplanning.model.CartesianGraph var63 = var62.getGraph();
    demo.pathplanning.model.CartesianGraph var64 = var62.getGraph();
    demo.pathplanning.algorithms.PathPlanningContext var65 = new demo.pathplanning.algorithms.PathPlanningContext((demo.pathplanning.algorithms.PathPlanner)var62);
    demo.pathplanning.model.CartesianGraph var66 = var62.getGraph();
    int var67 = var66.getYSize();
    demo.pathplanning.model.CartesianGraph var68 = new demo.pathplanning.model.CartesianGraph(var54, var67);
    int var69 = var68.getXSize();
    demo.pathplanning.algorithms.AStar var70 = new demo.pathplanning.algorithms.AStar(var68);
    java.lang.String var71 = var68.toString();
    boolean var72 = var48.equals((java.lang.Object)var68);
    demo.pathplanning.model.CartesianGraph var75 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var78 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var79 = new demo.pathplanning.model.Location(1, 1);
    boolean var81 = var79.equals((java.lang.Object)0L);
    int var82 = var79.getX();
    int var83 = var79.getX();
    int var84 = var79.getY();
    demo.pathplanning.model.Node var85 = var68.getNode(var79);
    java.lang.String var86 = var68.toString();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var3 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var13 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var14);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var15 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var19 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var20 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var21 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var26 + "' != '" + "(1,1)"+ "'", var26.equals("(1,1)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var37 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var38 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var39 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var43 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var44 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var45 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var49);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var50 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var54 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var63);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var64);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var66);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var67 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var69 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var71 + "' != '" + "0,\n"+ "'", var71.equals("0,\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var72 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var81 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var82 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var83 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var84 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var85);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var86 + "' != '" + "0,\n"+ "'", var86.equals("0,\n"));

  }

  public void test326() throws Throwable {

    demo.pathplanning.model.CartesianGraph var2 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var3 = var2.getXSize();
    demo.pathplanning.algorithms.AStar var4 = new demo.pathplanning.algorithms.AStar(var2);
    int var5 = var2.getYSize();
    demo.pathplanning.model.CartesianGraph var8 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var9 = var8.getXSize();
    int var10 = var8.getYSize();
    int var11 = var8.getYSize();
    demo.pathplanning.model.CartesianGraph var14 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var15 = var14.getXSize();
    int var16 = var14.getYSize();
    int var17 = var14.getYSize();
    demo.pathplanning.model.CartesianGraph var18 = new demo.pathplanning.model.CartesianGraph(var11, var17);
    int var19 = var18.getXSize();
    demo.pathplanning.model.CartesianGraph var22 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.algorithms.AStar var23 = new demo.pathplanning.algorithms.AStar(var22);
    java.lang.String var24 = var22.toString();
    demo.pathplanning.model.CartesianGraph var27 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var30 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var31 = new demo.pathplanning.model.Location(1, 1);
    boolean var33 = var31.equals((java.lang.Object)0L);
    demo.pathplanning.model.Node var34 = var22.getNode(var31);
    demo.pathplanning.model.CartesianGraph var37 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var38 = var37.getXSize();
    demo.pathplanning.algorithms.AStar var39 = new demo.pathplanning.algorithms.AStar(var37);
    demo.pathplanning.model.CartesianGraph var42 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var45 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var46 = new demo.pathplanning.model.Location(1, 1);
    boolean var48 = var46.equals((java.lang.Object)0L);
    demo.pathplanning.model.Node var49 = var37.getNode(var46);
    int var50 = var37.getXSize();
    demo.pathplanning.model.Node var51 = new demo.pathplanning.model.Node(var18, var31, var50);
    java.lang.String var52 = var31.toString();
    java.lang.String var53 = var31.toString();
    demo.pathplanning.model.CartesianGraph var56 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var57 = var56.getXSize();
    int var58 = var56.getYSize();
    demo.pathplanning.model.CartesianGraph var61 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.algorithms.AStar var62 = new demo.pathplanning.algorithms.AStar(var61);
    java.lang.String var63 = var61.toString();
    demo.pathplanning.model.CartesianGraph var66 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var69 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var70 = new demo.pathplanning.model.Location(1, 1);
    boolean var72 = var70.equals((java.lang.Object)0L);
    demo.pathplanning.model.Node var73 = var61.getNode(var70);
    demo.pathplanning.model.CartesianGraph var76 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var79 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var80 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var83 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var84 = var83.getXSize();
    demo.pathplanning.model.CartesianGraph var87 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var88 = new demo.pathplanning.model.CartesianGraph(var84, 1);
    demo.pathplanning.model.Location var89 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.Node var90 = new demo.pathplanning.model.Node(var56, var70, 1);
    int var91 = var70.getX();
    boolean var92 = var31.equals((java.lang.Object)var91);
    int var93 = var31.getY();
    demo.pathplanning.model.Node var94 = var2.getNode(var31);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var3 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var5 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var9 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var11 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var15 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var16 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var17 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var19 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var24 + "' != '" + "0,\n"+ "'", var24.equals("0,\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var33 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var34);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var38 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var48 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var49);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var50 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var52 + "' != '" + "(1,1)"+ "'", var52.equals("(1,1)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var53 + "' != '" + "(1,1)"+ "'", var53.equals("(1,1)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var57 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var58 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var63 + "' != '" + "0,\n"+ "'", var63.equals("0,\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var72 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var73);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var84 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var91 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var92 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var93 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var94);

  }

  public void test327() throws Throwable {

    demo.pathplanning.model.CartesianGraph var2 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var5 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var6 = new demo.pathplanning.model.Location(1, 1);
    boolean var8 = var6.equals((java.lang.Object)0L);
    demo.pathplanning.model.CartesianGraph var11 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var14 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var15 = new demo.pathplanning.model.Location(1, 1);
    boolean var17 = var15.equals((java.lang.Object)0L);
    int var18 = var15.getX();
    int var19 = var15.getX();
    int var20 = var15.getY();
    demo.pathplanning.model.CartesianGraph var23 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var24 = var23.getXSize();
    demo.pathplanning.algorithms.AStar var25 = new demo.pathplanning.algorithms.AStar(var23);
    demo.pathplanning.model.CartesianGraph var28 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var31 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var32 = new demo.pathplanning.model.Location(1, 1);
    boolean var34 = var32.equals((java.lang.Object)0L);
    demo.pathplanning.model.Node var35 = var23.getNode(var32);
    boolean var36 = var15.equals((java.lang.Object)var32);
    int var37 = var32.getY();
    int var38 = var32.getX();
    demo.pathplanning.model.CartesianGraph var41 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var42 = var41.getXSize();
    demo.pathplanning.algorithms.AStar var43 = new demo.pathplanning.algorithms.AStar(var41);
    demo.pathplanning.model.CartesianGraph var46 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var49 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var50 = new demo.pathplanning.model.Location(1, 1);
    boolean var52 = var50.equals((java.lang.Object)0L);
    demo.pathplanning.model.Node var53 = var41.getNode(var50);
    int var54 = var50.getY();
    int var55 = var50.getY();
    demo.pathplanning.model.CartesianGraph var56 = new demo.pathplanning.model.CartesianGraph(var38, var55);
    int var57 = var56.getYSize();
    boolean var58 = var6.equals((java.lang.Object)var57);
    int var59 = var6.getX();
    java.lang.String var60 = var6.toString();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var17 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var18 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var19 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var20 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var24 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var34 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var35);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var36 == true);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var37 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var38 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var42 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var52 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var53);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var54 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var55 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var57 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var58 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var59 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var60 + "' != '" + "(1,1)"+ "'", var60.equals("(1,1)"));

  }

  public void test328() throws Throwable {

    demo.pathplanning.model.CartesianGraph var2 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.algorithms.AStar var3 = new demo.pathplanning.algorithms.AStar(var2);
    demo.pathplanning.model.CartesianGraph var4 = var3.getGraph();
    demo.pathplanning.model.CartesianGraph var5 = var3.getGraph();
    demo.pathplanning.algorithms.PathPlanningContext var6 = new demo.pathplanning.algorithms.PathPlanningContext((demo.pathplanning.algorithms.PathPlanner)var3);
    demo.pathplanning.model.CartesianGraph var7 = var3.getGraph();
    int var8 = var7.getYSize();
    demo.pathplanning.model.CartesianGraph var11 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var14 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var15 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var18 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var21 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var22 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.Node var23 = new demo.pathplanning.model.Node(var7, var15, 1);
    int var24 = var23.getCost();
    java.util.Collection var25 = var23.getNeighbors();
    int var26 = var23.getCost();
    demo.pathplanning.model.CartesianGraph var29 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var32 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var33 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var36 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var37 = var36.getXSize();
    int var38 = var36.getYSize();
    int var39 = var36.getYSize();
    demo.pathplanning.model.CartesianGraph var42 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var43 = var42.getXSize();
    int var44 = var42.getYSize();
    int var45 = var42.getYSize();
    demo.pathplanning.model.CartesianGraph var46 = new demo.pathplanning.model.CartesianGraph(var39, var45);
    demo.pathplanning.model.CartesianGraph var47 = new demo.pathplanning.model.CartesianGraph(1, var39);
    int var48 = var47.getYSize();
    demo.pathplanning.model.CartesianGraph var51 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.algorithms.AStar var52 = new demo.pathplanning.algorithms.AStar(var51);
    java.lang.String var53 = var51.toString();
    demo.pathplanning.model.CartesianGraph var56 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var59 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var60 = new demo.pathplanning.model.Location(1, 1);
    boolean var62 = var60.equals((java.lang.Object)0L);
    demo.pathplanning.model.Node var63 = var51.getNode(var60);
    demo.pathplanning.model.CartesianGraph var66 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var67 = var66.getXSize();
    int var68 = var66.getYSize();
    int var69 = var66.getYSize();
    demo.pathplanning.model.CartesianGraph var72 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var73 = var72.getXSize();
    int var74 = var72.getYSize();
    int var75 = var72.getYSize();
    demo.pathplanning.model.CartesianGraph var76 = new demo.pathplanning.model.CartesianGraph(var69, var75);
    demo.pathplanning.model.CartesianGraph var79 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var82 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var83 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var84 = new demo.pathplanning.model.CartesianGraph(var69, 1);
    demo.pathplanning.model.Node var85 = new demo.pathplanning.model.Node(var47, var60, 1);
    boolean var86 = var23.equals((java.lang.Object)var47);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var8 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var24 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var25);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var26 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var37 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var38 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var39 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var43 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var44 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var45 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var48 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var53 + "' != '" + "0,\n"+ "'", var53.equals("0,\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var62 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var63);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var67 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var68 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var69 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var73 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var74 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var75 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var86 == false);

  }

  public void test329() throws Throwable {

    demo.pathplanning.model.CartesianGraph var2 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var3 = var2.getXSize();
    int var4 = var2.getYSize();
    int var5 = var2.getYSize();
    demo.pathplanning.model.CartesianGraph var8 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var9 = var8.getXSize();
    int var10 = var8.getYSize();
    int var11 = var8.getYSize();
    demo.pathplanning.model.CartesianGraph var12 = new demo.pathplanning.model.CartesianGraph(var5, var11);
    int var13 = var12.getXSize();
    demo.pathplanning.model.CartesianGraph var16 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.algorithms.AStar var17 = new demo.pathplanning.algorithms.AStar(var16);
    java.lang.String var18 = var16.toString();
    demo.pathplanning.model.CartesianGraph var21 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var24 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var25 = new demo.pathplanning.model.Location(1, 1);
    boolean var27 = var25.equals((java.lang.Object)0L);
    demo.pathplanning.model.Node var28 = var16.getNode(var25);
    demo.pathplanning.model.CartesianGraph var31 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var32 = var31.getXSize();
    demo.pathplanning.algorithms.AStar var33 = new demo.pathplanning.algorithms.AStar(var31);
    demo.pathplanning.model.CartesianGraph var36 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var39 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var40 = new demo.pathplanning.model.Location(1, 1);
    boolean var42 = var40.equals((java.lang.Object)0L);
    demo.pathplanning.model.Node var43 = var31.getNode(var40);
    int var44 = var31.getXSize();
    demo.pathplanning.model.Node var45 = new demo.pathplanning.model.Node(var12, var25, var44);
    java.lang.String var46 = var25.toString();
    int var47 = var25.getY();
    boolean var49 = var25.equals((java.lang.Object)0L);
    int var50 = var25.getY();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var3 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var4 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var5 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var9 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var11 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var13 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var18 + "' != '" + "0,\n"+ "'", var18.equals("0,\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var27 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var28);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var32 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var42 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var43);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var44 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var46 + "' != '" + "(1,1)"+ "'", var46.equals("(1,1)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var47 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var49 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var50 == 1);

  }

  public void test330() throws Throwable {

    demo.pathplanning.model.CartesianGraph var2 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.algorithms.AStar var3 = new demo.pathplanning.algorithms.AStar(var2);
    demo.pathplanning.model.CartesianGraph var4 = var3.getGraph();
    demo.pathplanning.model.CartesianGraph var5 = var3.getGraph();
    demo.pathplanning.algorithms.PathPlanningContext var6 = new demo.pathplanning.algorithms.PathPlanningContext((demo.pathplanning.algorithms.PathPlanner)var3);
    demo.pathplanning.model.CartesianGraph var7 = var3.getGraph();
    int var8 = var7.getYSize();
    demo.pathplanning.model.CartesianGraph var11 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var14 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var15 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var18 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var21 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var22 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.Node var23 = new demo.pathplanning.model.Node(var7, var15, 1);
    int var24 = var23.getCost();
    java.util.Collection var25 = var23.getNeighbors();
    int var26 = var23.getCost();
    demo.pathplanning.model.CartesianGraph var29 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var30 = var29.getXSize();
    demo.pathplanning.model.CartesianGraph var33 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var34 = new demo.pathplanning.model.CartesianGraph(var30, 1);
    demo.pathplanning.model.CartesianGraph var37 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.algorithms.AStar var38 = new demo.pathplanning.algorithms.AStar(var37);
    demo.pathplanning.model.CartesianGraph var39 = var38.getGraph();
    demo.pathplanning.model.CartesianGraph var40 = var38.getGraph();
    demo.pathplanning.algorithms.PathPlanningContext var41 = new demo.pathplanning.algorithms.PathPlanningContext((demo.pathplanning.algorithms.PathPlanner)var38);
    demo.pathplanning.model.CartesianGraph var42 = var38.getGraph();
    int var43 = var42.getYSize();
    demo.pathplanning.model.CartesianGraph var44 = new demo.pathplanning.model.CartesianGraph(var30, var43);
    int var45 = var44.getXSize();
    demo.pathplanning.algorithms.AStar var46 = new demo.pathplanning.algorithms.AStar(var44);
    boolean var47 = var23.equals((java.lang.Object)var44);
    int var48 = var44.getXSize();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var8 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var24 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var25);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var26 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var30 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var39);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var40);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var42);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var43 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var45 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var47 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var48 == 1);

  }

  public void test331() throws Throwable {

    demo.pathplanning.model.CartesianGraph var2 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var3 = var2.getXSize();
    demo.pathplanning.algorithms.AStar var4 = new demo.pathplanning.algorithms.AStar(var2);
    demo.pathplanning.model.CartesianGraph var7 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var10 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var11 = new demo.pathplanning.model.Location(1, 1);
    boolean var13 = var11.equals((java.lang.Object)0L);
    demo.pathplanning.model.Node var14 = var2.getNode(var11);
    demo.pathplanning.algorithms.AStar var15 = new demo.pathplanning.algorithms.AStar(var2);
    demo.pathplanning.algorithms.PathPlanningContext var16 = new demo.pathplanning.algorithms.PathPlanningContext((demo.pathplanning.algorithms.PathPlanner)var15);
    demo.pathplanning.model.CartesianGraph var17 = var15.getGraph();
    demo.pathplanning.model.CartesianGraph var20 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var21 = var20.getXSize();
    int var22 = var20.getYSize();
    int var23 = var20.getYSize();
    demo.pathplanning.model.CartesianGraph var26 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var27 = var26.getXSize();
    int var28 = var26.getYSize();
    int var29 = var26.getYSize();
    demo.pathplanning.model.CartesianGraph var30 = new demo.pathplanning.model.CartesianGraph(var23, var29);
    demo.pathplanning.model.CartesianGraph var33 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var36 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var37 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var38 = new demo.pathplanning.model.CartesianGraph(var23, 1);
    java.lang.String var39 = var38.toString();
    demo.pathplanning.model.CartesianGraph var42 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var45 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var46 = new demo.pathplanning.model.Location(1, 1);
    boolean var48 = var46.equals((java.lang.Object)0L);
    demo.pathplanning.model.Node var49 = var38.getNode(var46);
    demo.pathplanning.model.CartesianGraph var52 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var55 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var56 = new demo.pathplanning.model.Location(1, 1);
    boolean var58 = var56.equals((java.lang.Object)0L);
    int var59 = var56.getX();
    int var60 = var56.getX();
    demo.pathplanning.model.CartesianGraph var63 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var64 = var63.getXSize();
    demo.pathplanning.model.Node var65 = new demo.pathplanning.model.Node(var38, var56, var64);
    int var66 = var56.getY();
    demo.pathplanning.model.Node var67 = var17.getNode(var56);
    int var68 = var56.getY();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var3 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var13 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var14);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var17);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var21 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var22 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var23 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var27 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var28 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var29 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var39 + "' != '" + "0,\n"+ "'", var39.equals("0,\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var48 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var49);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var58 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var59 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var60 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var64 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var66 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var67);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var68 == 1);

  }

  public void test332() throws Throwable {

    demo.pathplanning.model.CartesianGraph var2 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var5 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var6 = new demo.pathplanning.model.Location(1, 1);
    int var7 = var6.getX();
    demo.pathplanning.model.CartesianGraph var10 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var13 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var14 = new demo.pathplanning.model.Location(1, 1);
    boolean var16 = var14.equals((java.lang.Object)0L);
    int var17 = var14.getX();
    int var18 = var14.getX();
    int var19 = var14.getY();
    demo.pathplanning.model.CartesianGraph var22 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var23 = var22.getXSize();
    demo.pathplanning.algorithms.AStar var24 = new demo.pathplanning.algorithms.AStar(var22);
    demo.pathplanning.model.CartesianGraph var27 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var30 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var31 = new demo.pathplanning.model.Location(1, 1);
    boolean var33 = var31.equals((java.lang.Object)0L);
    demo.pathplanning.model.Node var34 = var22.getNode(var31);
    boolean var35 = var14.equals((java.lang.Object)var31);
    int var36 = var31.getY();
    boolean var37 = var6.equals((java.lang.Object)var31);
    java.lang.String var38 = var31.toString();
    int var39 = var31.getY();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var7 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var16 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var17 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var18 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var19 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var23 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var33 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var34);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var35 == true);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var36 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var37 == true);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var38 + "' != '" + "(1,1)"+ "'", var38.equals("(1,1)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var39 == 1);

  }

  public void test333() throws Throwable {

    demo.pathplanning.model.CartesianGraph var2 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var3 = var2.getXSize();
    demo.pathplanning.algorithms.AStar var4 = new demo.pathplanning.algorithms.AStar(var2);
    demo.pathplanning.model.CartesianGraph var7 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var10 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var11 = new demo.pathplanning.model.Location(1, 1);
    boolean var13 = var11.equals((java.lang.Object)0L);
    demo.pathplanning.model.Node var14 = var2.getNode(var11);
    int var15 = var2.getYSize();
    demo.pathplanning.model.CartesianGraph var18 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var19 = var18.getXSize();
    int var20 = var18.getYSize();
    int var21 = var18.getYSize();
    demo.pathplanning.model.CartesianGraph var24 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var25 = new demo.pathplanning.model.Location(var21, 1);
    java.lang.String var26 = var25.toString();
    demo.pathplanning.model.CartesianGraph var29 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var32 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var33 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var36 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var37 = var36.getXSize();
    int var38 = var36.getYSize();
    int var39 = var36.getYSize();
    demo.pathplanning.model.CartesianGraph var42 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var43 = var42.getXSize();
    int var44 = var42.getYSize();
    int var45 = var42.getYSize();
    demo.pathplanning.model.CartesianGraph var46 = new demo.pathplanning.model.CartesianGraph(var39, var45);
    demo.pathplanning.model.CartesianGraph var47 = new demo.pathplanning.model.CartesianGraph(1, var39);
    demo.pathplanning.model.Node var48 = new demo.pathplanning.model.Node(var2, var25, var39);
    java.util.Collection var49 = var48.getNeighbors();
    java.lang.String var50 = var48.toString();
    java.lang.String var51 = var48.toString();
    int var52 = var48.getCost();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var3 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var13 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var14);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var15 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var19 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var20 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var21 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var26 + "' != '" + "(1,1)"+ "'", var26.equals("(1,1)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var37 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var38 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var39 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var43 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var44 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var45 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var49);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var50 + "' != '" + "(1,1)=1"+ "'", var50.equals("(1,1)=1"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var51 + "' != '" + "(1,1)=1"+ "'", var51.equals("(1,1)=1"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var52 == 1);

  }

  public void test334() throws Throwable {

    demo.pathplanning.model.CartesianGraph var2 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.algorithms.AStar var3 = new demo.pathplanning.algorithms.AStar(var2);
    java.lang.String var4 = var2.toString();
    demo.pathplanning.model.CartesianGraph var7 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var10 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var11 = new demo.pathplanning.model.Location(1, 1);
    boolean var13 = var11.equals((java.lang.Object)0L);
    demo.pathplanning.model.Node var14 = var2.getNode(var11);
    demo.pathplanning.model.CartesianGraph var17 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var18 = var17.getXSize();
    int var19 = var17.getYSize();
    int var20 = var17.getYSize();
    demo.pathplanning.model.CartesianGraph var23 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var24 = var23.getXSize();
    int var25 = var23.getYSize();
    int var26 = var23.getYSize();
    demo.pathplanning.model.CartesianGraph var27 = new demo.pathplanning.model.CartesianGraph(var20, var26);
    int var28 = var27.getXSize();
    demo.pathplanning.model.CartesianGraph var31 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.algorithms.AStar var32 = new demo.pathplanning.algorithms.AStar(var31);
    java.lang.String var33 = var31.toString();
    demo.pathplanning.model.CartesianGraph var36 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var39 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var40 = new demo.pathplanning.model.Location(1, 1);
    boolean var42 = var40.equals((java.lang.Object)0L);
    demo.pathplanning.model.Node var43 = var31.getNode(var40);
    demo.pathplanning.model.CartesianGraph var46 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var47 = var46.getXSize();
    demo.pathplanning.algorithms.AStar var48 = new demo.pathplanning.algorithms.AStar(var46);
    demo.pathplanning.model.CartesianGraph var51 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var54 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var55 = new demo.pathplanning.model.Location(1, 1);
    boolean var57 = var55.equals((java.lang.Object)0L);
    demo.pathplanning.model.Node var58 = var46.getNode(var55);
    int var59 = var46.getXSize();
    demo.pathplanning.model.Node var60 = new demo.pathplanning.model.Node(var27, var40, var59);
    java.lang.String var61 = var40.toString();
    int var62 = var40.getY();
    demo.pathplanning.model.Node var63 = var2.getNode(var40);
    int var64 = var2.getXSize();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var4 + "' != '" + "0,\n"+ "'", var4.equals("0,\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var13 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var14);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var18 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var19 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var20 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var24 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var25 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var26 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var28 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var33 + "' != '" + "0,\n"+ "'", var33.equals("0,\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var42 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var43);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var47 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var57 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var58);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var59 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var61 + "' != '" + "(1,1)"+ "'", var61.equals("(1,1)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var62 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var63);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var64 == 1);

  }

  public void test335() throws Throwable {

    demo.pathplanning.model.CartesianGraph var2 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.algorithms.AStar var3 = new demo.pathplanning.algorithms.AStar(var2);
    demo.pathplanning.model.CartesianGraph var4 = var3.getGraph();
    demo.pathplanning.model.CartesianGraph var5 = var3.getGraph();
    demo.pathplanning.algorithms.PathPlanningContext var6 = new demo.pathplanning.algorithms.PathPlanningContext((demo.pathplanning.algorithms.PathPlanner)var3);
    demo.pathplanning.model.CartesianGraph var7 = var3.getGraph();
    int var8 = var7.getYSize();
    demo.pathplanning.model.CartesianGraph var11 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var14 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var15 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var18 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var21 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var22 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.Node var23 = new demo.pathplanning.model.Node(var7, var15, 1);
    java.util.Collection var24 = var23.getNeighbors();
    demo.pathplanning.model.Location var25 = var23.getLocation();
    java.lang.String var26 = var25.toString();
    java.lang.String var27 = var25.toString();
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      demo.pathplanning.model.Direction var28 = demo.pathplanning.model.Direction.valueOf(var27);
      fail("Expected exception of type java.lang.IllegalArgumentException");
    } catch (java.lang.IllegalArgumentException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var8 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var24);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var25);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var26 + "' != '" + "(1,1)"+ "'", var26.equals("(1,1)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var27 + "' != '" + "(1,1)"+ "'", var27.equals("(1,1)"));

  }

  public void test336() throws Throwable {

    demo.pathplanning.model.CartesianGraph var2 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.algorithms.AStar var3 = new demo.pathplanning.algorithms.AStar(var2);
    demo.pathplanning.model.CartesianGraph var4 = var3.getGraph();
    demo.pathplanning.model.CartesianGraph var5 = var3.getGraph();
    demo.pathplanning.algorithms.PathPlanningContext var6 = new demo.pathplanning.algorithms.PathPlanningContext((demo.pathplanning.algorithms.PathPlanner)var3);
    demo.pathplanning.model.CartesianGraph var7 = var3.getGraph();
    int var8 = var7.getYSize();
    demo.pathplanning.model.CartesianGraph var11 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var14 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var15 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var18 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var21 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var22 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.Node var23 = new demo.pathplanning.model.Node(var7, var15, 1);
    java.util.Collection var24 = var23.getNeighbors();
    java.util.Collection var25 = var23.getNeighbors();
    java.lang.String var26 = var23.toString();
    int var27 = var23.getCost();
    java.lang.String var28 = var23.toString();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var8 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var24);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var25);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var26 + "' != '" + "(1,1)=1"+ "'", var26.equals("(1,1)=1"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var27 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var28 + "' != '" + "(1,1)=1"+ "'", var28.equals("(1,1)=1"));

  }

  public void test337() throws Throwable {

    demo.pathplanning.model.CartesianGraph var2 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var3 = var2.getXSize();
    demo.pathplanning.algorithms.AStar var4 = new demo.pathplanning.algorithms.AStar(var2);
    demo.pathplanning.model.CartesianGraph var7 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var10 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var11 = new demo.pathplanning.model.Location(1, 1);
    boolean var13 = var11.equals((java.lang.Object)0L);
    demo.pathplanning.model.Node var14 = var2.getNode(var11);
    java.lang.String var15 = var2.toString();
    demo.pathplanning.algorithms.AStar var16 = new demo.pathplanning.algorithms.AStar(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var3 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var13 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var14);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var15 + "' != '" + "0,\n"+ "'", var15.equals("0,\n"));

  }

  public void test338() throws Throwable {

    demo.pathplanning.model.CartesianGraph var2 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var5 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var6 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var9 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var10 = var9.getXSize();
    demo.pathplanning.model.CartesianGraph var13 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var14 = new demo.pathplanning.model.CartesianGraph(var10, 1);
    demo.pathplanning.model.Location var15 = new demo.pathplanning.model.Location(1, 1);
    int var16 = var15.getX();
    int var17 = var15.getY();
    demo.pathplanning.model.CartesianGraph var20 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.algorithms.AStar var21 = new demo.pathplanning.algorithms.AStar(var20);
    boolean var22 = var15.equals((java.lang.Object)var21);
    demo.pathplanning.model.CartesianGraph var23 = var21.getGraph();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var16 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var17 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var22 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var23);

  }

  public void test339() throws Throwable {

    demo.pathplanning.model.CartesianGraph var2 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var3 = var2.getXSize();
    int var4 = var2.getYSize();
    demo.pathplanning.model.CartesianGraph var7 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.algorithms.AStar var8 = new demo.pathplanning.algorithms.AStar(var7);
    java.lang.String var9 = var7.toString();
    demo.pathplanning.model.CartesianGraph var12 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var15 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var16 = new demo.pathplanning.model.Location(1, 1);
    boolean var18 = var16.equals((java.lang.Object)0L);
    demo.pathplanning.model.Node var19 = var7.getNode(var16);
    demo.pathplanning.model.CartesianGraph var22 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var25 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var26 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var29 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var30 = var29.getXSize();
    demo.pathplanning.model.CartesianGraph var33 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var34 = new demo.pathplanning.model.CartesianGraph(var30, 1);
    demo.pathplanning.model.Location var35 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.Node var36 = new demo.pathplanning.model.Node(var2, var16, 1);
    demo.pathplanning.model.CartesianGraph var39 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var40 = var39.getXSize();
    demo.pathplanning.model.CartesianGraph var43 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var44 = new demo.pathplanning.model.CartesianGraph(var40, 1);
    java.lang.String var45 = var44.toString();
    boolean var46 = var36.equals((java.lang.Object)var44);
    demo.pathplanning.algorithms.AStar var47 = new demo.pathplanning.algorithms.AStar(var44);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var3 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var4 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var9 + "' != '" + "0,\n"+ "'", var9.equals("0,\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var18 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var19);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var30 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var40 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var45 + "' != '" + "0,\n"+ "'", var45.equals("0,\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var46 == false);

  }

  public void test340() throws Throwable {

    demo.pathplanning.model.CartesianGraph var2 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var3 = var2.getXSize();
    demo.pathplanning.algorithms.AStar var4 = new demo.pathplanning.algorithms.AStar(var2);
    demo.pathplanning.model.CartesianGraph var7 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var10 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var11 = new demo.pathplanning.model.Location(1, 1);
    boolean var13 = var11.equals((java.lang.Object)0L);
    demo.pathplanning.model.Node var14 = var2.getNode(var11);
    int var15 = var2.getYSize();
    demo.pathplanning.model.CartesianGraph var18 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var19 = var18.getXSize();
    int var20 = var18.getYSize();
    int var21 = var18.getYSize();
    demo.pathplanning.model.CartesianGraph var24 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var25 = new demo.pathplanning.model.Location(var21, 1);
    java.lang.String var26 = var25.toString();
    demo.pathplanning.model.CartesianGraph var29 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var32 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var33 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var36 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var37 = var36.getXSize();
    int var38 = var36.getYSize();
    int var39 = var36.getYSize();
    demo.pathplanning.model.CartesianGraph var42 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var43 = var42.getXSize();
    int var44 = var42.getYSize();
    int var45 = var42.getYSize();
    demo.pathplanning.model.CartesianGraph var46 = new demo.pathplanning.model.CartesianGraph(var39, var45);
    demo.pathplanning.model.CartesianGraph var47 = new demo.pathplanning.model.CartesianGraph(1, var39);
    demo.pathplanning.model.Node var48 = new demo.pathplanning.model.Node(var2, var25, var39);
    demo.pathplanning.model.CartesianGraph var51 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.algorithms.AStar var52 = new demo.pathplanning.algorithms.AStar(var51);
    demo.pathplanning.model.CartesianGraph var53 = var52.getGraph();
    demo.pathplanning.model.CartesianGraph var54 = var52.getGraph();
    demo.pathplanning.algorithms.PathPlanningContext var55 = new demo.pathplanning.algorithms.PathPlanningContext((demo.pathplanning.algorithms.PathPlanner)var52);
    demo.pathplanning.model.CartesianGraph var56 = var52.getGraph();
    int var57 = var56.getYSize();
    demo.pathplanning.model.CartesianGraph var60 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var63 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var64 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var67 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var70 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var71 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.Node var72 = new demo.pathplanning.model.Node(var56, var64, 1);
    demo.pathplanning.model.Node var73 = var2.getNode(var64);
    demo.pathplanning.model.CartesianGraph var76 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.algorithms.AStar var77 = new demo.pathplanning.algorithms.AStar(var76);
    java.lang.String var78 = var76.toString();
    demo.pathplanning.model.CartesianGraph var81 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var84 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var85 = new demo.pathplanning.model.Location(1, 1);
    boolean var87 = var85.equals((java.lang.Object)0L);
    demo.pathplanning.model.Node var88 = var76.getNode(var85);
    demo.pathplanning.model.Node var89 = var2.getNode(var85);
    int var90 = var85.getX();
    int var91 = var85.getX();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var3 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var13 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var14);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var15 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var19 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var20 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var21 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var26 + "' != '" + "(1,1)"+ "'", var26.equals("(1,1)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var37 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var38 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var39 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var43 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var44 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var45 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var53);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var54);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var56);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var57 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var73);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var78 + "' != '" + "0,\n"+ "'", var78.equals("0,\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var87 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var88);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var89);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var90 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var91 == 1);

  }

  public void test341() throws Throwable {

    demo.pathplanning.model.CartesianGraph var2 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var3 = var2.getXSize();
    demo.pathplanning.algorithms.AStar var4 = new demo.pathplanning.algorithms.AStar(var2);
    demo.pathplanning.model.CartesianGraph var7 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var10 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var11 = new demo.pathplanning.model.Location(1, 1);
    boolean var13 = var11.equals((java.lang.Object)0L);
    demo.pathplanning.model.Node var14 = var2.getNode(var11);
    demo.pathplanning.model.CartesianGraph var17 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.algorithms.AStar var18 = new demo.pathplanning.algorithms.AStar(var17);
    demo.pathplanning.model.CartesianGraph var19 = var18.getGraph();
    demo.pathplanning.model.CartesianGraph var20 = var18.getGraph();
    demo.pathplanning.algorithms.PathPlanningContext var21 = new demo.pathplanning.algorithms.PathPlanningContext((demo.pathplanning.algorithms.PathPlanner)var18);
    demo.pathplanning.model.CartesianGraph var22 = var18.getGraph();
    demo.pathplanning.model.CartesianGraph var23 = var18.getGraph();
    demo.pathplanning.model.CartesianGraph var26 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var27 = var26.getXSize();
    demo.pathplanning.algorithms.AStar var28 = new demo.pathplanning.algorithms.AStar(var26);
    demo.pathplanning.model.CartesianGraph var31 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var34 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var35 = new demo.pathplanning.model.Location(1, 1);
    boolean var37 = var35.equals((java.lang.Object)0L);
    demo.pathplanning.model.Node var38 = var26.getNode(var35);
    int var39 = var35.getY();
    demo.pathplanning.model.CartesianGraph var42 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var43 = var42.getXSize();
    int var44 = var42.getYSize();
    int var45 = var42.getYSize();
    demo.pathplanning.model.CartesianGraph var48 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var49 = var48.getXSize();
    int var50 = var48.getYSize();
    int var51 = var48.getYSize();
    demo.pathplanning.model.CartesianGraph var52 = new demo.pathplanning.model.CartesianGraph(var45, var51);
    int var53 = var52.getXSize();
    demo.pathplanning.model.CartesianGraph var56 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.algorithms.AStar var57 = new demo.pathplanning.algorithms.AStar(var56);
    java.lang.String var58 = var56.toString();
    demo.pathplanning.model.CartesianGraph var61 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var64 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var65 = new demo.pathplanning.model.Location(1, 1);
    boolean var67 = var65.equals((java.lang.Object)0L);
    demo.pathplanning.model.Node var68 = var56.getNode(var65);
    demo.pathplanning.model.CartesianGraph var71 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var72 = var71.getXSize();
    demo.pathplanning.algorithms.AStar var73 = new demo.pathplanning.algorithms.AStar(var71);
    demo.pathplanning.model.CartesianGraph var76 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var79 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var80 = new demo.pathplanning.model.Location(1, 1);
    boolean var82 = var80.equals((java.lang.Object)0L);
    demo.pathplanning.model.Node var83 = var71.getNode(var80);
    int var84 = var71.getXSize();
    demo.pathplanning.model.Node var85 = new demo.pathplanning.model.Node(var52, var65, var84);
    java.lang.String var86 = var52.toString();
    boolean var87 = var35.equals((java.lang.Object)var86);
    java.lang.String var88 = var35.toString();
    demo.pathplanning.model.Node var89 = var23.getNode(var35);
    demo.pathplanning.model.Node var90 = var2.getNode(var35);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var3 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var13 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var14);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var19);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var20);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var22);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var23);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var27 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var37 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var38);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var39 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var43 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var44 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var45 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var49 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var50 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var51 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var53 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var58 + "' != '" + "0,\n"+ "'", var58.equals("0,\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var67 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var68);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var72 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var82 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var83);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var84 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var86 + "' != '" + "0,\n"+ "'", var86.equals("0,\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var87 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var88 + "' != '" + "(1,1)"+ "'", var88.equals("(1,1)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var89);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var90);

  }

  public void test342() throws Throwable {

    demo.pathplanning.model.CartesianGraph var2 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var3 = var2.getXSize();
    int var4 = var2.getYSize();
    demo.pathplanning.model.CartesianGraph var7 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.algorithms.AStar var8 = new demo.pathplanning.algorithms.AStar(var7);
    java.lang.String var9 = var7.toString();
    demo.pathplanning.model.CartesianGraph var12 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var15 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var16 = new demo.pathplanning.model.Location(1, 1);
    boolean var18 = var16.equals((java.lang.Object)0L);
    demo.pathplanning.model.Node var19 = var7.getNode(var16);
    demo.pathplanning.model.CartesianGraph var22 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var25 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var26 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var29 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var30 = var29.getXSize();
    demo.pathplanning.model.CartesianGraph var33 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var34 = new demo.pathplanning.model.CartesianGraph(var30, 1);
    demo.pathplanning.model.Location var35 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.Node var36 = new demo.pathplanning.model.Node(var2, var16, 1);
    demo.pathplanning.algorithms.AStar var37 = new demo.pathplanning.algorithms.AStar(var2);
    demo.pathplanning.model.CartesianGraph var38 = var37.getGraph();
    int var39 = var38.getXSize();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var3 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var4 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var9 + "' != '" + "0,\n"+ "'", var9.equals("0,\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var18 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var19);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var30 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var38);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var39 == 1);

  }

  public void test343() throws Throwable {

    demo.pathplanning.model.CartesianGraph var2 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var5 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var6 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var9 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var10 = var9.getXSize();
    int var11 = var9.getYSize();
    int var12 = var9.getYSize();
    demo.pathplanning.model.CartesianGraph var15 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var16 = var15.getXSize();
    int var17 = var15.getYSize();
    int var18 = var15.getYSize();
    demo.pathplanning.model.CartesianGraph var19 = new demo.pathplanning.model.CartesianGraph(var12, var18);
    demo.pathplanning.model.CartesianGraph var20 = new demo.pathplanning.model.CartesianGraph(1, var12);
    int var21 = var20.getYSize();
    demo.pathplanning.model.CartesianGraph var24 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var25 = var24.getXSize();
    int var26 = var24.getYSize();
    int var27 = var24.getYSize();
    demo.pathplanning.model.CartesianGraph var30 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var31 = new demo.pathplanning.model.Location(var27, 1);
    java.lang.String var32 = var31.toString();
    demo.pathplanning.model.Node var33 = var20.getNode(var31);
    int var34 = var31.getY();
    java.lang.String var35 = var31.toString();
    demo.pathplanning.model.CartesianGraph var38 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var39 = var38.getXSize();
    demo.pathplanning.algorithms.AStar var40 = new demo.pathplanning.algorithms.AStar(var38);
    demo.pathplanning.model.CartesianGraph var41 = var40.getGraph();
    boolean var42 = var31.equals((java.lang.Object)var40);
    int var43 = var31.getX();
    demo.pathplanning.model.CartesianGraph var46 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.algorithms.AStar var47 = new demo.pathplanning.algorithms.AStar(var46);
    demo.pathplanning.model.CartesianGraph var48 = var47.getGraph();
    demo.pathplanning.model.CartesianGraph var49 = var47.getGraph();
    demo.pathplanning.algorithms.PathPlanningContext var50 = new demo.pathplanning.algorithms.PathPlanningContext((demo.pathplanning.algorithms.PathPlanner)var47);
    demo.pathplanning.model.CartesianGraph var51 = var47.getGraph();
    int var52 = var51.getYSize();
    demo.pathplanning.model.CartesianGraph var55 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var58 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var59 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var62 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var65 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var66 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.Node var67 = new demo.pathplanning.model.Node(var51, var59, 1);
    int var68 = var67.getCost();
    demo.pathplanning.model.CartesianGraph var71 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var72 = var71.getXSize();
    int var73 = var71.getYSize();
    int var74 = var71.getYSize();
    demo.pathplanning.model.CartesianGraph var77 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var78 = new demo.pathplanning.model.Location(var74, 1);
    demo.pathplanning.model.CartesianGraph var79 = new demo.pathplanning.model.CartesianGraph(var68, 1);
    demo.pathplanning.model.CartesianGraph var82 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var85 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var86 = new demo.pathplanning.model.Location(1, 1);
    boolean var88 = var86.equals((java.lang.Object)0L);
    demo.pathplanning.model.Node var89 = var79.getNode(var86);
    boolean var90 = var31.equals((java.lang.Object)var86);
    java.lang.String var91 = var86.toString();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var11 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var12 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var16 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var17 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var18 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var21 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var25 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var26 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var27 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var32 + "' != '" + "(1,1)"+ "'", var32.equals("(1,1)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var33);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var34 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var35 + "' != '" + "(1,1)"+ "'", var35.equals("(1,1)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var39 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var41);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var42 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var43 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var48);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var49);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var51);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var52 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var68 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var72 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var73 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var74 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var88 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var89);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var90 == true);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var91 + "' != '" + "(1,1)"+ "'", var91.equals("(1,1)"));

  }

  public void test344() throws Throwable {

    demo.pathplanning.model.CartesianGraph var2 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.algorithms.AStar var3 = new demo.pathplanning.algorithms.AStar(var2);
    demo.pathplanning.model.CartesianGraph var4 = var3.getGraph();
    demo.pathplanning.model.CartesianGraph var5 = var3.getGraph();
    demo.pathplanning.algorithms.PathPlanningContext var6 = new demo.pathplanning.algorithms.PathPlanningContext((demo.pathplanning.algorithms.PathPlanner)var3);
    demo.pathplanning.model.CartesianGraph var7 = var3.getGraph();
    int var8 = var7.getYSize();
    demo.pathplanning.model.CartesianGraph var11 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var14 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var15 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var18 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var21 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var22 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.Node var23 = new demo.pathplanning.model.Node(var7, var15, 1);
    int var24 = var23.getCost();
    java.util.Collection var25 = var23.getNeighbors();
    int var26 = var23.getCost();
    demo.pathplanning.model.CartesianGraph var29 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var30 = var29.getXSize();
    demo.pathplanning.model.CartesianGraph var33 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var34 = new demo.pathplanning.model.CartesianGraph(var30, 1);
    demo.pathplanning.model.CartesianGraph var37 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.algorithms.AStar var38 = new demo.pathplanning.algorithms.AStar(var37);
    demo.pathplanning.model.CartesianGraph var39 = var38.getGraph();
    demo.pathplanning.model.CartesianGraph var40 = var38.getGraph();
    demo.pathplanning.algorithms.PathPlanningContext var41 = new demo.pathplanning.algorithms.PathPlanningContext((demo.pathplanning.algorithms.PathPlanner)var38);
    demo.pathplanning.model.CartesianGraph var42 = var38.getGraph();
    int var43 = var42.getYSize();
    demo.pathplanning.model.CartesianGraph var44 = new demo.pathplanning.model.CartesianGraph(var30, var43);
    int var45 = var44.getXSize();
    demo.pathplanning.algorithms.AStar var46 = new demo.pathplanning.algorithms.AStar(var44);
    boolean var47 = var23.equals((java.lang.Object)var44);
    demo.pathplanning.algorithms.AStar var48 = new demo.pathplanning.algorithms.AStar(var44);
    demo.pathplanning.algorithms.PathPlanningContext var49 = new demo.pathplanning.algorithms.PathPlanningContext((demo.pathplanning.algorithms.PathPlanner)var48);
    demo.pathplanning.algorithms.PathPlanningContext var50 = new demo.pathplanning.algorithms.PathPlanningContext((demo.pathplanning.algorithms.PathPlanner)var48);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var8 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var24 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var25);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var26 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var30 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var39);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var40);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var42);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var43 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var45 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var47 == false);

  }

  public void test345() throws Throwable {

    demo.pathplanning.model.CartesianGraph var2 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.algorithms.AStar var3 = new demo.pathplanning.algorithms.AStar(var2);
    demo.pathplanning.model.CartesianGraph var4 = var3.getGraph();
    demo.pathplanning.model.CartesianGraph var5 = var3.getGraph();
    demo.pathplanning.algorithms.PathPlanningContext var6 = new demo.pathplanning.algorithms.PathPlanningContext((demo.pathplanning.algorithms.PathPlanner)var3);
    demo.pathplanning.model.CartesianGraph var7 = var3.getGraph();
    int var8 = var7.getYSize();
    demo.pathplanning.model.CartesianGraph var11 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var14 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var15 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var18 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var21 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var22 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.Node var23 = new demo.pathplanning.model.Node(var7, var15, 1);
    java.util.Collection var24 = var23.getNeighbors();
    int var25 = var23.getCost();
    java.lang.String var26 = var23.toString();
    java.lang.String var27 = var23.toString();
    java.lang.String var28 = var23.toString();
    demo.pathplanning.model.Location var29 = var23.getLocation();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var8 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var24);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var25 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var26 + "' != '" + "(1,1)=1"+ "'", var26.equals("(1,1)=1"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var27 + "' != '" + "(1,1)=1"+ "'", var27.equals("(1,1)=1"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var28 + "' != '" + "(1,1)=1"+ "'", var28.equals("(1,1)=1"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var29);

  }

  public void test346() throws Throwable {

    demo.pathplanning.model.CartesianGraph var2 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.algorithms.AStar var3 = new demo.pathplanning.algorithms.AStar(var2);
    demo.pathplanning.model.CartesianGraph var4 = var3.getGraph();
    demo.pathplanning.model.CartesianGraph var5 = var3.getGraph();
    demo.pathplanning.algorithms.PathPlanningContext var6 = new demo.pathplanning.algorithms.PathPlanningContext((demo.pathplanning.algorithms.PathPlanner)var3);
    demo.pathplanning.model.CartesianGraph var7 = var3.getGraph();
    int var8 = var7.getYSize();
    demo.pathplanning.model.CartesianGraph var11 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var14 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var15 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var18 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var21 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var22 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.Node var23 = new demo.pathplanning.model.Node(var7, var15, 1);
    java.util.Collection var24 = var23.getNeighbors();
    int var25 = var23.getCost();
    java.util.Collection var26 = var23.getNeighbors();
    java.lang.String var27 = var23.toString();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var8 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var24);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var25 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var26);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var27 + "' != '" + "(1,1)=1"+ "'", var27.equals("(1,1)=1"));

  }

  public void test347() throws Throwable {

    demo.pathplanning.model.CartesianGraph var2 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.algorithms.AStar var3 = new demo.pathplanning.algorithms.AStar(var2);
    demo.pathplanning.model.CartesianGraph var4 = var3.getGraph();
    demo.pathplanning.model.CartesianGraph var5 = var3.getGraph();
    demo.pathplanning.algorithms.PathPlanningContext var6 = new demo.pathplanning.algorithms.PathPlanningContext((demo.pathplanning.algorithms.PathPlanner)var3);
    demo.pathplanning.model.CartesianGraph var7 = var3.getGraph();
    int var8 = var7.getYSize();
    demo.pathplanning.model.CartesianGraph var11 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var14 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var15 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var18 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var21 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var22 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.Node var23 = new demo.pathplanning.model.Node(var7, var15, 1);
    java.util.Collection var24 = var23.getNeighbors();
    int var25 = var23.getCost();
    java.lang.String var26 = var23.toString();
    java.lang.String var27 = var23.toString();
    int var28 = var23.getCost();
    java.util.Collection var29 = var23.getNeighbors();
    java.lang.String var30 = var23.toString();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var8 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var24);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var25 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var26 + "' != '" + "(1,1)=1"+ "'", var26.equals("(1,1)=1"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var27 + "' != '" + "(1,1)=1"+ "'", var27.equals("(1,1)=1"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var28 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var29);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var30 + "' != '" + "(1,1)=1"+ "'", var30.equals("(1,1)=1"));

  }

  public void test348() throws Throwable {

    demo.pathplanning.model.CartesianGraph var2 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.algorithms.AStar var3 = new demo.pathplanning.algorithms.AStar(var2);
    demo.pathplanning.model.CartesianGraph var4 = var3.getGraph();
    demo.pathplanning.model.CartesianGraph var5 = var3.getGraph();
    demo.pathplanning.algorithms.PathPlanningContext var6 = new demo.pathplanning.algorithms.PathPlanningContext((demo.pathplanning.algorithms.PathPlanner)var3);
    demo.pathplanning.model.CartesianGraph var7 = var3.getGraph();
    int var8 = var7.getYSize();
    demo.pathplanning.model.CartesianGraph var11 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var14 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var15 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var18 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var21 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var22 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.Node var23 = new demo.pathplanning.model.Node(var7, var15, 1);
    java.util.Collection var24 = var23.getNeighbors();
    int var25 = var23.getCost();
    int var26 = var23.getCost();
    java.lang.String var27 = var23.toString();
    demo.pathplanning.model.CartesianGraph var30 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.algorithms.AStar var31 = new demo.pathplanning.algorithms.AStar(var30);
    demo.pathplanning.model.CartesianGraph var32 = var31.getGraph();
    demo.pathplanning.model.CartesianGraph var33 = var31.getGraph();
    demo.pathplanning.algorithms.PathPlanningContext var34 = new demo.pathplanning.algorithms.PathPlanningContext((demo.pathplanning.algorithms.PathPlanner)var31);
    demo.pathplanning.model.CartesianGraph var35 = var31.getGraph();
    int var36 = var35.getYSize();
    demo.pathplanning.model.CartesianGraph var39 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var42 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var43 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var46 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var49 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var50 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.Node var51 = new demo.pathplanning.model.Node(var35, var43, 1);
    java.lang.String var52 = var51.toString();
    boolean var53 = var23.equals((java.lang.Object)var51);
    java.util.Collection var54 = var23.getNeighbors();
    demo.pathplanning.model.CartesianGraph var57 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var58 = var57.getXSize();
    java.lang.String var59 = var57.toString();
    boolean var60 = var23.equals((java.lang.Object)var57);
    demo.pathplanning.model.CartesianGraph var63 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.algorithms.AStar var64 = new demo.pathplanning.algorithms.AStar(var63);
    java.lang.String var65 = var63.toString();
    demo.pathplanning.model.CartesianGraph var68 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var71 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var72 = new demo.pathplanning.model.Location(1, 1);
    boolean var74 = var72.equals((java.lang.Object)0L);
    demo.pathplanning.model.Node var75 = var63.getNode(var72);
    java.lang.String var76 = var72.toString();
    demo.pathplanning.model.Node var77 = var57.getNode(var72);
    int var78 = var72.getY();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var8 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var24);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var25 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var26 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var27 + "' != '" + "(1,1)=1"+ "'", var27.equals("(1,1)=1"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var32);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var33);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var35);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var36 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var52 + "' != '" + "(1,1)=1"+ "'", var52.equals("(1,1)=1"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var53 == true);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var54);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var58 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var59 + "' != '" + "0,\n"+ "'", var59.equals("0,\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var60 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var65 + "' != '" + "0,\n"+ "'", var65.equals("0,\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var74 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var75);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var76 + "' != '" + "(1,1)"+ "'", var76.equals("(1,1)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var77);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var78 == 1);

  }

  public void test349() throws Throwable {

    demo.pathplanning.model.CartesianGraph var2 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var3 = var2.getXSize();
    demo.pathplanning.algorithms.AStar var4 = new demo.pathplanning.algorithms.AStar(var2);
    demo.pathplanning.model.CartesianGraph var7 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var10 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var11 = new demo.pathplanning.model.Location(1, 1);
    boolean var13 = var11.equals((java.lang.Object)0L);
    demo.pathplanning.model.Node var14 = var2.getNode(var11);
    int var15 = var2.getYSize();
    demo.pathplanning.model.CartesianGraph var18 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var19 = var18.getXSize();
    int var20 = var18.getYSize();
    int var21 = var18.getYSize();
    demo.pathplanning.model.CartesianGraph var24 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var25 = var24.getXSize();
    int var26 = var24.getYSize();
    int var27 = var24.getYSize();
    demo.pathplanning.model.CartesianGraph var28 = new demo.pathplanning.model.CartesianGraph(var21, var27);
    demo.pathplanning.model.CartesianGraph var31 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var34 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var35 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var36 = new demo.pathplanning.model.CartesianGraph(var21, 1);
    int var37 = var36.getXSize();
    demo.pathplanning.model.CartesianGraph var40 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var41 = var40.getXSize();
    int var42 = var40.getYSize();
    int var43 = var40.getYSize();
    demo.pathplanning.model.CartesianGraph var44 = new demo.pathplanning.model.CartesianGraph(var37, var43);
    demo.pathplanning.model.CartesianGraph var45 = new demo.pathplanning.model.CartesianGraph(var15, var37);
    int var46 = var45.getXSize();
    java.lang.String var47 = var45.toString();
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      demo.pathplanning.model.Direction var48 = demo.pathplanning.model.Direction.valueOf(var47);
      fail("Expected exception of type java.lang.IllegalArgumentException");
    } catch (java.lang.IllegalArgumentException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var3 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var13 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var14);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var15 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var19 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var20 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var21 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var25 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var26 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var27 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var37 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var41 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var42 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var43 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var46 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var47 + "' != '" + "0,\n"+ "'", var47.equals("0,\n"));

  }

  public void test350() throws Throwable {

    demo.pathplanning.model.CartesianGraph var2 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.algorithms.AStar var3 = new demo.pathplanning.algorithms.AStar(var2);
    demo.pathplanning.model.CartesianGraph var4 = var3.getGraph();
    demo.pathplanning.model.CartesianGraph var5 = var3.getGraph();
    demo.pathplanning.algorithms.PathPlanningContext var6 = new demo.pathplanning.algorithms.PathPlanningContext((demo.pathplanning.algorithms.PathPlanner)var3);
    demo.pathplanning.model.CartesianGraph var7 = var3.getGraph();
    int var8 = var7.getYSize();
    demo.pathplanning.model.CartesianGraph var11 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var14 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var15 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var18 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var21 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var22 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.Node var23 = new demo.pathplanning.model.Node(var7, var15, 1);
    int var24 = var23.getCost();
    java.util.Collection var25 = var23.getNeighbors();
    int var26 = var23.getCost();
    demo.pathplanning.model.CartesianGraph var29 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var30 = var29.getXSize();
    int var31 = var29.getYSize();
    int var32 = var29.getYSize();
    demo.pathplanning.model.CartesianGraph var35 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var36 = var35.getXSize();
    int var37 = var35.getYSize();
    int var38 = var35.getYSize();
    demo.pathplanning.model.CartesianGraph var39 = new demo.pathplanning.model.CartesianGraph(var32, var38);
    demo.pathplanning.model.CartesianGraph var42 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var45 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var46 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var47 = new demo.pathplanning.model.CartesianGraph(var32, 1);
    java.lang.String var48 = var47.toString();
    demo.pathplanning.model.CartesianGraph var51 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var54 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var55 = new demo.pathplanning.model.Location(1, 1);
    boolean var57 = var55.equals((java.lang.Object)0L);
    demo.pathplanning.model.Node var58 = var47.getNode(var55);
    demo.pathplanning.model.CartesianGraph var61 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var64 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var65 = new demo.pathplanning.model.Location(1, 1);
    boolean var67 = var65.equals((java.lang.Object)0L);
    int var68 = var65.getX();
    int var69 = var65.getX();
    demo.pathplanning.model.CartesianGraph var72 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var73 = var72.getXSize();
    demo.pathplanning.model.Node var74 = new demo.pathplanning.model.Node(var47, var65, var73);
    demo.pathplanning.algorithms.AStar var75 = new demo.pathplanning.algorithms.AStar(var47);
    java.lang.String var76 = var47.toString();
    int var77 = var47.getYSize();
    boolean var78 = var23.equals((java.lang.Object)var47);
    demo.pathplanning.algorithms.AStar var79 = new demo.pathplanning.algorithms.AStar(var47);
    demo.pathplanning.model.CartesianGraph var80 = var79.getGraph();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var8 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var24 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var25);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var26 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var30 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var31 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var32 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var36 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var37 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var38 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var48 + "' != '" + "0,\n"+ "'", var48.equals("0,\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var57 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var58);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var67 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var68 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var69 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var73 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var76 + "' != '" + "0,\n"+ "'", var76.equals("0,\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var77 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var78 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var80);

  }

  public void test351() throws Throwable {

    demo.pathplanning.model.CartesianGraph var2 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var3 = var2.getXSize();
    int var4 = var2.getYSize();
    int var5 = var2.getYSize();
    demo.pathplanning.model.CartesianGraph var8 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var9 = var8.getXSize();
    int var10 = var8.getYSize();
    int var11 = var8.getYSize();
    demo.pathplanning.model.CartesianGraph var12 = new demo.pathplanning.model.CartesianGraph(var5, var11);
    demo.pathplanning.model.CartesianGraph var15 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var18 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var19 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var22 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var23 = var22.getXSize();
    int var24 = var22.getYSize();
    int var25 = var22.getYSize();
    demo.pathplanning.model.CartesianGraph var28 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var29 = var28.getXSize();
    int var30 = var28.getYSize();
    int var31 = var28.getYSize();
    demo.pathplanning.model.CartesianGraph var32 = new demo.pathplanning.model.CartesianGraph(var25, var31);
    demo.pathplanning.model.CartesianGraph var33 = new demo.pathplanning.model.CartesianGraph(1, var25);
    int var34 = var33.getYSize();
    demo.pathplanning.model.CartesianGraph var37 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var38 = var37.getXSize();
    int var39 = var37.getYSize();
    int var40 = var37.getYSize();
    demo.pathplanning.model.CartesianGraph var43 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var44 = new demo.pathplanning.model.Location(var40, 1);
    java.lang.String var45 = var44.toString();
    demo.pathplanning.model.Node var46 = var33.getNode(var44);
    int var47 = var44.getY();
    java.lang.String var48 = var44.toString();
    demo.pathplanning.model.CartesianGraph var51 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var52 = var51.getXSize();
    demo.pathplanning.algorithms.AStar var53 = new demo.pathplanning.algorithms.AStar(var51);
    demo.pathplanning.model.CartesianGraph var54 = var53.getGraph();
    boolean var55 = var44.equals((java.lang.Object)var53);
    int var56 = var44.getX();
    demo.pathplanning.model.Location var57 = new demo.pathplanning.model.Location(var11, var56);
    demo.pathplanning.model.CartesianGraph var60 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.algorithms.AStar var61 = new demo.pathplanning.algorithms.AStar(var60);
    demo.pathplanning.model.CartesianGraph var62 = var61.getGraph();
    demo.pathplanning.model.CartesianGraph var63 = var61.getGraph();
    int var64 = var63.getYSize();
    demo.pathplanning.model.CartesianGraph var65 = new demo.pathplanning.model.CartesianGraph(var56, var64);
    demo.pathplanning.model.CartesianGraph var68 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.algorithms.AStar var69 = new demo.pathplanning.algorithms.AStar(var68);
    demo.pathplanning.model.CartesianGraph var70 = var69.getGraph();
    demo.pathplanning.model.CartesianGraph var71 = var69.getGraph();
    demo.pathplanning.algorithms.PathPlanningContext var72 = new demo.pathplanning.algorithms.PathPlanningContext((demo.pathplanning.algorithms.PathPlanner)var69);
    demo.pathplanning.model.CartesianGraph var73 = var69.getGraph();
    int var74 = var73.getYSize();
    demo.pathplanning.model.CartesianGraph var77 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var80 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var81 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var84 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var87 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var88 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.Node var89 = new demo.pathplanning.model.Node(var73, var81, 1);
    int var90 = var73.getYSize();
    java.lang.String var91 = var73.toString();
    int var92 = var73.getXSize();
    demo.pathplanning.model.CartesianGraph var93 = new demo.pathplanning.model.CartesianGraph(var56, var92);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var3 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var4 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var5 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var9 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var11 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var23 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var24 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var25 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var29 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var30 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var31 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var34 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var38 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var39 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var40 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var45 + "' != '" + "(1,1)"+ "'", var45.equals("(1,1)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var46);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var47 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var48 + "' != '" + "(1,1)"+ "'", var48.equals("(1,1)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var52 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var54);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var55 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var56 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var62);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var63);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var64 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var70);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var71);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var73);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var74 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var90 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var91 + "' != '" + "0,\n"+ "'", var91.equals("0,\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var92 == 1);

  }

  public void test352() throws Throwable {

    demo.pathplanning.model.CartesianGraph var2 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.algorithms.AStar var3 = new demo.pathplanning.algorithms.AStar(var2);
    demo.pathplanning.model.CartesianGraph var4 = var3.getGraph();
    demo.pathplanning.model.CartesianGraph var5 = var3.getGraph();
    demo.pathplanning.algorithms.PathPlanningContext var6 = new demo.pathplanning.algorithms.PathPlanningContext((demo.pathplanning.algorithms.PathPlanner)var3);
    demo.pathplanning.model.CartesianGraph var7 = var3.getGraph();
    int var8 = var7.getYSize();
    demo.pathplanning.model.CartesianGraph var11 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var14 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var15 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var18 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var21 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var22 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.Node var23 = new demo.pathplanning.model.Node(var7, var15, 1);
    java.util.Collection var24 = var23.getNeighbors();
    int var25 = var23.getCost();
    java.util.Collection var26 = var23.getNeighbors();
    demo.pathplanning.model.CartesianGraph var29 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.algorithms.AStar var30 = new demo.pathplanning.algorithms.AStar(var29);
    demo.pathplanning.model.CartesianGraph var31 = var30.getGraph();
    demo.pathplanning.model.CartesianGraph var32 = var30.getGraph();
    demo.pathplanning.algorithms.PathPlanningContext var33 = new demo.pathplanning.algorithms.PathPlanningContext((demo.pathplanning.algorithms.PathPlanner)var30);
    demo.pathplanning.model.CartesianGraph var34 = var30.getGraph();
    int var35 = var34.getYSize();
    demo.pathplanning.model.CartesianGraph var38 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var41 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var42 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var45 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var48 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var49 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.Node var50 = new demo.pathplanning.model.Node(var34, var42, 1);
    java.util.Collection var51 = var50.getNeighbors();
    int var52 = var50.getCost();
    boolean var53 = var23.equals((java.lang.Object)var52);
    demo.pathplanning.model.Location var54 = var23.getLocation();
    demo.pathplanning.model.Location var55 = var23.getLocation();
    int var56 = var55.getX();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var8 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var24);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var25 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var26);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var31);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var32);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var34);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var35 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var51);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var52 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var53 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var54);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var55);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var56 == 1);

  }

  public void test353() throws Throwable {

    demo.pathplanning.model.CartesianGraph var2 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.algorithms.AStar var3 = new demo.pathplanning.algorithms.AStar(var2);
    demo.pathplanning.model.CartesianGraph var4 = var3.getGraph();
    demo.pathplanning.model.CartesianGraph var5 = var3.getGraph();
    demo.pathplanning.algorithms.PathPlanningContext var6 = new demo.pathplanning.algorithms.PathPlanningContext((demo.pathplanning.algorithms.PathPlanner)var3);
    demo.pathplanning.model.CartesianGraph var7 = var3.getGraph();
    int var8 = var7.getYSize();
    demo.pathplanning.model.CartesianGraph var11 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var14 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var15 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var18 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var21 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var22 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.Node var23 = new demo.pathplanning.model.Node(var7, var15, 1);
    int var24 = var23.getCost();
    java.lang.String var25 = var23.toString();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var8 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var24 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var25 + "' != '" + "(1,1)=1"+ "'", var25.equals("(1,1)=1"));

  }

  public void test354() throws Throwable {

    demo.pathplanning.model.CartesianGraph var2 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.algorithms.AStar var3 = new demo.pathplanning.algorithms.AStar(var2);
    demo.pathplanning.model.CartesianGraph var4 = var3.getGraph();
    demo.pathplanning.algorithms.PathPlanningContext var5 = new demo.pathplanning.algorithms.PathPlanningContext((demo.pathplanning.algorithms.PathPlanner)var3);
    demo.pathplanning.model.CartesianGraph var6 = var3.getGraph();
    demo.pathplanning.algorithms.PathPlanningContext var7 = new demo.pathplanning.algorithms.PathPlanningContext((demo.pathplanning.algorithms.PathPlanner)var3);
    demo.pathplanning.model.CartesianGraph var8 = var3.getGraph();
    demo.pathplanning.algorithms.AStar var9 = new demo.pathplanning.algorithms.AStar(var8);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var6);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var8);

  }

  public void test355() throws Throwable {

    demo.pathplanning.model.CartesianGraph var2 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var5 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var6 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var9 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var10 = var9.getXSize();
    int var11 = var9.getYSize();
    int var12 = var9.getYSize();
    demo.pathplanning.model.CartesianGraph var15 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var16 = var15.getXSize();
    int var17 = var15.getYSize();
    int var18 = var15.getYSize();
    demo.pathplanning.model.CartesianGraph var19 = new demo.pathplanning.model.CartesianGraph(var12, var18);
    demo.pathplanning.model.CartesianGraph var20 = new demo.pathplanning.model.CartesianGraph(1, var12);
    int var21 = var20.getYSize();
    demo.pathplanning.model.CartesianGraph var24 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var25 = var24.getXSize();
    int var26 = var24.getYSize();
    int var27 = var24.getYSize();
    demo.pathplanning.model.CartesianGraph var30 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var31 = new demo.pathplanning.model.Location(var27, 1);
    java.lang.String var32 = var31.toString();
    demo.pathplanning.model.Node var33 = var20.getNode(var31);
    int var34 = var31.getY();
    java.lang.String var35 = var31.toString();
    int var36 = var31.getX();
    java.lang.String var37 = var31.toString();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var11 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var12 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var16 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var17 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var18 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var21 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var25 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var26 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var27 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var32 + "' != '" + "(1,1)"+ "'", var32.equals("(1,1)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var33);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var34 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var35 + "' != '" + "(1,1)"+ "'", var35.equals("(1,1)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var36 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var37 + "' != '" + "(1,1)"+ "'", var37.equals("(1,1)"));

  }

  public void test356() throws Throwable {

    demo.pathplanning.model.CartesianGraph var2 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var3 = var2.getXSize();
    int var4 = var2.getYSize();
    int var5 = var2.getYSize();
    demo.pathplanning.model.CartesianGraph var8 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var9 = var8.getXSize();
    int var10 = var8.getYSize();
    int var11 = var8.getYSize();
    demo.pathplanning.model.CartesianGraph var12 = new demo.pathplanning.model.CartesianGraph(var5, var11);
    demo.pathplanning.model.CartesianGraph var15 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var18 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var19 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var20 = new demo.pathplanning.model.CartesianGraph(var5, 1);
    int var21 = var20.getXSize();
    demo.pathplanning.model.CartesianGraph var24 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var27 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var28 = new demo.pathplanning.model.Location(1, 1);
    int var29 = var28.getY();
    demo.pathplanning.model.CartesianGraph var32 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var33 = var32.getXSize();
    int var34 = var32.getYSize();
    demo.pathplanning.model.CartesianGraph var37 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var38 = var37.getXSize();
    int var39 = var37.getYSize();
    demo.pathplanning.model.CartesianGraph var42 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.algorithms.AStar var43 = new demo.pathplanning.algorithms.AStar(var42);
    java.lang.String var44 = var42.toString();
    demo.pathplanning.model.CartesianGraph var47 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var50 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var51 = new demo.pathplanning.model.Location(1, 1);
    boolean var53 = var51.equals((java.lang.Object)0L);
    demo.pathplanning.model.Node var54 = var42.getNode(var51);
    demo.pathplanning.model.CartesianGraph var57 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var60 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var61 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var64 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var65 = var64.getXSize();
    demo.pathplanning.model.CartesianGraph var68 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var69 = new demo.pathplanning.model.CartesianGraph(var65, 1);
    demo.pathplanning.model.Location var70 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.Node var71 = new demo.pathplanning.model.Node(var37, var51, 1);
    demo.pathplanning.model.CartesianGraph var72 = new demo.pathplanning.model.CartesianGraph(var34, 1);
    demo.pathplanning.model.Node var73 = new demo.pathplanning.model.Node(var20, var28, 1);
    java.lang.String var74 = var73.toString();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var3 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var4 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var5 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var9 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var11 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var21 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var29 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var33 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var34 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var38 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var39 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var44 + "' != '" + "0,\n"+ "'", var44.equals("0,\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var53 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var54);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var65 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var74 + "' != '" + "(1,1)=1"+ "'", var74.equals("(1,1)=1"));

  }

  public void test357() throws Throwable {

    demo.pathplanning.model.CartesianGraph var2 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var3 = var2.getXSize();
    demo.pathplanning.model.CartesianGraph var6 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var7 = new demo.pathplanning.model.CartesianGraph(var3, 1);
    demo.pathplanning.model.CartesianGraph var10 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.algorithms.AStar var11 = new demo.pathplanning.algorithms.AStar(var10);
    demo.pathplanning.model.CartesianGraph var12 = var11.getGraph();
    demo.pathplanning.model.CartesianGraph var13 = var11.getGraph();
    demo.pathplanning.algorithms.PathPlanningContext var14 = new demo.pathplanning.algorithms.PathPlanningContext((demo.pathplanning.algorithms.PathPlanner)var11);
    demo.pathplanning.model.CartesianGraph var15 = var11.getGraph();
    int var16 = var15.getYSize();
    demo.pathplanning.model.CartesianGraph var17 = new demo.pathplanning.model.CartesianGraph(var3, var16);
    int var18 = var17.getXSize();
    demo.pathplanning.algorithms.AStar var19 = new demo.pathplanning.algorithms.AStar(var17);
    java.lang.String var20 = var17.toString();
    int var21 = var17.getYSize();
    demo.pathplanning.model.CartesianGraph var24 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var25 = var24.getXSize();
    demo.pathplanning.algorithms.AStar var26 = new demo.pathplanning.algorithms.AStar(var24);
    int var27 = var24.getYSize();
    int var28 = var24.getXSize();
    demo.pathplanning.model.CartesianGraph var31 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.algorithms.AStar var32 = new demo.pathplanning.algorithms.AStar(var31);
    demo.pathplanning.model.CartesianGraph var33 = var32.getGraph();
    demo.pathplanning.model.CartesianGraph var34 = var32.getGraph();
    demo.pathplanning.algorithms.PathPlanningContext var35 = new demo.pathplanning.algorithms.PathPlanningContext((demo.pathplanning.algorithms.PathPlanner)var32);
    demo.pathplanning.model.CartesianGraph var36 = var32.getGraph();
    int var37 = var36.getYSize();
    demo.pathplanning.model.CartesianGraph var40 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var43 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var44 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var47 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var50 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var51 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.Node var52 = new demo.pathplanning.model.Node(var36, var44, 1);
    demo.pathplanning.model.CartesianGraph var55 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var58 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var59 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var62 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var63 = var62.getXSize();
    int var64 = var62.getYSize();
    int var65 = var62.getYSize();
    demo.pathplanning.model.CartesianGraph var68 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var69 = var68.getXSize();
    int var70 = var68.getYSize();
    int var71 = var68.getYSize();
    demo.pathplanning.model.CartesianGraph var72 = new demo.pathplanning.model.CartesianGraph(var65, var71);
    demo.pathplanning.model.CartesianGraph var73 = new demo.pathplanning.model.CartesianGraph(1, var65);
    demo.pathplanning.model.CartesianGraph var76 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var79 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var80 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var83 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var84 = var83.getXSize();
    int var85 = var83.getYSize();
    int var86 = var83.getYSize();
    demo.pathplanning.model.CartesianGraph var89 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var90 = var89.getXSize();
    int var91 = var89.getYSize();
    int var92 = var89.getYSize();
    demo.pathplanning.model.CartesianGraph var93 = new demo.pathplanning.model.CartesianGraph(var86, var92);
    demo.pathplanning.model.CartesianGraph var94 = new demo.pathplanning.model.CartesianGraph(1, var86);
    demo.pathplanning.model.Location var95 = new demo.pathplanning.model.Location(1, 1);
    boolean var96 = var52.equals((java.lang.Object)1);
    demo.pathplanning.model.Location var97 = new demo.pathplanning.model.Location(var28, 1);
    int var98 = var97.getY();
    demo.pathplanning.model.Node var99 = var17.getNode(var97);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var3 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var12);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var13);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var15);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var16 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var18 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var20 + "' != '" + "0,\n"+ "'", var20.equals("0,\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var21 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var25 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var27 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var28 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var33);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var34);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var36);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var37 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var63 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var64 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var65 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var69 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var70 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var71 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var84 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var85 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var86 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var90 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var91 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var92 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var96 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var98 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var99);

  }

  public void test358() throws Throwable {

    demo.pathplanning.model.CartesianGraph var2 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var3 = var2.getXSize();
    demo.pathplanning.algorithms.AStar var4 = new demo.pathplanning.algorithms.AStar(var2);
    demo.pathplanning.model.CartesianGraph var7 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var10 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var11 = new demo.pathplanning.model.Location(1, 1);
    boolean var13 = var11.equals((java.lang.Object)0L);
    demo.pathplanning.model.Node var14 = var2.getNode(var11);
    int var15 = var2.getYSize();
    demo.pathplanning.model.CartesianGraph var18 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var19 = var18.getXSize();
    int var20 = var18.getYSize();
    int var21 = var18.getYSize();
    demo.pathplanning.model.CartesianGraph var24 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var25 = new demo.pathplanning.model.Location(var21, 1);
    java.lang.String var26 = var25.toString();
    demo.pathplanning.model.CartesianGraph var29 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var32 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var33 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var36 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var37 = var36.getXSize();
    int var38 = var36.getYSize();
    int var39 = var36.getYSize();
    demo.pathplanning.model.CartesianGraph var42 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var43 = var42.getXSize();
    int var44 = var42.getYSize();
    int var45 = var42.getYSize();
    demo.pathplanning.model.CartesianGraph var46 = new demo.pathplanning.model.CartesianGraph(var39, var45);
    demo.pathplanning.model.CartesianGraph var47 = new demo.pathplanning.model.CartesianGraph(1, var39);
    demo.pathplanning.model.Node var48 = new demo.pathplanning.model.Node(var2, var25, var39);
    java.util.Collection var49 = var48.getNeighbors();
    int var50 = var48.getCost();
    java.util.Collection var51 = var48.getNeighbors();
    demo.pathplanning.model.CartesianGraph var54 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var55 = var54.getXSize();
    int var56 = var54.getYSize();
    int var57 = var54.getYSize();
    demo.pathplanning.model.CartesianGraph var60 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var61 = var60.getXSize();
    int var62 = var60.getYSize();
    int var63 = var60.getYSize();
    demo.pathplanning.model.CartesianGraph var64 = new demo.pathplanning.model.CartesianGraph(var57, var63);
    demo.pathplanning.model.CartesianGraph var67 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var68 = var67.getXSize();
    demo.pathplanning.model.CartesianGraph var71 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var72 = new demo.pathplanning.model.CartesianGraph(var68, 1);
    demo.pathplanning.model.CartesianGraph var75 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.algorithms.AStar var76 = new demo.pathplanning.algorithms.AStar(var75);
    demo.pathplanning.model.CartesianGraph var77 = var76.getGraph();
    demo.pathplanning.model.CartesianGraph var78 = var76.getGraph();
    demo.pathplanning.algorithms.PathPlanningContext var79 = new demo.pathplanning.algorithms.PathPlanningContext((demo.pathplanning.algorithms.PathPlanner)var76);
    demo.pathplanning.model.CartesianGraph var80 = var76.getGraph();
    int var81 = var80.getYSize();
    demo.pathplanning.model.CartesianGraph var82 = new demo.pathplanning.model.CartesianGraph(var68, var81);
    demo.pathplanning.model.CartesianGraph var83 = new demo.pathplanning.model.CartesianGraph(var63, var81);
    boolean var84 = var48.equals((java.lang.Object)var83);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var3 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var13 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var14);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var15 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var19 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var20 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var21 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var26 + "' != '" + "(1,1)"+ "'", var26.equals("(1,1)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var37 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var38 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var39 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var43 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var44 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var45 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var49);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var50 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var51);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var55 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var56 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var57 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var61 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var62 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var63 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var68 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var77);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var78);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var80);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var81 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var84 == false);

  }

  public void test359() throws Throwable {

    demo.pathplanning.model.CartesianGraph var2 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var3 = var2.getXSize();
    demo.pathplanning.algorithms.AStar var4 = new demo.pathplanning.algorithms.AStar(var2);
    demo.pathplanning.model.CartesianGraph var7 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var10 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var11 = new demo.pathplanning.model.Location(1, 1);
    boolean var13 = var11.equals((java.lang.Object)0L);
    demo.pathplanning.model.Node var14 = var2.getNode(var11);
    int var15 = var2.getXSize();
    java.lang.String var16 = var2.toString();
    demo.pathplanning.model.CartesianGraph var19 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var22 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var23 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var26 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var27 = var26.getXSize();
    int var28 = var26.getYSize();
    int var29 = var26.getYSize();
    demo.pathplanning.model.CartesianGraph var32 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var33 = var32.getXSize();
    int var34 = var32.getYSize();
    int var35 = var32.getYSize();
    demo.pathplanning.model.CartesianGraph var36 = new demo.pathplanning.model.CartesianGraph(var29, var35);
    demo.pathplanning.model.CartesianGraph var37 = new demo.pathplanning.model.CartesianGraph(1, var29);
    demo.pathplanning.model.CartesianGraph var40 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var43 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var44 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var47 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var48 = var47.getXSize();
    int var49 = var47.getYSize();
    int var50 = var47.getYSize();
    demo.pathplanning.model.CartesianGraph var53 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var54 = var53.getXSize();
    int var55 = var53.getYSize();
    int var56 = var53.getYSize();
    demo.pathplanning.model.CartesianGraph var57 = new demo.pathplanning.model.CartesianGraph(var50, var56);
    demo.pathplanning.model.CartesianGraph var58 = new demo.pathplanning.model.CartesianGraph(1, var50);
    demo.pathplanning.model.Location var59 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var62 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var65 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var66 = new demo.pathplanning.model.Location(1, 1);
    int var67 = var66.getY();
    demo.pathplanning.model.Node var68 = new demo.pathplanning.model.Node(var2, var59, var67);
    demo.pathplanning.model.CartesianGraph var71 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var72 = var71.getXSize();
    demo.pathplanning.algorithms.AStar var73 = new demo.pathplanning.algorithms.AStar(var71);
    demo.pathplanning.model.CartesianGraph var76 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var79 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var80 = new demo.pathplanning.model.Location(1, 1);
    boolean var82 = var80.equals((java.lang.Object)0L);
    demo.pathplanning.model.Node var83 = var71.getNode(var80);
    boolean var84 = var59.equals((java.lang.Object)var71);
    demo.pathplanning.algorithms.AStar var85 = new demo.pathplanning.algorithms.AStar(var71);
    int var86 = var71.getXSize();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var3 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var13 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var14);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var15 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var16 + "' != '" + "0,\n"+ "'", var16.equals("0,\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var27 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var28 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var29 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var33 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var34 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var35 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var48 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var49 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var50 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var54 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var55 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var56 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var67 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var72 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var82 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var83);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var84 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var86 == 1);

  }

  public void test360() throws Throwable {

    demo.pathplanning.model.CartesianGraph var2 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.algorithms.AStar var3 = new demo.pathplanning.algorithms.AStar(var2);
    demo.pathplanning.model.CartesianGraph var4 = var3.getGraph();
    demo.pathplanning.model.CartesianGraph var5 = var3.getGraph();
    demo.pathplanning.algorithms.PathPlanningContext var6 = new demo.pathplanning.algorithms.PathPlanningContext((demo.pathplanning.algorithms.PathPlanner)var3);
    demo.pathplanning.model.CartesianGraph var7 = var3.getGraph();
    int var8 = var7.getYSize();
    demo.pathplanning.model.CartesianGraph var11 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var14 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var15 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var18 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var21 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var22 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.Node var23 = new demo.pathplanning.model.Node(var7, var15, 1);
    java.util.Collection var24 = var23.getNeighbors();
    int var25 = var23.getCost();
    java.lang.String var26 = var23.toString();
    java.lang.String var27 = var23.toString();
    demo.pathplanning.model.Location var28 = var23.getLocation();
    int var29 = var28.getY();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var8 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var24);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var25 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var26 + "' != '" + "(1,1)=1"+ "'", var26.equals("(1,1)=1"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var27 + "' != '" + "(1,1)=1"+ "'", var27.equals("(1,1)=1"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var28);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var29 == 1);

  }

  public void test361() throws Throwable {

    demo.pathplanning.model.CartesianGraph var2 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var3 = var2.getXSize();
    int var4 = var2.getYSize();
    int var5 = var2.getYSize();
    demo.pathplanning.model.CartesianGraph var8 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var9 = new demo.pathplanning.model.Location(var5, 1);
    int var10 = var9.getY();
    java.lang.String var11 = var9.toString();
    java.lang.String var12 = var9.toString();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var3 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var4 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var5 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var11 + "' != '" + "(1,1)"+ "'", var11.equals("(1,1)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var12 + "' != '" + "(1,1)"+ "'", var12.equals("(1,1)"));

  }

  public void test362() throws Throwable {

    demo.pathplanning.model.CartesianGraph var2 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var3 = var2.getXSize();
    int var4 = var2.getYSize();
    int var5 = var2.getYSize();
    demo.pathplanning.model.CartesianGraph var8 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var9 = var8.getXSize();
    int var10 = var8.getYSize();
    int var11 = var8.getYSize();
    demo.pathplanning.model.CartesianGraph var12 = new demo.pathplanning.model.CartesianGraph(var5, var11);
    int var13 = var12.getXSize();
    demo.pathplanning.model.CartesianGraph var16 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.algorithms.AStar var17 = new demo.pathplanning.algorithms.AStar(var16);
    java.lang.String var18 = var16.toString();
    demo.pathplanning.model.CartesianGraph var21 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var24 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var25 = new demo.pathplanning.model.Location(1, 1);
    boolean var27 = var25.equals((java.lang.Object)0L);
    demo.pathplanning.model.Node var28 = var16.getNode(var25);
    demo.pathplanning.model.CartesianGraph var31 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var32 = var31.getXSize();
    demo.pathplanning.algorithms.AStar var33 = new demo.pathplanning.algorithms.AStar(var31);
    demo.pathplanning.model.CartesianGraph var36 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var39 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var40 = new demo.pathplanning.model.Location(1, 1);
    boolean var42 = var40.equals((java.lang.Object)0L);
    demo.pathplanning.model.Node var43 = var31.getNode(var40);
    int var44 = var31.getXSize();
    demo.pathplanning.model.Node var45 = new demo.pathplanning.model.Node(var12, var25, var44);
    java.lang.String var46 = var12.toString();
    int var47 = var12.getYSize();
    demo.pathplanning.model.CartesianGraph var50 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.algorithms.AStar var51 = new demo.pathplanning.algorithms.AStar(var50);
    demo.pathplanning.model.CartesianGraph var52 = var51.getGraph();
    demo.pathplanning.model.CartesianGraph var53 = var51.getGraph();
    demo.pathplanning.algorithms.PathPlanningContext var54 = new demo.pathplanning.algorithms.PathPlanningContext((demo.pathplanning.algorithms.PathPlanner)var51);
    demo.pathplanning.model.CartesianGraph var55 = var51.getGraph();
    int var56 = var55.getYSize();
    demo.pathplanning.model.CartesianGraph var59 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var62 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var63 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var66 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var69 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var70 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.Node var71 = new demo.pathplanning.model.Node(var55, var63, 1);
    java.util.Collection var72 = var71.getNeighbors();
    int var73 = var71.getCost();
    java.lang.String var74 = var71.toString();
    java.lang.String var75 = var71.toString();
    java.util.Collection var76 = var71.getNeighbors();
    java.lang.String var77 = var71.toString();
    java.util.Collection var78 = var71.getNeighbors();
    demo.pathplanning.model.CartesianGraph var81 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var84 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var85 = new demo.pathplanning.model.Location(1, 1);
    boolean var87 = var85.equals((java.lang.Object)0L);
    int var88 = var85.getX();
    java.lang.String var89 = var85.toString();
    boolean var90 = var71.equals((java.lang.Object)var85);
    demo.pathplanning.model.Location var91 = var71.getLocation();
    demo.pathplanning.model.Location var92 = var71.getLocation();
    java.lang.String var93 = var92.toString();
    demo.pathplanning.model.Node var94 = var12.getNode(var92);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var3 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var4 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var5 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var9 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var11 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var13 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var18 + "' != '" + "0,\n"+ "'", var18.equals("0,\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var27 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var28);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var32 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var42 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var43);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var44 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var46 + "' != '" + "0,\n"+ "'", var46.equals("0,\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var47 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var52);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var53);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var55);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var56 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var72);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var73 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var74 + "' != '" + "(1,1)=1"+ "'", var74.equals("(1,1)=1"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var75 + "' != '" + "(1,1)=1"+ "'", var75.equals("(1,1)=1"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var76);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var77 + "' != '" + "(1,1)=1"+ "'", var77.equals("(1,1)=1"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var78);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var87 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var88 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var89 + "' != '" + "(1,1)"+ "'", var89.equals("(1,1)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var90 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var91);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var92);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var93 + "' != '" + "(1,1)"+ "'", var93.equals("(1,1)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var94);

  }

  public void test363() throws Throwable {

    demo.pathplanning.model.CartesianGraph var2 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.algorithms.AStar var3 = new demo.pathplanning.algorithms.AStar(var2);
    demo.pathplanning.algorithms.AStar var4 = new demo.pathplanning.algorithms.AStar(var2);
    demo.pathplanning.algorithms.PathPlanningContext var5 = new demo.pathplanning.algorithms.PathPlanningContext((demo.pathplanning.algorithms.PathPlanner)var4);
    demo.pathplanning.model.CartesianGraph var8 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var11 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var12 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var15 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var16 = var15.getXSize();
    demo.pathplanning.model.CartesianGraph var19 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var20 = new demo.pathplanning.model.CartesianGraph(var16, 1);
    demo.pathplanning.model.Location var21 = new demo.pathplanning.model.Location(1, 1);
    java.lang.String var22 = var21.toString();
    demo.pathplanning.model.CartesianGraph var25 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var26 = var25.getXSize();
    demo.pathplanning.algorithms.AStar var27 = new demo.pathplanning.algorithms.AStar(var25);
    demo.pathplanning.model.CartesianGraph var30 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var33 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var34 = new demo.pathplanning.model.Location(1, 1);
    boolean var36 = var34.equals((java.lang.Object)0L);
    demo.pathplanning.model.Node var37 = var25.getNode(var34);
    int var38 = var25.getYSize();
    demo.pathplanning.model.CartesianGraph var41 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var42 = var41.getXSize();
    int var43 = var41.getYSize();
    int var44 = var41.getYSize();
    demo.pathplanning.model.CartesianGraph var47 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var48 = new demo.pathplanning.model.Location(var44, 1);
    java.lang.String var49 = var48.toString();
    demo.pathplanning.model.CartesianGraph var52 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var55 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var56 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var59 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var60 = var59.getXSize();
    int var61 = var59.getYSize();
    int var62 = var59.getYSize();
    demo.pathplanning.model.CartesianGraph var65 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var66 = var65.getXSize();
    int var67 = var65.getYSize();
    int var68 = var65.getYSize();
    demo.pathplanning.model.CartesianGraph var69 = new demo.pathplanning.model.CartesianGraph(var62, var68);
    demo.pathplanning.model.CartesianGraph var70 = new demo.pathplanning.model.CartesianGraph(1, var62);
    demo.pathplanning.model.Node var71 = new demo.pathplanning.model.Node(var25, var48, var62);
    java.util.Collection var72 = var71.getNeighbors();
    demo.pathplanning.model.Location var73 = var71.getLocation();
    java.util.List var74 = var4.getPath(var21, var73);

  }

  public void test364() throws Throwable {

    demo.pathplanning.model.CartesianGraph var2 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.algorithms.AStar var3 = new demo.pathplanning.algorithms.AStar(var2);
    demo.pathplanning.model.CartesianGraph var4 = var3.getGraph();
    demo.pathplanning.model.CartesianGraph var5 = var3.getGraph();
    demo.pathplanning.algorithms.PathPlanningContext var6 = new demo.pathplanning.algorithms.PathPlanningContext((demo.pathplanning.algorithms.PathPlanner)var3);
    demo.pathplanning.model.CartesianGraph var7 = var3.getGraph();
    int var8 = var7.getYSize();
    java.lang.String var9 = var7.toString();
    demo.pathplanning.model.CartesianGraph var12 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var15 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var16 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var19 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var20 = var19.getXSize();
    int var21 = var19.getYSize();
    int var22 = var19.getYSize();
    demo.pathplanning.model.CartesianGraph var25 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var26 = var25.getXSize();
    int var27 = var25.getYSize();
    int var28 = var25.getYSize();
    demo.pathplanning.model.CartesianGraph var29 = new demo.pathplanning.model.CartesianGraph(var22, var28);
    demo.pathplanning.model.CartesianGraph var30 = new demo.pathplanning.model.CartesianGraph(1, var22);
    int var31 = var30.getYSize();
    demo.pathplanning.model.CartesianGraph var34 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var35 = var34.getXSize();
    int var36 = var34.getYSize();
    int var37 = var34.getYSize();
    demo.pathplanning.model.CartesianGraph var40 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var41 = new demo.pathplanning.model.Location(var37, 1);
    java.lang.String var42 = var41.toString();
    demo.pathplanning.model.Node var43 = var30.getNode(var41);
    int var44 = var41.getX();
    demo.pathplanning.model.CartesianGraph var48 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var49 = var48.getXSize();
    int var50 = var48.getYSize();
    int var51 = var48.getYSize();
    demo.pathplanning.model.CartesianGraph var54 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var55 = var54.getXSize();
    int var56 = var54.getYSize();
    int var57 = var54.getYSize();
    demo.pathplanning.model.CartesianGraph var58 = new demo.pathplanning.model.CartesianGraph(var51, var57);
    demo.pathplanning.model.CartesianGraph var61 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var64 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var65 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var66 = new demo.pathplanning.model.CartesianGraph(var51, 1);
    demo.pathplanning.model.CartesianGraph var67 = new demo.pathplanning.model.CartesianGraph(0, 1);
    demo.pathplanning.model.Node var68 = new demo.pathplanning.model.Node(var7, var41, 1);
    int var69 = var7.getYSize();
    int var70 = var7.getYSize();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var8 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var9 + "' != '" + "0,\n"+ "'", var9.equals("0,\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var20 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var21 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var22 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var26 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var27 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var28 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var31 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var35 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var36 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var37 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var42 + "' != '" + "(1,1)"+ "'", var42.equals("(1,1)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var43);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var44 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var49 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var50 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var51 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var55 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var56 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var57 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var69 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var70 == 1);

  }

  public void test365() throws Throwable {

    demo.pathplanning.model.CartesianGraph var2 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var3 = var2.getXSize();
    demo.pathplanning.algorithms.AStar var4 = new demo.pathplanning.algorithms.AStar(var2);
    demo.pathplanning.model.CartesianGraph var7 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var10 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var11 = new demo.pathplanning.model.Location(1, 1);
    boolean var13 = var11.equals((java.lang.Object)0L);
    demo.pathplanning.model.Node var14 = var2.getNode(var11);
    demo.pathplanning.algorithms.AStar var15 = new demo.pathplanning.algorithms.AStar(var2);
    demo.pathplanning.model.CartesianGraph var16 = var15.getGraph();
    demo.pathplanning.model.CartesianGraph var17 = var15.getGraph();
    demo.pathplanning.model.CartesianGraph var20 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var23 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var24 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var27 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var28 = var27.getXSize();
    int var29 = var27.getYSize();
    int var30 = var27.getYSize();
    demo.pathplanning.model.CartesianGraph var33 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var34 = var33.getXSize();
    int var35 = var33.getYSize();
    int var36 = var33.getYSize();
    demo.pathplanning.model.CartesianGraph var37 = new demo.pathplanning.model.CartesianGraph(var30, var36);
    java.lang.String var38 = var37.toString();
    demo.pathplanning.model.CartesianGraph var41 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.algorithms.AStar var42 = new demo.pathplanning.algorithms.AStar(var41);
    java.lang.String var43 = var41.toString();
    demo.pathplanning.model.CartesianGraph var46 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var49 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var50 = new demo.pathplanning.model.Location(1, 1);
    boolean var52 = var50.equals((java.lang.Object)0L);
    demo.pathplanning.model.Node var53 = var41.getNode(var50);
    java.lang.String var54 = var50.toString();
    demo.pathplanning.model.CartesianGraph var57 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.algorithms.AStar var58 = new demo.pathplanning.algorithms.AStar(var57);
    demo.pathplanning.model.CartesianGraph var59 = var58.getGraph();
    demo.pathplanning.model.CartesianGraph var60 = var58.getGraph();
    demo.pathplanning.algorithms.PathPlanningContext var61 = new demo.pathplanning.algorithms.PathPlanningContext((demo.pathplanning.algorithms.PathPlanner)var58);
    demo.pathplanning.model.CartesianGraph var62 = var58.getGraph();
    int var63 = var62.getYSize();
    demo.pathplanning.model.CartesianGraph var66 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var69 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var70 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var73 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var76 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var77 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.Node var78 = new demo.pathplanning.model.Node(var62, var70, 1);
    boolean var79 = var50.equals((java.lang.Object)1);
    int var80 = var50.getX();
    demo.pathplanning.model.CartesianGraph var83 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var84 = var83.getXSize();
    int var85 = var83.getYSize();
    int var86 = var83.getYSize();
    demo.pathplanning.model.CartesianGraph var89 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var90 = new demo.pathplanning.model.Location(var86, 1);
    demo.pathplanning.model.Node var91 = new demo.pathplanning.model.Node(var37, var50, var86);
    int var92 = var37.getXSize();
    demo.pathplanning.model.Location var93 = new demo.pathplanning.model.Location(1, var92);
    demo.pathplanning.model.Node var94 = var17.getNode(var93);
    int var95 = var93.getY();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var3 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var13 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var14);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var16);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var17);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var28 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var29 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var30 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var34 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var35 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var36 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var38 + "' != '" + "0,\n"+ "'", var38.equals("0,\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var43 + "' != '" + "0,\n"+ "'", var43.equals("0,\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var52 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var53);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var54 + "' != '" + "(1,1)"+ "'", var54.equals("(1,1)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var59);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var60);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var62);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var63 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var79 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var80 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var84 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var85 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var86 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var92 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var94);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var95 == 1);

  }

  public void test366() throws Throwable {

    demo.pathplanning.model.CartesianGraph var2 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var3 = var2.getXSize();
    demo.pathplanning.algorithms.AStar var4 = new demo.pathplanning.algorithms.AStar(var2);
    demo.pathplanning.model.CartesianGraph var7 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var10 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var11 = new demo.pathplanning.model.Location(1, 1);
    boolean var13 = var11.equals((java.lang.Object)0L);
    demo.pathplanning.model.Node var14 = var2.getNode(var11);
    int var15 = var2.getYSize();
    demo.pathplanning.model.CartesianGraph var18 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var19 = var18.getXSize();
    int var20 = var18.getYSize();
    int var21 = var18.getYSize();
    demo.pathplanning.model.CartesianGraph var24 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var25 = new demo.pathplanning.model.Location(var21, 1);
    java.lang.String var26 = var25.toString();
    demo.pathplanning.model.CartesianGraph var29 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var32 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var33 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var36 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var37 = var36.getXSize();
    int var38 = var36.getYSize();
    int var39 = var36.getYSize();
    demo.pathplanning.model.CartesianGraph var42 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var43 = var42.getXSize();
    int var44 = var42.getYSize();
    int var45 = var42.getYSize();
    demo.pathplanning.model.CartesianGraph var46 = new demo.pathplanning.model.CartesianGraph(var39, var45);
    demo.pathplanning.model.CartesianGraph var47 = new demo.pathplanning.model.CartesianGraph(1, var39);
    demo.pathplanning.model.Node var48 = new demo.pathplanning.model.Node(var2, var25, var39);
    java.util.Collection var49 = var48.getNeighbors();
    int var50 = var48.getCost();
    demo.pathplanning.model.CartesianGraph var53 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var54 = var53.getXSize();
    demo.pathplanning.model.CartesianGraph var57 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var58 = new demo.pathplanning.model.CartesianGraph(var54, 1);
    demo.pathplanning.model.CartesianGraph var61 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.algorithms.AStar var62 = new demo.pathplanning.algorithms.AStar(var61);
    demo.pathplanning.model.CartesianGraph var63 = var62.getGraph();
    demo.pathplanning.model.CartesianGraph var64 = var62.getGraph();
    demo.pathplanning.algorithms.PathPlanningContext var65 = new demo.pathplanning.algorithms.PathPlanningContext((demo.pathplanning.algorithms.PathPlanner)var62);
    demo.pathplanning.model.CartesianGraph var66 = var62.getGraph();
    int var67 = var66.getYSize();
    demo.pathplanning.model.CartesianGraph var68 = new demo.pathplanning.model.CartesianGraph(var54, var67);
    int var69 = var68.getXSize();
    demo.pathplanning.algorithms.AStar var70 = new demo.pathplanning.algorithms.AStar(var68);
    java.lang.String var71 = var68.toString();
    boolean var72 = var48.equals((java.lang.Object)var68);
    java.lang.String var73 = var68.toString();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var3 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var13 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var14);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var15 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var19 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var20 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var21 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var26 + "' != '" + "(1,1)"+ "'", var26.equals("(1,1)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var37 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var38 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var39 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var43 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var44 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var45 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var49);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var50 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var54 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var63);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var64);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var66);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var67 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var69 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var71 + "' != '" + "0,\n"+ "'", var71.equals("0,\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var72 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var73 + "' != '" + "0,\n"+ "'", var73.equals("0,\n"));

  }

  public void test367() throws Throwable {

    demo.pathplanning.model.CartesianGraph var2 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.algorithms.AStar var3 = new demo.pathplanning.algorithms.AStar(var2);
    demo.pathplanning.model.CartesianGraph var4 = var3.getGraph();
    demo.pathplanning.model.CartesianGraph var5 = var3.getGraph();
    demo.pathplanning.algorithms.PathPlanningContext var6 = new demo.pathplanning.algorithms.PathPlanningContext((demo.pathplanning.algorithms.PathPlanner)var3);
    demo.pathplanning.model.CartesianGraph var7 = var3.getGraph();
    int var8 = var7.getYSize();
    demo.pathplanning.model.CartesianGraph var11 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var14 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var15 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var18 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var21 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var22 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.Node var23 = new demo.pathplanning.model.Node(var7, var15, 1);
    demo.pathplanning.model.CartesianGraph var26 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var29 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var30 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var33 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var34 = var33.getXSize();
    int var35 = var33.getYSize();
    int var36 = var33.getYSize();
    demo.pathplanning.model.CartesianGraph var39 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var40 = var39.getXSize();
    int var41 = var39.getYSize();
    int var42 = var39.getYSize();
    demo.pathplanning.model.CartesianGraph var43 = new demo.pathplanning.model.CartesianGraph(var36, var42);
    demo.pathplanning.model.CartesianGraph var44 = new demo.pathplanning.model.CartesianGraph(1, var36);
    demo.pathplanning.model.CartesianGraph var47 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var50 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var51 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var54 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var55 = var54.getXSize();
    int var56 = var54.getYSize();
    int var57 = var54.getYSize();
    demo.pathplanning.model.CartesianGraph var60 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var61 = var60.getXSize();
    int var62 = var60.getYSize();
    int var63 = var60.getYSize();
    demo.pathplanning.model.CartesianGraph var64 = new demo.pathplanning.model.CartesianGraph(var57, var63);
    demo.pathplanning.model.CartesianGraph var65 = new demo.pathplanning.model.CartesianGraph(1, var57);
    demo.pathplanning.model.Location var66 = new demo.pathplanning.model.Location(1, 1);
    boolean var67 = var23.equals((java.lang.Object)1);
    java.util.Collection var68 = var23.getNeighbors();
    java.util.Collection var69 = var23.getNeighbors();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var8 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var34 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var35 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var36 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var40 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var41 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var42 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var55 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var56 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var57 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var61 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var62 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var63 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var67 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var68);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var69);

  }

  public void test368() throws Throwable {

    demo.pathplanning.model.CartesianGraph var2 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var5 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var6 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var9 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var10 = var9.getXSize();
    int var11 = var9.getYSize();
    int var12 = var9.getYSize();
    demo.pathplanning.model.CartesianGraph var15 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var16 = var15.getXSize();
    int var17 = var15.getYSize();
    int var18 = var15.getYSize();
    demo.pathplanning.model.CartesianGraph var19 = new demo.pathplanning.model.CartesianGraph(var12, var18);
    demo.pathplanning.model.CartesianGraph var20 = new demo.pathplanning.model.CartesianGraph(1, var12);
    int var21 = var20.getYSize();
    demo.pathplanning.model.CartesianGraph var24 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.algorithms.AStar var25 = new demo.pathplanning.algorithms.AStar(var24);
    java.lang.String var26 = var24.toString();
    demo.pathplanning.model.CartesianGraph var29 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var32 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var33 = new demo.pathplanning.model.Location(1, 1);
    boolean var35 = var33.equals((java.lang.Object)0L);
    demo.pathplanning.model.Node var36 = var24.getNode(var33);
    demo.pathplanning.model.CartesianGraph var39 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var40 = var39.getXSize();
    int var41 = var39.getYSize();
    int var42 = var39.getYSize();
    demo.pathplanning.model.CartesianGraph var45 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var46 = var45.getXSize();
    int var47 = var45.getYSize();
    int var48 = var45.getYSize();
    demo.pathplanning.model.CartesianGraph var49 = new demo.pathplanning.model.CartesianGraph(var42, var48);
    demo.pathplanning.model.CartesianGraph var52 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var55 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var56 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var57 = new demo.pathplanning.model.CartesianGraph(var42, 1);
    demo.pathplanning.model.Node var58 = new demo.pathplanning.model.Node(var20, var33, 1);
    demo.pathplanning.model.CartesianGraph var61 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.algorithms.AStar var62 = new demo.pathplanning.algorithms.AStar(var61);
    java.lang.String var63 = var61.toString();
    int var64 = var61.getYSize();
    demo.pathplanning.model.CartesianGraph var65 = new demo.pathplanning.model.CartesianGraph(1, var64);
    java.lang.String var66 = var65.toString();
    java.lang.String var67 = var65.toString();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var11 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var12 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var16 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var17 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var18 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var21 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var26 + "' != '" + "0,\n"+ "'", var26.equals("0,\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var35 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var36);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var40 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var41 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var42 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var46 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var47 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var48 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var63 + "' != '" + "0,\n"+ "'", var63.equals("0,\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var64 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var66 + "' != '" + "0,\n"+ "'", var66.equals("0,\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var67 + "' != '" + "0,\n"+ "'", var67.equals("0,\n"));

  }

  public void test369() throws Throwable {

    demo.pathplanning.model.CartesianGraph var2 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var3 = var2.getXSize();
    int var4 = var2.getYSize();
    int var5 = var2.getYSize();
    demo.pathplanning.model.CartesianGraph var8 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var9 = var8.getXSize();
    int var10 = var8.getYSize();
    int var11 = var8.getYSize();
    demo.pathplanning.model.CartesianGraph var12 = new demo.pathplanning.model.CartesianGraph(var5, var11);
    demo.pathplanning.algorithms.AStar var13 = new demo.pathplanning.algorithms.AStar(var12);
    demo.pathplanning.algorithms.AStar var14 = new demo.pathplanning.algorithms.AStar(var12);
    int var15 = var12.getXSize();
    int var16 = var12.getYSize();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var3 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var4 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var5 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var9 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var11 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var15 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var16 == 1);

  }

  public void test370() throws Throwable {

    demo.pathplanning.model.CartesianGraph var2 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.algorithms.AStar var3 = new demo.pathplanning.algorithms.AStar(var2);
    demo.pathplanning.model.CartesianGraph var4 = var3.getGraph();
    demo.pathplanning.algorithms.PathPlanningContext var5 = new demo.pathplanning.algorithms.PathPlanningContext((demo.pathplanning.algorithms.PathPlanner)var3);
    demo.pathplanning.model.CartesianGraph var6 = var3.getGraph();
    demo.pathplanning.model.CartesianGraph var9 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var12 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var13 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var16 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var17 = var16.getXSize();
    int var18 = var16.getYSize();
    int var19 = var16.getYSize();
    demo.pathplanning.model.CartesianGraph var22 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var23 = var22.getXSize();
    int var24 = var22.getYSize();
    int var25 = var22.getYSize();
    demo.pathplanning.model.CartesianGraph var26 = new demo.pathplanning.model.CartesianGraph(var19, var25);
    demo.pathplanning.model.CartesianGraph var27 = new demo.pathplanning.model.CartesianGraph(1, var19);
    demo.pathplanning.model.CartesianGraph var30 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.algorithms.AStar var31 = new demo.pathplanning.algorithms.AStar(var30);
    demo.pathplanning.model.CartesianGraph var32 = var31.getGraph();
    demo.pathplanning.model.CartesianGraph var33 = var31.getGraph();
    demo.pathplanning.algorithms.PathPlanningContext var34 = new demo.pathplanning.algorithms.PathPlanningContext((demo.pathplanning.algorithms.PathPlanner)var31);
    demo.pathplanning.model.CartesianGraph var35 = var31.getGraph();
    int var36 = var35.getYSize();
    demo.pathplanning.model.CartesianGraph var39 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var42 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var43 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var46 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var49 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var50 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.Node var51 = new demo.pathplanning.model.Node(var35, var43, 1);
    int var52 = var35.getYSize();
    demo.pathplanning.model.CartesianGraph var55 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var58 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var59 = new demo.pathplanning.model.Location(1, 1);
    boolean var61 = var59.equals((java.lang.Object)0L);
    int var62 = var59.getX();
    int var63 = var59.getY();
    demo.pathplanning.model.Node var64 = var35.getNode(var59);
    demo.pathplanning.model.Node var65 = var27.getNode(var59);
    demo.pathplanning.model.Node var66 = var6.getNode(var59);
    int var67 = var59.getY();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var6);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var17 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var18 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var19 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var23 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var24 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var25 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var32);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var33);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var35);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var36 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var52 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var61 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var62 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var63 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var64);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var65);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var66);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var67 == 1);

  }

  public void test371() throws Throwable {

    demo.pathplanning.model.CartesianGraph var2 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var3 = var2.getXSize();
    int var4 = var2.getYSize();
    int var5 = var2.getYSize();
    demo.pathplanning.model.CartesianGraph var8 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var9 = var8.getXSize();
    int var10 = var8.getYSize();
    int var11 = var8.getYSize();
    demo.pathplanning.model.CartesianGraph var12 = new demo.pathplanning.model.CartesianGraph(var5, var11);
    demo.pathplanning.model.CartesianGraph var15 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var18 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var19 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var20 = new demo.pathplanning.model.CartesianGraph(var5, 1);
    java.lang.String var21 = var20.toString();
    demo.pathplanning.model.CartesianGraph var24 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var27 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var28 = new demo.pathplanning.model.Location(1, 1);
    boolean var30 = var28.equals((java.lang.Object)0L);
    demo.pathplanning.model.Node var31 = var20.getNode(var28);
    demo.pathplanning.model.CartesianGraph var34 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var37 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var38 = new demo.pathplanning.model.Location(1, 1);
    boolean var40 = var38.equals((java.lang.Object)0L);
    int var41 = var38.getX();
    int var42 = var38.getX();
    demo.pathplanning.model.CartesianGraph var45 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var46 = var45.getXSize();
    demo.pathplanning.model.Node var47 = new demo.pathplanning.model.Node(var20, var38, var46);
    int var48 = var47.getCost();
    java.util.Collection var49 = var47.getNeighbors();
    int var50 = var47.getCost();
    demo.pathplanning.model.Location var51 = var47.getLocation();
    java.lang.String var52 = var47.toString();
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      demo.pathplanning.model.Direction var53 = demo.pathplanning.model.Direction.valueOf(var52);
      fail("Expected exception of type java.lang.IllegalArgumentException");
    } catch (java.lang.IllegalArgumentException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var3 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var4 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var5 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var9 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var11 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var21 + "' != '" + "0,\n"+ "'", var21.equals("0,\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var30 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var31);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var40 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var41 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var42 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var46 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var48 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var49);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var50 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var51);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var52 + "' != '" + "(1,1)=1"+ "'", var52.equals("(1,1)=1"));

  }

  public void test372() throws Throwable {

    demo.pathplanning.model.CartesianGraph var2 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.algorithms.AStar var3 = new demo.pathplanning.algorithms.AStar(var2);
    demo.pathplanning.model.CartesianGraph var4 = var3.getGraph();
    demo.pathplanning.model.CartesianGraph var5 = var3.getGraph();
    demo.pathplanning.model.CartesianGraph var6 = var3.getGraph();
    demo.pathplanning.algorithms.AStar var7 = new demo.pathplanning.algorithms.AStar(var6);
    int var8 = var6.getYSize();
    demo.pathplanning.algorithms.AStar var9 = new demo.pathplanning.algorithms.AStar(var6);
    java.lang.String var10 = var6.toString();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var6);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var8 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var10 + "' != '" + "0,\n"+ "'", var10.equals("0,\n"));

  }

  public void test373() throws Throwable {

    demo.pathplanning.model.CartesianGraph var2 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var3 = var2.getXSize();
    int var4 = var2.getYSize();
    int var5 = var2.getYSize();
    demo.pathplanning.model.CartesianGraph var8 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var9 = var8.getXSize();
    int var10 = var8.getYSize();
    int var11 = var8.getYSize();
    demo.pathplanning.model.CartesianGraph var12 = new demo.pathplanning.model.CartesianGraph(var5, var11);
    demo.pathplanning.model.CartesianGraph var15 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var18 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var19 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var20 = new demo.pathplanning.model.CartesianGraph(var5, 1);
    java.lang.String var21 = var20.toString();
    demo.pathplanning.model.CartesianGraph var24 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var27 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var28 = new demo.pathplanning.model.Location(1, 1);
    boolean var30 = var28.equals((java.lang.Object)0L);
    demo.pathplanning.model.Node var31 = var20.getNode(var28);
    int var32 = var28.getY();
    java.lang.String var33 = var28.toString();
    int var34 = var28.getY();
    java.lang.String var35 = var28.toString();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var3 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var4 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var5 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var9 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var11 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var21 + "' != '" + "0,\n"+ "'", var21.equals("0,\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var30 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var31);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var32 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var33 + "' != '" + "(1,1)"+ "'", var33.equals("(1,1)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var34 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var35 + "' != '" + "(1,1)"+ "'", var35.equals("(1,1)"));

  }

  public void test374() throws Throwable {

    demo.pathplanning.model.CartesianGraph var2 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var3 = var2.getXSize();
    int var4 = var2.getYSize();
    int var5 = var2.getYSize();
    demo.pathplanning.model.CartesianGraph var8 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var9 = var8.getXSize();
    int var10 = var8.getYSize();
    int var11 = var8.getYSize();
    demo.pathplanning.model.CartesianGraph var12 = new demo.pathplanning.model.CartesianGraph(var5, var11);
    demo.pathplanning.model.CartesianGraph var15 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var18 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var19 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var20 = new demo.pathplanning.model.CartesianGraph(var5, 1);
    int var21 = var20.getXSize();
    demo.pathplanning.model.CartesianGraph var24 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var25 = var24.getXSize();
    int var26 = var24.getYSize();
    int var27 = var24.getYSize();
    demo.pathplanning.model.CartesianGraph var28 = new demo.pathplanning.model.CartesianGraph(var21, var27);
    int var29 = var28.getYSize();
    int var30 = var28.getYSize();
    java.lang.String var31 = var28.toString();
    demo.pathplanning.algorithms.AStar var32 = new demo.pathplanning.algorithms.AStar(var28);
    demo.pathplanning.algorithms.AStar var33 = new demo.pathplanning.algorithms.AStar(var28);
    demo.pathplanning.model.CartesianGraph var34 = var33.getGraph();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var3 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var4 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var5 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var9 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var11 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var21 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var25 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var26 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var27 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var29 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var30 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var31 + "' != '" + "0,\n"+ "'", var31.equals("0,\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var34);

  }

  public void test375() throws Throwable {

    demo.pathplanning.model.CartesianGraph var3 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var4 = var3.getXSize();
    int var5 = var3.getYSize();
    int var6 = var3.getYSize();
    demo.pathplanning.model.CartesianGraph var9 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var10 = var9.getXSize();
    int var11 = var9.getYSize();
    int var12 = var9.getYSize();
    demo.pathplanning.model.CartesianGraph var13 = new demo.pathplanning.model.CartesianGraph(var6, var12);
    demo.pathplanning.model.CartesianGraph var16 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var19 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var20 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var21 = new demo.pathplanning.model.CartesianGraph(var6, 1);
    demo.pathplanning.model.CartesianGraph var22 = new demo.pathplanning.model.CartesianGraph(0, 1);
    demo.pathplanning.model.CartesianGraph var25 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.algorithms.AStar var26 = new demo.pathplanning.algorithms.AStar(var25);
    java.lang.String var27 = var25.toString();
    demo.pathplanning.model.CartesianGraph var30 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var33 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var34 = new demo.pathplanning.model.Location(1, 1);
    boolean var36 = var34.equals((java.lang.Object)0L);
    demo.pathplanning.model.Node var37 = var25.getNode(var34);
    demo.pathplanning.model.CartesianGraph var40 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var41 = var40.getXSize();
    int var42 = var40.getYSize();
    int var43 = var40.getYSize();
    demo.pathplanning.model.CartesianGraph var46 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var47 = var46.getXSize();
    int var48 = var46.getYSize();
    int var49 = var46.getYSize();
    demo.pathplanning.model.CartesianGraph var50 = new demo.pathplanning.model.CartesianGraph(var43, var49);
    int var51 = var50.getXSize();
    demo.pathplanning.model.CartesianGraph var54 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.algorithms.AStar var55 = new demo.pathplanning.algorithms.AStar(var54);
    java.lang.String var56 = var54.toString();
    demo.pathplanning.model.CartesianGraph var59 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var62 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var63 = new demo.pathplanning.model.Location(1, 1);
    boolean var65 = var63.equals((java.lang.Object)0L);
    demo.pathplanning.model.Node var66 = var54.getNode(var63);
    demo.pathplanning.model.CartesianGraph var69 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var70 = var69.getXSize();
    demo.pathplanning.algorithms.AStar var71 = new demo.pathplanning.algorithms.AStar(var69);
    demo.pathplanning.model.CartesianGraph var74 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var77 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var78 = new demo.pathplanning.model.Location(1, 1);
    boolean var80 = var78.equals((java.lang.Object)0L);
    demo.pathplanning.model.Node var81 = var69.getNode(var78);
    int var82 = var69.getXSize();
    demo.pathplanning.model.Node var83 = new demo.pathplanning.model.Node(var50, var63, var82);
    java.lang.String var84 = var63.toString();
    int var85 = var63.getY();
    demo.pathplanning.model.Node var86 = var25.getNode(var63);
    int var87 = var25.getYSize();
    demo.pathplanning.model.CartesianGraph var88 = new demo.pathplanning.model.CartesianGraph(1, var87);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var4 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var5 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var6 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var11 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var12 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var27 + "' != '" + "0,\n"+ "'", var27.equals("0,\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var36 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var37);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var41 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var42 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var43 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var47 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var48 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var49 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var51 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var56 + "' != '" + "0,\n"+ "'", var56.equals("0,\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var65 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var66);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var70 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var80 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var81);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var82 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var84 + "' != '" + "(1,1)"+ "'", var84.equals("(1,1)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var85 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var86);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var87 == 1);

  }

  public void test376() throws Throwable {

    demo.pathplanning.model.CartesianGraph var2 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.algorithms.AStar var3 = new demo.pathplanning.algorithms.AStar(var2);
    demo.pathplanning.model.CartesianGraph var4 = var3.getGraph();
    demo.pathplanning.model.CartesianGraph var5 = var3.getGraph();
    demo.pathplanning.algorithms.PathPlanningContext var6 = new demo.pathplanning.algorithms.PathPlanningContext((demo.pathplanning.algorithms.PathPlanner)var3);
    demo.pathplanning.model.CartesianGraph var7 = var3.getGraph();
    int var8 = var7.getYSize();
    demo.pathplanning.model.CartesianGraph var11 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var14 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var15 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var18 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var21 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var22 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.Node var23 = new demo.pathplanning.model.Node(var7, var15, 1);
    int var24 = var23.getCost();
    java.util.Collection var25 = var23.getNeighbors();
    java.util.Collection var26 = var23.getNeighbors();
    boolean var28 = var23.equals((java.lang.Object)(-1L));
    demo.pathplanning.model.Location var29 = var23.getLocation();
    int var30 = var29.getY();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var8 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var24 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var25);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var26);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var28 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var29);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var30 == 1);

  }

  public void test377() throws Throwable {

    demo.pathplanning.model.CartesianGraph var2 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.algorithms.AStar var3 = new demo.pathplanning.algorithms.AStar(var2);
    demo.pathplanning.model.CartesianGraph var4 = var3.getGraph();
    demo.pathplanning.model.CartesianGraph var5 = var3.getGraph();
    demo.pathplanning.algorithms.PathPlanningContext var6 = new demo.pathplanning.algorithms.PathPlanningContext((demo.pathplanning.algorithms.PathPlanner)var3);
    demo.pathplanning.model.CartesianGraph var7 = var3.getGraph();
    int var8 = var7.getYSize();
    demo.pathplanning.model.CartesianGraph var11 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var14 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var15 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var18 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var21 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var22 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.Node var23 = new demo.pathplanning.model.Node(var7, var15, 1);
    demo.pathplanning.model.CartesianGraph var26 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var29 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var30 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var33 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var34 = var33.getXSize();
    int var35 = var33.getYSize();
    int var36 = var33.getYSize();
    demo.pathplanning.model.CartesianGraph var39 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var40 = var39.getXSize();
    int var41 = var39.getYSize();
    int var42 = var39.getYSize();
    demo.pathplanning.model.CartesianGraph var43 = new demo.pathplanning.model.CartesianGraph(var36, var42);
    demo.pathplanning.model.CartesianGraph var44 = new demo.pathplanning.model.CartesianGraph(1, var36);
    demo.pathplanning.model.CartesianGraph var45 = new demo.pathplanning.model.CartesianGraph(1, var36);
    demo.pathplanning.algorithms.AStar var46 = new demo.pathplanning.algorithms.AStar(var45);
    demo.pathplanning.model.CartesianGraph var49 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.algorithms.AStar var50 = new demo.pathplanning.algorithms.AStar(var49);
    demo.pathplanning.model.CartesianGraph var51 = var50.getGraph();
    demo.pathplanning.model.CartesianGraph var52 = var50.getGraph();
    demo.pathplanning.algorithms.PathPlanningContext var53 = new demo.pathplanning.algorithms.PathPlanningContext((demo.pathplanning.algorithms.PathPlanner)var50);
    demo.pathplanning.model.CartesianGraph var54 = var50.getGraph();
    int var55 = var54.getYSize();
    demo.pathplanning.model.CartesianGraph var58 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var61 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var62 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var65 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var68 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var69 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.Node var70 = new demo.pathplanning.model.Node(var54, var62, 1);
    int var71 = var62.getX();
    int var72 = var62.getX();
    java.lang.String var73 = var62.toString();
    demo.pathplanning.model.Node var74 = var45.getNode(var62);
    int var75 = var45.getXSize();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var8 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var34 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var35 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var36 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var40 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var41 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var42 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var51);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var52);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var54);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var55 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var71 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var72 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var73 + "' != '" + "(1,1)"+ "'", var73.equals("(1,1)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var74);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var75 == 1);

  }

  public void test378() throws Throwable {

    demo.pathplanning.model.CartesianGraph var2 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.algorithms.AStar var3 = new demo.pathplanning.algorithms.AStar(var2);
    demo.pathplanning.model.CartesianGraph var4 = var3.getGraph();
    demo.pathplanning.model.CartesianGraph var5 = var3.getGraph();
    demo.pathplanning.algorithms.PathPlanningContext var6 = new demo.pathplanning.algorithms.PathPlanningContext((demo.pathplanning.algorithms.PathPlanner)var3);
    demo.pathplanning.model.CartesianGraph var7 = var3.getGraph();
    int var8 = var7.getYSize();
    demo.pathplanning.model.CartesianGraph var11 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var14 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var15 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var18 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var21 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var22 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.Node var23 = new demo.pathplanning.model.Node(var7, var15, 1);
    int var24 = var23.getCost();
    demo.pathplanning.model.CartesianGraph var27 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var28 = var27.getXSize();
    int var29 = var27.getYSize();
    int var30 = var27.getYSize();
    demo.pathplanning.model.CartesianGraph var33 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var34 = new demo.pathplanning.model.Location(var30, 1);
    demo.pathplanning.model.CartesianGraph var35 = new demo.pathplanning.model.CartesianGraph(var24, 1);
    demo.pathplanning.model.CartesianGraph var38 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.algorithms.AStar var39 = new demo.pathplanning.algorithms.AStar(var38);
    demo.pathplanning.model.CartesianGraph var40 = var39.getGraph();
    demo.pathplanning.model.CartesianGraph var41 = var39.getGraph();
    demo.pathplanning.algorithms.PathPlanningContext var42 = new demo.pathplanning.algorithms.PathPlanningContext((demo.pathplanning.algorithms.PathPlanner)var39);
    demo.pathplanning.model.CartesianGraph var43 = var39.getGraph();
    int var44 = var43.getYSize();
    demo.pathplanning.model.CartesianGraph var45 = new demo.pathplanning.model.CartesianGraph(1, var44);
    int var46 = var45.getXSize();
    demo.pathplanning.model.CartesianGraph var49 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.algorithms.AStar var50 = new demo.pathplanning.algorithms.AStar(var49);
    demo.pathplanning.model.CartesianGraph var51 = var50.getGraph();
    demo.pathplanning.model.CartesianGraph var52 = var50.getGraph();
    demo.pathplanning.algorithms.PathPlanningContext var53 = new demo.pathplanning.algorithms.PathPlanningContext((demo.pathplanning.algorithms.PathPlanner)var50);
    demo.pathplanning.model.CartesianGraph var54 = var50.getGraph();
    int var55 = var54.getYSize();
    demo.pathplanning.model.CartesianGraph var58 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var61 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var62 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var65 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var68 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var69 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.Node var70 = new demo.pathplanning.model.Node(var54, var62, 1);
    int var71 = var70.getCost();
    demo.pathplanning.model.CartesianGraph var74 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var75 = var74.getXSize();
    int var76 = var74.getYSize();
    int var77 = var74.getYSize();
    demo.pathplanning.model.CartesianGraph var80 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var81 = new demo.pathplanning.model.Location(var77, 1);
    demo.pathplanning.model.CartesianGraph var82 = new demo.pathplanning.model.CartesianGraph(var71, 1);
    demo.pathplanning.model.CartesianGraph var85 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var88 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var89 = new demo.pathplanning.model.Location(1, 1);
    boolean var91 = var89.equals((java.lang.Object)0L);
    demo.pathplanning.model.Node var92 = var82.getNode(var89);
    demo.pathplanning.model.Node var93 = var45.getNode(var89);
    java.lang.String var94 = var45.toString();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var8 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var24 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var28 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var29 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var30 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var40);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var41);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var43);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var44 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var46 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var51);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var52);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var54);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var55 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var71 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var75 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var76 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var77 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var91 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var92);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var93);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var94 + "' != '" + "0,\n"+ "'", var94.equals("0,\n"));

  }

  public void test379() throws Throwable {

    demo.pathplanning.model.CartesianGraph var2 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var3 = var2.getXSize();
    int var4 = var2.getYSize();
    int var5 = var2.getYSize();
    demo.pathplanning.model.CartesianGraph var8 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var9 = var8.getXSize();
    int var10 = var8.getYSize();
    int var11 = var8.getYSize();
    demo.pathplanning.model.CartesianGraph var12 = new demo.pathplanning.model.CartesianGraph(var5, var11);
    java.lang.String var13 = var12.toString();
    demo.pathplanning.model.CartesianGraph var16 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var17 = var16.getXSize();
    int var18 = var16.getYSize();
    demo.pathplanning.model.CartesianGraph var21 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var22 = var21.getXSize();
    demo.pathplanning.algorithms.AStar var23 = new demo.pathplanning.algorithms.AStar(var21);
    demo.pathplanning.model.CartesianGraph var26 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var29 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var30 = new demo.pathplanning.model.Location(1, 1);
    boolean var32 = var30.equals((java.lang.Object)0L);
    demo.pathplanning.model.Node var33 = var21.getNode(var30);
    int var34 = var30.getY();
    demo.pathplanning.model.CartesianGraph var37 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.algorithms.AStar var38 = new demo.pathplanning.algorithms.AStar(var37);
    demo.pathplanning.model.CartesianGraph var39 = var38.getGraph();
    demo.pathplanning.model.CartesianGraph var40 = var38.getGraph();
    demo.pathplanning.algorithms.PathPlanningContext var41 = new demo.pathplanning.algorithms.PathPlanningContext((demo.pathplanning.algorithms.PathPlanner)var38);
    demo.pathplanning.model.CartesianGraph var42 = var38.getGraph();
    int var43 = var42.getYSize();
    demo.pathplanning.model.CartesianGraph var46 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var49 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var50 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var53 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var56 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var57 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.Node var58 = new demo.pathplanning.model.Node(var42, var50, 1);
    java.util.Collection var59 = var58.getNeighbors();
    int var60 = var58.getCost();
    java.util.Collection var61 = var58.getNeighbors();
    demo.pathplanning.model.CartesianGraph var64 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.algorithms.AStar var65 = new demo.pathplanning.algorithms.AStar(var64);
    demo.pathplanning.model.CartesianGraph var66 = var65.getGraph();
    demo.pathplanning.model.CartesianGraph var67 = var65.getGraph();
    demo.pathplanning.algorithms.PathPlanningContext var68 = new demo.pathplanning.algorithms.PathPlanningContext((demo.pathplanning.algorithms.PathPlanner)var65);
    demo.pathplanning.model.CartesianGraph var69 = var65.getGraph();
    int var70 = var69.getYSize();
    demo.pathplanning.model.CartesianGraph var73 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var76 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var77 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var80 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var83 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var84 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.Node var85 = new demo.pathplanning.model.Node(var69, var77, 1);
    java.util.Collection var86 = var85.getNeighbors();
    int var87 = var85.getCost();
    boolean var88 = var58.equals((java.lang.Object)var87);
    demo.pathplanning.model.Node var89 = new demo.pathplanning.model.Node(var16, var30, var87);
    demo.pathplanning.model.Node var90 = var12.getNode(var30);
    java.lang.String var91 = var30.toString();
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      demo.pathplanning.model.Direction var92 = demo.pathplanning.model.Direction.valueOf(var91);
      fail("Expected exception of type java.lang.IllegalArgumentException");
    } catch (java.lang.IllegalArgumentException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var3 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var4 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var5 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var9 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var11 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var13 + "' != '" + "0,\n"+ "'", var13.equals("0,\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var17 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var18 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var22 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var32 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var33);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var34 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var39);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var40);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var42);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var43 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var59);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var60 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var61);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var66);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var67);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var69);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var70 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var86);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var87 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var88 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var90);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var91 + "' != '" + "(1,1)"+ "'", var91.equals("(1,1)"));

  }

  public void test380() throws Throwable {

    demo.pathplanning.model.CartesianGraph var2 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var3 = var2.getXSize();
    int var4 = var2.getYSize();
    demo.pathplanning.model.CartesianGraph var7 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.algorithms.AStar var8 = new demo.pathplanning.algorithms.AStar(var7);
    java.lang.String var9 = var7.toString();
    demo.pathplanning.model.CartesianGraph var12 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var15 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var16 = new demo.pathplanning.model.Location(1, 1);
    boolean var18 = var16.equals((java.lang.Object)0L);
    demo.pathplanning.model.Node var19 = var7.getNode(var16);
    demo.pathplanning.model.CartesianGraph var22 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var25 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var26 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var29 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var30 = var29.getXSize();
    demo.pathplanning.model.CartesianGraph var33 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var34 = new demo.pathplanning.model.CartesianGraph(var30, 1);
    demo.pathplanning.model.Location var35 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.Node var36 = new demo.pathplanning.model.Node(var2, var16, 1);
    demo.pathplanning.model.Location var37 = var36.getLocation();
    int var38 = var36.getCost();
    demo.pathplanning.model.CartesianGraph var41 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var42 = var41.getXSize();
    int var43 = var41.getYSize();
    int var44 = var41.getYSize();
    demo.pathplanning.model.CartesianGraph var47 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var48 = var47.getXSize();
    int var49 = var47.getYSize();
    int var50 = var47.getYSize();
    demo.pathplanning.model.CartesianGraph var51 = new demo.pathplanning.model.CartesianGraph(var44, var50);
    demo.pathplanning.model.CartesianGraph var54 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var57 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var58 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var59 = new demo.pathplanning.model.CartesianGraph(var44, 1);
    java.lang.String var60 = var59.toString();
    demo.pathplanning.model.CartesianGraph var63 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var66 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var67 = new demo.pathplanning.model.Location(1, 1);
    boolean var69 = var67.equals((java.lang.Object)0L);
    demo.pathplanning.model.Node var70 = var59.getNode(var67);
    demo.pathplanning.model.CartesianGraph var73 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var76 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var77 = new demo.pathplanning.model.Location(1, 1);
    boolean var79 = var77.equals((java.lang.Object)0L);
    int var80 = var77.getX();
    int var81 = var77.getX();
    demo.pathplanning.model.CartesianGraph var84 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var85 = var84.getXSize();
    demo.pathplanning.model.Node var86 = new demo.pathplanning.model.Node(var59, var77, var85);
    int var87 = var86.getCost();
    java.util.Collection var88 = var86.getNeighbors();
    int var89 = var86.getCost();
    demo.pathplanning.model.Location var90 = var86.getLocation();
    java.lang.String var91 = var86.toString();
    int var92 = var86.getCost();
    demo.pathplanning.model.CartesianGraph var93 = new demo.pathplanning.model.CartesianGraph(var38, var92);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var3 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var4 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var9 + "' != '" + "0,\n"+ "'", var9.equals("0,\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var18 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var19);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var30 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var37);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var38 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var42 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var43 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var44 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var48 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var49 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var50 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var60 + "' != '" + "0,\n"+ "'", var60.equals("0,\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var69 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var70);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var79 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var80 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var81 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var85 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var87 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var88);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var89 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var90);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var91 + "' != '" + "(1,1)=1"+ "'", var91.equals("(1,1)=1"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var92 == 1);

  }

  public void test381() throws Throwable {

    demo.pathplanning.model.CartesianGraph var2 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var3 = var2.getXSize();
    int var4 = var2.getYSize();
    int var5 = var2.getYSize();
    demo.pathplanning.model.CartesianGraph var8 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var9 = var8.getXSize();
    int var10 = var8.getYSize();
    int var11 = var8.getYSize();
    demo.pathplanning.model.CartesianGraph var12 = new demo.pathplanning.model.CartesianGraph(var5, var11);
    demo.pathplanning.model.CartesianGraph var15 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var18 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var19 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var20 = new demo.pathplanning.model.CartesianGraph(var5, 1);
    java.lang.String var21 = var20.toString();
    demo.pathplanning.model.CartesianGraph var24 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var27 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var28 = new demo.pathplanning.model.Location(1, 1);
    boolean var30 = var28.equals((java.lang.Object)0L);
    demo.pathplanning.model.Node var31 = var20.getNode(var28);
    demo.pathplanning.model.CartesianGraph var34 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var37 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var38 = new demo.pathplanning.model.Location(1, 1);
    boolean var40 = var38.equals((java.lang.Object)0L);
    int var41 = var38.getX();
    int var42 = var38.getX();
    demo.pathplanning.model.CartesianGraph var45 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var46 = var45.getXSize();
    demo.pathplanning.model.Node var47 = new demo.pathplanning.model.Node(var20, var38, var46);
    demo.pathplanning.algorithms.AStar var48 = new demo.pathplanning.algorithms.AStar(var20);
    demo.pathplanning.model.CartesianGraph var49 = var48.getGraph();
    demo.pathplanning.model.CartesianGraph var52 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.algorithms.AStar var53 = new demo.pathplanning.algorithms.AStar(var52);
    java.lang.String var54 = var52.toString();
    demo.pathplanning.model.CartesianGraph var57 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var60 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var61 = new demo.pathplanning.model.Location(1, 1);
    boolean var63 = var61.equals((java.lang.Object)0L);
    demo.pathplanning.model.Node var64 = var52.getNode(var61);
    int var65 = var61.getX();
    demo.pathplanning.model.CartesianGraph var68 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var69 = var68.getXSize();
    demo.pathplanning.model.CartesianGraph var72 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var73 = new demo.pathplanning.model.CartesianGraph(var69, 1);
    demo.pathplanning.model.CartesianGraph var76 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.algorithms.AStar var77 = new demo.pathplanning.algorithms.AStar(var76);
    demo.pathplanning.model.CartesianGraph var78 = var77.getGraph();
    demo.pathplanning.model.CartesianGraph var79 = var77.getGraph();
    demo.pathplanning.algorithms.PathPlanningContext var80 = new demo.pathplanning.algorithms.PathPlanningContext((demo.pathplanning.algorithms.PathPlanner)var77);
    demo.pathplanning.model.CartesianGraph var81 = var77.getGraph();
    int var82 = var81.getYSize();
    demo.pathplanning.model.CartesianGraph var83 = new demo.pathplanning.model.CartesianGraph(var69, var82);
    int var84 = var83.getXSize();
    demo.pathplanning.algorithms.AStar var85 = new demo.pathplanning.algorithms.AStar(var83);
    int var86 = var83.getYSize();
    demo.pathplanning.model.Node var87 = new demo.pathplanning.model.Node(var49, var61, var86);
    int var88 = var61.getY();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var3 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var4 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var5 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var9 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var11 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var21 + "' != '" + "0,\n"+ "'", var21.equals("0,\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var30 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var31);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var40 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var41 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var42 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var46 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var49);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var54 + "' != '" + "0,\n"+ "'", var54.equals("0,\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var63 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var64);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var65 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var69 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var78);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var79);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var81);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var82 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var84 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var86 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var88 == 1);

  }

  public void test382() throws Throwable {

    demo.pathplanning.model.CartesianGraph var2 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var5 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var6 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var9 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var10 = var9.getXSize();
    int var11 = var9.getYSize();
    int var12 = var9.getYSize();
    demo.pathplanning.model.CartesianGraph var15 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var16 = var15.getXSize();
    int var17 = var15.getYSize();
    int var18 = var15.getYSize();
    demo.pathplanning.model.CartesianGraph var19 = new demo.pathplanning.model.CartesianGraph(var12, var18);
    demo.pathplanning.model.CartesianGraph var20 = new demo.pathplanning.model.CartesianGraph(1, var12);
    int var21 = var20.getYSize();
    int var22 = var20.getYSize();
    int var23 = var20.getYSize();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var11 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var12 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var16 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var17 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var18 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var21 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var22 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var23 == 1);

  }

  public void test383() throws Throwable {

    demo.pathplanning.model.CartesianGraph var2 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var3 = var2.getXSize();
    demo.pathplanning.algorithms.AStar var4 = new demo.pathplanning.algorithms.AStar(var2);
    demo.pathplanning.model.CartesianGraph var7 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var10 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var11 = new demo.pathplanning.model.Location(1, 1);
    boolean var13 = var11.equals((java.lang.Object)0L);
    demo.pathplanning.model.Node var14 = var2.getNode(var11);
    demo.pathplanning.algorithms.AStar var15 = new demo.pathplanning.algorithms.AStar(var2);
    demo.pathplanning.algorithms.PathPlanningContext var16 = new demo.pathplanning.algorithms.PathPlanningContext((demo.pathplanning.algorithms.PathPlanner)var15);
    demo.pathplanning.algorithms.PathPlanningContext var17 = new demo.pathplanning.algorithms.PathPlanningContext((demo.pathplanning.algorithms.PathPlanner)var15);
    demo.pathplanning.model.CartesianGraph var18 = var15.getGraph();
    demo.pathplanning.model.CartesianGraph var21 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.algorithms.AStar var22 = new demo.pathplanning.algorithms.AStar(var21);
    demo.pathplanning.model.CartesianGraph var23 = var22.getGraph();
    demo.pathplanning.model.CartesianGraph var24 = var22.getGraph();
    demo.pathplanning.algorithms.PathPlanningContext var25 = new demo.pathplanning.algorithms.PathPlanningContext((demo.pathplanning.algorithms.PathPlanner)var22);
    demo.pathplanning.model.CartesianGraph var26 = var22.getGraph();
    int var27 = var26.getYSize();
    demo.pathplanning.model.CartesianGraph var30 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var33 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var34 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var37 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var40 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var41 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.Node var42 = new demo.pathplanning.model.Node(var26, var34, 1);
    int var43 = var34.getX();
    int var44 = var34.getX();
    demo.pathplanning.model.CartesianGraph var48 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.algorithms.AStar var49 = new demo.pathplanning.algorithms.AStar(var48);
    demo.pathplanning.model.CartesianGraph var50 = var49.getGraph();
    demo.pathplanning.model.CartesianGraph var51 = var49.getGraph();
    demo.pathplanning.algorithms.PathPlanningContext var52 = new demo.pathplanning.algorithms.PathPlanningContext((demo.pathplanning.algorithms.PathPlanner)var49);
    demo.pathplanning.model.CartesianGraph var53 = var49.getGraph();
    int var54 = var53.getYSize();
    demo.pathplanning.model.CartesianGraph var57 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var60 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var61 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var64 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var67 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var68 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.Node var69 = new demo.pathplanning.model.Node(var53, var61, 1);
    demo.pathplanning.model.CartesianGraph var72 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var75 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var76 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var79 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var80 = var79.getXSize();
    int var81 = var79.getYSize();
    int var82 = var79.getYSize();
    demo.pathplanning.model.CartesianGraph var85 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var86 = var85.getXSize();
    int var87 = var85.getYSize();
    int var88 = var85.getYSize();
    demo.pathplanning.model.CartesianGraph var89 = new demo.pathplanning.model.CartesianGraph(var82, var88);
    demo.pathplanning.model.CartesianGraph var90 = new demo.pathplanning.model.CartesianGraph(1, var82);
    demo.pathplanning.model.CartesianGraph var91 = new demo.pathplanning.model.CartesianGraph(1, var82);
    demo.pathplanning.model.CartesianGraph var92 = new demo.pathplanning.model.CartesianGraph(0, 1);
    demo.pathplanning.model.Node var93 = new demo.pathplanning.model.Node(var18, var34, 1);
    java.lang.String var94 = var93.toString();
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      demo.pathplanning.model.Direction var95 = demo.pathplanning.model.Direction.valueOf(var94);
      fail("Expected exception of type java.lang.IllegalArgumentException");
    } catch (java.lang.IllegalArgumentException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var3 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var13 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var14);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var18);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var23);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var24);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var26);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var27 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var43 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var44 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var50);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var51);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var53);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var54 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var80 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var81 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var82 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var86 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var87 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var88 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var94 + "' != '" + "(1,1)=1"+ "'", var94.equals("(1,1)=1"));

  }

  public void test384() throws Throwable {

    demo.pathplanning.model.CartesianGraph var2 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.algorithms.AStar var3 = new demo.pathplanning.algorithms.AStar(var2);
    demo.pathplanning.model.CartesianGraph var4 = var3.getGraph();
    demo.pathplanning.model.CartesianGraph var5 = var3.getGraph();
    demo.pathplanning.algorithms.PathPlanningContext var6 = new demo.pathplanning.algorithms.PathPlanningContext((demo.pathplanning.algorithms.PathPlanner)var3);
    demo.pathplanning.model.CartesianGraph var7 = var3.getGraph();
    int var8 = var7.getYSize();
    java.lang.String var9 = var7.toString();
    demo.pathplanning.model.CartesianGraph var12 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var15 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var16 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var19 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var20 = var19.getXSize();
    int var21 = var19.getYSize();
    int var22 = var19.getYSize();
    demo.pathplanning.model.CartesianGraph var25 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var26 = var25.getXSize();
    int var27 = var25.getYSize();
    int var28 = var25.getYSize();
    demo.pathplanning.model.CartesianGraph var29 = new demo.pathplanning.model.CartesianGraph(var22, var28);
    demo.pathplanning.model.CartesianGraph var30 = new demo.pathplanning.model.CartesianGraph(1, var22);
    int var31 = var30.getYSize();
    demo.pathplanning.model.CartesianGraph var34 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var35 = var34.getXSize();
    int var36 = var34.getYSize();
    int var37 = var34.getYSize();
    demo.pathplanning.model.CartesianGraph var40 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var41 = new demo.pathplanning.model.Location(var37, 1);
    java.lang.String var42 = var41.toString();
    demo.pathplanning.model.Node var43 = var30.getNode(var41);
    int var44 = var41.getX();
    demo.pathplanning.model.CartesianGraph var48 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var49 = var48.getXSize();
    int var50 = var48.getYSize();
    int var51 = var48.getYSize();
    demo.pathplanning.model.CartesianGraph var54 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var55 = var54.getXSize();
    int var56 = var54.getYSize();
    int var57 = var54.getYSize();
    demo.pathplanning.model.CartesianGraph var58 = new demo.pathplanning.model.CartesianGraph(var51, var57);
    demo.pathplanning.model.CartesianGraph var61 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var64 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var65 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var66 = new demo.pathplanning.model.CartesianGraph(var51, 1);
    demo.pathplanning.model.CartesianGraph var67 = new demo.pathplanning.model.CartesianGraph(0, 1);
    demo.pathplanning.model.Node var68 = new demo.pathplanning.model.Node(var7, var41, 1);
    java.lang.String var69 = var7.toString();
    int var70 = var7.getXSize();
    int var71 = var7.getXSize();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var8 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var9 + "' != '" + "0,\n"+ "'", var9.equals("0,\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var20 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var21 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var22 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var26 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var27 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var28 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var31 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var35 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var36 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var37 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var42 + "' != '" + "(1,1)"+ "'", var42.equals("(1,1)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var43);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var44 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var49 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var50 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var51 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var55 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var56 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var57 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var69 + "' != '" + "0,\n"+ "'", var69.equals("0,\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var70 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var71 == 1);

  }

  public void test385() throws Throwable {

    demo.pathplanning.model.CartesianGraph var2 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var5 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var6 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var9 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var10 = var9.getXSize();
    int var11 = var9.getYSize();
    int var12 = var9.getYSize();
    demo.pathplanning.model.CartesianGraph var15 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var16 = var15.getXSize();
    int var17 = var15.getYSize();
    int var18 = var15.getYSize();
    demo.pathplanning.model.CartesianGraph var19 = new demo.pathplanning.model.CartesianGraph(var12, var18);
    demo.pathplanning.model.CartesianGraph var20 = new demo.pathplanning.model.CartesianGraph(1, var12);
    demo.pathplanning.model.CartesianGraph var23 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var24 = var23.getXSize();
    int var25 = var23.getYSize();
    demo.pathplanning.model.CartesianGraph var28 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var29 = var28.getXSize();
    int var30 = var28.getYSize();
    demo.pathplanning.model.CartesianGraph var33 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.algorithms.AStar var34 = new demo.pathplanning.algorithms.AStar(var33);
    java.lang.String var35 = var33.toString();
    demo.pathplanning.model.CartesianGraph var38 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var41 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var42 = new demo.pathplanning.model.Location(1, 1);
    boolean var44 = var42.equals((java.lang.Object)0L);
    demo.pathplanning.model.Node var45 = var33.getNode(var42);
    demo.pathplanning.model.CartesianGraph var48 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var51 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var52 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var55 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var56 = var55.getXSize();
    demo.pathplanning.model.CartesianGraph var59 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var60 = new demo.pathplanning.model.CartesianGraph(var56, 1);
    demo.pathplanning.model.Location var61 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.Node var62 = new demo.pathplanning.model.Node(var28, var42, 1);
    demo.pathplanning.model.CartesianGraph var63 = new demo.pathplanning.model.CartesianGraph(var25, 1);
    demo.pathplanning.model.CartesianGraph var66 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.algorithms.AStar var67 = new demo.pathplanning.algorithms.AStar(var66);
    demo.pathplanning.model.CartesianGraph var68 = var67.getGraph();
    demo.pathplanning.model.CartesianGraph var69 = var67.getGraph();
    demo.pathplanning.algorithms.PathPlanningContext var70 = new demo.pathplanning.algorithms.PathPlanningContext((demo.pathplanning.algorithms.PathPlanner)var67);
    demo.pathplanning.model.CartesianGraph var71 = var67.getGraph();
    int var72 = var71.getYSize();
    demo.pathplanning.model.CartesianGraph var75 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var78 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var79 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var82 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var85 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var86 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.Node var87 = new demo.pathplanning.model.Node(var71, var79, 1);
    java.util.Collection var88 = var87.getNeighbors();
    int var89 = var87.getCost();
    demo.pathplanning.model.Location var90 = new demo.pathplanning.model.Location(1, var89);
    demo.pathplanning.model.Location var91 = new demo.pathplanning.model.Location(var12, var89);
    int var92 = var91.getY();
    java.lang.String var93 = var91.toString();
    int var94 = var91.getX();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var11 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var12 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var16 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var17 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var18 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var24 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var25 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var29 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var30 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var35 + "' != '" + "0,\n"+ "'", var35.equals("0,\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var44 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var45);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var56 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var68);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var69);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var71);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var72 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var88);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var89 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var92 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var93 + "' != '" + "(1,1)"+ "'", var93.equals("(1,1)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var94 == 1);

  }

  public void test386() throws Throwable {

    demo.pathplanning.model.CartesianGraph var2 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var3 = var2.getXSize();
    demo.pathplanning.algorithms.AStar var4 = new demo.pathplanning.algorithms.AStar(var2);
    demo.pathplanning.model.CartesianGraph var7 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var10 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var11 = new demo.pathplanning.model.Location(1, 1);
    boolean var13 = var11.equals((java.lang.Object)0L);
    demo.pathplanning.model.Node var14 = var2.getNode(var11);
    java.lang.String var15 = var2.toString();
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      demo.pathplanning.model.Direction var16 = demo.pathplanning.model.Direction.valueOf(var15);
      fail("Expected exception of type java.lang.IllegalArgumentException");
    } catch (java.lang.IllegalArgumentException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var3 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var13 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var14);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var15 + "' != '" + "0,\n"+ "'", var15.equals("0,\n"));

  }

  public void test387() throws Throwable {

    demo.pathplanning.model.CartesianGraph var2 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.algorithms.AStar var3 = new demo.pathplanning.algorithms.AStar(var2);
    demo.pathplanning.model.CartesianGraph var4 = var3.getGraph();
    demo.pathplanning.model.CartesianGraph var5 = var3.getGraph();
    demo.pathplanning.algorithms.PathPlanningContext var6 = new demo.pathplanning.algorithms.PathPlanningContext((demo.pathplanning.algorithms.PathPlanner)var3);
    demo.pathplanning.model.CartesianGraph var7 = var3.getGraph();
    int var8 = var7.getYSize();
    demo.pathplanning.model.CartesianGraph var11 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var14 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var15 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var18 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var21 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var22 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.Node var23 = new demo.pathplanning.model.Node(var7, var15, 1);
    int var24 = var23.getCost();
    int var25 = var23.getCost();
    int var26 = var23.getCost();
    java.util.Collection var27 = var23.getNeighbors();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var8 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var24 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var25 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var26 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var27);

  }

  public void test388() throws Throwable {

    demo.pathplanning.model.CartesianGraph var2 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var5 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var6 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var9 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var10 = var9.getXSize();
    int var11 = var9.getYSize();
    int var12 = var9.getYSize();
    demo.pathplanning.model.CartesianGraph var15 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var16 = var15.getXSize();
    int var17 = var15.getYSize();
    int var18 = var15.getYSize();
    demo.pathplanning.model.CartesianGraph var19 = new demo.pathplanning.model.CartesianGraph(var12, var18);
    demo.pathplanning.model.CartesianGraph var20 = new demo.pathplanning.model.CartesianGraph(1, var12);
    java.lang.String var21 = var20.toString();
    java.lang.String var22 = var20.toString();
    int var23 = var20.getYSize();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var11 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var12 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var16 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var17 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var18 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var21 + "' != '" + "0,\n"+ "'", var21.equals("0,\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var22 + "' != '" + "0,\n"+ "'", var22.equals("0,\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var23 == 1);

  }

  public void test389() throws Throwable {

    demo.pathplanning.model.CartesianGraph var2 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var3 = var2.getXSize();
    int var4 = var2.getYSize();
    int var5 = var2.getYSize();
    demo.pathplanning.model.CartesianGraph var8 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var9 = var8.getXSize();
    int var10 = var8.getYSize();
    int var11 = var8.getYSize();
    demo.pathplanning.model.CartesianGraph var12 = new demo.pathplanning.model.CartesianGraph(var5, var11);
    demo.pathplanning.model.CartesianGraph var15 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var18 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var19 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var20 = new demo.pathplanning.model.CartesianGraph(var5, 1);
    int var21 = var20.getXSize();
    demo.pathplanning.model.CartesianGraph var24 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var27 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var28 = new demo.pathplanning.model.Location(1, 1);
    int var29 = var28.getY();
    demo.pathplanning.model.CartesianGraph var32 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var33 = var32.getXSize();
    int var34 = var32.getYSize();
    demo.pathplanning.model.CartesianGraph var37 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var38 = var37.getXSize();
    int var39 = var37.getYSize();
    demo.pathplanning.model.CartesianGraph var42 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.algorithms.AStar var43 = new demo.pathplanning.algorithms.AStar(var42);
    java.lang.String var44 = var42.toString();
    demo.pathplanning.model.CartesianGraph var47 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var50 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var51 = new demo.pathplanning.model.Location(1, 1);
    boolean var53 = var51.equals((java.lang.Object)0L);
    demo.pathplanning.model.Node var54 = var42.getNode(var51);
    demo.pathplanning.model.CartesianGraph var57 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var60 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var61 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var64 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var65 = var64.getXSize();
    demo.pathplanning.model.CartesianGraph var68 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var69 = new demo.pathplanning.model.CartesianGraph(var65, 1);
    demo.pathplanning.model.Location var70 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.Node var71 = new demo.pathplanning.model.Node(var37, var51, 1);
    demo.pathplanning.model.CartesianGraph var72 = new demo.pathplanning.model.CartesianGraph(var34, 1);
    demo.pathplanning.model.Node var73 = new demo.pathplanning.model.Node(var20, var28, 1);
    demo.pathplanning.model.CartesianGraph var76 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var79 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var80 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.Location var82 = new demo.pathplanning.model.Location(1, (-1));
    demo.pathplanning.model.CartesianGraph var83 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var84 = var83.getYSize();
    java.lang.String var85 = var83.toString();
    demo.pathplanning.algorithms.AStar var86 = new demo.pathplanning.algorithms.AStar(var83);
    demo.pathplanning.algorithms.AStar var87 = new demo.pathplanning.algorithms.AStar(var83);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var3 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var4 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var5 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var9 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var11 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var21 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var29 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var33 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var34 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var38 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var39 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var44 + "' != '" + "0,\n"+ "'", var44.equals("0,\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var53 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var54);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var65 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var84 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var85 + "' != '" + "0,\n"+ "'", var85.equals("0,\n"));

  }

  public void test390() throws Throwable {

    demo.pathplanning.model.CartesianGraph var2 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.algorithms.AStar var3 = new demo.pathplanning.algorithms.AStar(var2);
    demo.pathplanning.model.CartesianGraph var4 = var3.getGraph();
    demo.pathplanning.model.CartesianGraph var5 = var3.getGraph();
    demo.pathplanning.algorithms.PathPlanningContext var6 = new demo.pathplanning.algorithms.PathPlanningContext((demo.pathplanning.algorithms.PathPlanner)var3);
    demo.pathplanning.model.CartesianGraph var7 = var3.getGraph();
    int var8 = var7.getYSize();
    demo.pathplanning.model.CartesianGraph var11 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var14 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var15 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var18 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var21 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var22 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.Node var23 = new demo.pathplanning.model.Node(var7, var15, 1);
    java.util.Collection var24 = var23.getNeighbors();
    int var25 = var23.getCost();
    java.lang.String var26 = var23.toString();
    java.lang.String var27 = var23.toString();
    java.util.Collection var28 = var23.getNeighbors();
    int var29 = var23.getCost();
    java.lang.String var30 = var23.toString();
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      demo.pathplanning.model.Direction var31 = demo.pathplanning.model.Direction.valueOf(var30);
      fail("Expected exception of type java.lang.IllegalArgumentException");
    } catch (java.lang.IllegalArgumentException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var8 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var24);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var25 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var26 + "' != '" + "(1,1)=1"+ "'", var26.equals("(1,1)=1"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var27 + "' != '" + "(1,1)=1"+ "'", var27.equals("(1,1)=1"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var28);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var29 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var30 + "' != '" + "(1,1)=1"+ "'", var30.equals("(1,1)=1"));

  }

  public void test391() throws Throwable {

    demo.pathplanning.model.CartesianGraph var2 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var5 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var6 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var9 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var10 = var9.getXSize();
    int var11 = var9.getYSize();
    int var12 = var9.getYSize();
    demo.pathplanning.model.CartesianGraph var15 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var16 = var15.getXSize();
    int var17 = var15.getYSize();
    int var18 = var15.getYSize();
    demo.pathplanning.model.CartesianGraph var19 = new demo.pathplanning.model.CartesianGraph(var12, var18);
    demo.pathplanning.model.CartesianGraph var20 = new demo.pathplanning.model.CartesianGraph(1, var12);
    int var21 = var20.getYSize();
    demo.pathplanning.model.CartesianGraph var24 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.algorithms.AStar var25 = new demo.pathplanning.algorithms.AStar(var24);
    java.lang.String var26 = var24.toString();
    demo.pathplanning.model.CartesianGraph var29 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var32 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var33 = new demo.pathplanning.model.Location(1, 1);
    boolean var35 = var33.equals((java.lang.Object)0L);
    demo.pathplanning.model.Node var36 = var24.getNode(var33);
    demo.pathplanning.model.CartesianGraph var39 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var40 = var39.getXSize();
    int var41 = var39.getYSize();
    int var42 = var39.getYSize();
    demo.pathplanning.model.CartesianGraph var45 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var46 = var45.getXSize();
    int var47 = var45.getYSize();
    int var48 = var45.getYSize();
    demo.pathplanning.model.CartesianGraph var49 = new demo.pathplanning.model.CartesianGraph(var42, var48);
    demo.pathplanning.model.CartesianGraph var52 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var55 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var56 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var57 = new demo.pathplanning.model.CartesianGraph(var42, 1);
    demo.pathplanning.model.Node var58 = new demo.pathplanning.model.Node(var20, var33, 1);
    demo.pathplanning.model.Location var59 = var58.getLocation();
    demo.pathplanning.model.CartesianGraph var62 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var65 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var66 = new demo.pathplanning.model.Location(1, 1);
    int var67 = var66.getX();
    boolean var68 = var58.equals((java.lang.Object)var66);
    demo.pathplanning.model.Location var69 = var58.getLocation();
    demo.pathplanning.model.CartesianGraph var72 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.algorithms.AStar var73 = new demo.pathplanning.algorithms.AStar(var72);
    demo.pathplanning.model.CartesianGraph var74 = var73.getGraph();
    demo.pathplanning.model.CartesianGraph var75 = var73.getGraph();
    demo.pathplanning.algorithms.PathPlanningContext var76 = new demo.pathplanning.algorithms.PathPlanningContext((demo.pathplanning.algorithms.PathPlanner)var73);
    demo.pathplanning.model.CartesianGraph var77 = var73.getGraph();
    int var78 = var77.getYSize();
    demo.pathplanning.model.CartesianGraph var81 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var84 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var85 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var88 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var91 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var92 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.Node var93 = new demo.pathplanning.model.Node(var77, var85, 1);
    int var94 = var93.getCost();
    java.util.Collection var95 = var93.getNeighbors();
    java.util.Collection var96 = var93.getNeighbors();
    boolean var97 = var69.equals((java.lang.Object)var93);
    int var98 = var69.getX();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var11 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var12 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var16 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var17 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var18 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var21 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var26 + "' != '" + "0,\n"+ "'", var26.equals("0,\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var35 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var36);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var40 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var41 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var42 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var46 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var47 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var48 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var59);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var67 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var68 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var69);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var74);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var75);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var77);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var78 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var94 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var95);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var96);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var97 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var98 == 1);

  }

  public void test392() throws Throwable {

    demo.pathplanning.model.CartesianGraph var2 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var3 = var2.getXSize();
    int var4 = var2.getYSize();
    int var5 = var2.getYSize();
    demo.pathplanning.model.CartesianGraph var8 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var9 = var8.getXSize();
    int var10 = var8.getYSize();
    int var11 = var8.getYSize();
    demo.pathplanning.model.CartesianGraph var12 = new demo.pathplanning.model.CartesianGraph(var5, var11);
    demo.pathplanning.model.CartesianGraph var15 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var18 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var19 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var20 = new demo.pathplanning.model.CartesianGraph(var5, 1);
    java.lang.String var21 = var20.toString();
    demo.pathplanning.model.CartesianGraph var24 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var27 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var28 = new demo.pathplanning.model.Location(1, 1);
    boolean var30 = var28.equals((java.lang.Object)0L);
    demo.pathplanning.model.Node var31 = var20.getNode(var28);
    demo.pathplanning.model.CartesianGraph var34 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var37 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var38 = new demo.pathplanning.model.Location(1, 1);
    boolean var40 = var38.equals((java.lang.Object)0L);
    int var41 = var38.getX();
    int var42 = var38.getX();
    demo.pathplanning.model.CartesianGraph var45 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var46 = var45.getXSize();
    demo.pathplanning.model.Node var47 = new demo.pathplanning.model.Node(var20, var38, var46);
    demo.pathplanning.algorithms.AStar var48 = new demo.pathplanning.algorithms.AStar(var20);
    demo.pathplanning.model.CartesianGraph var49 = var48.getGraph();
    int var50 = var49.getXSize();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var3 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var4 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var5 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var9 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var11 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var21 + "' != '" + "0,\n"+ "'", var21.equals("0,\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var30 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var31);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var40 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var41 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var42 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var46 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var49);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var50 == 1);

  }

  public void test393() throws Throwable {

    demo.pathplanning.model.CartesianGraph var2 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var3 = var2.getXSize();
    int var4 = var2.getYSize();
    int var5 = var2.getYSize();
    demo.pathplanning.model.CartesianGraph var8 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var9 = var8.getXSize();
    int var10 = var8.getYSize();
    int var11 = var8.getYSize();
    demo.pathplanning.model.CartesianGraph var12 = new demo.pathplanning.model.CartesianGraph(var5, var11);
    demo.pathplanning.model.CartesianGraph var15 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var18 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var19 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var20 = new demo.pathplanning.model.CartesianGraph(var5, 1);
    java.lang.String var21 = var20.toString();
    demo.pathplanning.model.CartesianGraph var24 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var27 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var28 = new demo.pathplanning.model.Location(1, 1);
    boolean var30 = var28.equals((java.lang.Object)0L);
    demo.pathplanning.model.Node var31 = var20.getNode(var28);
    demo.pathplanning.model.CartesianGraph var34 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var37 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var38 = new demo.pathplanning.model.Location(1, 1);
    boolean var40 = var38.equals((java.lang.Object)0L);
    int var41 = var38.getX();
    int var42 = var38.getX();
    demo.pathplanning.model.CartesianGraph var45 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var46 = var45.getXSize();
    demo.pathplanning.model.Node var47 = new demo.pathplanning.model.Node(var20, var38, var46);
    demo.pathplanning.algorithms.AStar var48 = new demo.pathplanning.algorithms.AStar(var20);
    java.lang.String var49 = var20.toString();
    int var50 = var20.getXSize();
    int var51 = var20.getXSize();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var3 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var4 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var5 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var9 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var11 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var21 + "' != '" + "0,\n"+ "'", var21.equals("0,\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var30 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var31);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var40 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var41 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var42 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var46 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var49 + "' != '" + "0,\n"+ "'", var49.equals("0,\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var50 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var51 == 1);

  }

  public void test394() throws Throwable {

    demo.pathplanning.model.CartesianGraph var2 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var5 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var6 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var9 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var10 = var9.getXSize();
    int var11 = var9.getYSize();
    int var12 = var9.getYSize();
    demo.pathplanning.model.CartesianGraph var15 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var16 = var15.getXSize();
    int var17 = var15.getYSize();
    int var18 = var15.getYSize();
    demo.pathplanning.model.CartesianGraph var19 = new demo.pathplanning.model.CartesianGraph(var12, var18);
    demo.pathplanning.model.CartesianGraph var20 = new demo.pathplanning.model.CartesianGraph(1, var12);
    demo.pathplanning.model.CartesianGraph var23 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var24 = var23.getXSize();
    demo.pathplanning.algorithms.AStar var25 = new demo.pathplanning.algorithms.AStar(var23);
    demo.pathplanning.model.CartesianGraph var28 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var31 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var32 = new demo.pathplanning.model.Location(1, 1);
    boolean var34 = var32.equals((java.lang.Object)0L);
    demo.pathplanning.model.Node var35 = var23.getNode(var32);
    int var36 = var23.getYSize();
    demo.pathplanning.model.CartesianGraph var37 = new demo.pathplanning.model.CartesianGraph(var12, var36);
    java.lang.String var38 = var37.toString();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var11 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var12 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var16 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var17 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var18 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var24 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var34 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var35);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var36 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var38 + "' != '" + "0,\n"+ "'", var38.equals("0,\n"));

  }

  public void test395() throws Throwable {

    demo.pathplanning.model.CartesianGraph var2 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var3 = var2.getXSize();
    demo.pathplanning.model.CartesianGraph var6 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var7 = new demo.pathplanning.model.CartesianGraph(var3, 1);
    demo.pathplanning.algorithms.AStar var8 = new demo.pathplanning.algorithms.AStar(var7);
    demo.pathplanning.algorithms.PathPlanningContext var9 = new demo.pathplanning.algorithms.PathPlanningContext((demo.pathplanning.algorithms.PathPlanner)var8);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var3 == 1);

  }

  public void test396() throws Throwable {

    demo.pathplanning.model.CartesianGraph var2 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var3 = var2.getXSize();
    demo.pathplanning.algorithms.AStar var4 = new demo.pathplanning.algorithms.AStar(var2);
    demo.pathplanning.model.CartesianGraph var7 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var8 = var7.getXSize();
    int var9 = var7.getYSize();
    int var10 = var7.getYSize();
    demo.pathplanning.model.CartesianGraph var13 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var14 = new demo.pathplanning.model.Location(var10, 1);
    java.lang.String var15 = var14.toString();
    demo.pathplanning.model.Node var16 = var2.getNode(var14);
    int var17 = var2.getYSize();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var3 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var8 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var9 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var15 + "' != '" + "(1,1)"+ "'", var15.equals("(1,1)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var16);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var17 == 1);

  }

  public void test397() throws Throwable {

    demo.pathplanning.model.CartesianGraph var2 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var3 = var2.getXSize();
    int var4 = var2.getYSize();
    demo.pathplanning.model.CartesianGraph var7 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.algorithms.AStar var8 = new demo.pathplanning.algorithms.AStar(var7);
    java.lang.String var9 = var7.toString();
    demo.pathplanning.model.CartesianGraph var12 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var15 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var16 = new demo.pathplanning.model.Location(1, 1);
    boolean var18 = var16.equals((java.lang.Object)0L);
    demo.pathplanning.model.Node var19 = var7.getNode(var16);
    demo.pathplanning.model.CartesianGraph var22 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var25 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var26 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var29 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var30 = var29.getXSize();
    demo.pathplanning.model.CartesianGraph var33 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var34 = new demo.pathplanning.model.CartesianGraph(var30, 1);
    demo.pathplanning.model.Location var35 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.Node var36 = new demo.pathplanning.model.Node(var2, var16, 1);
    demo.pathplanning.model.CartesianGraph var39 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var40 = var39.getXSize();
    demo.pathplanning.algorithms.AStar var41 = new demo.pathplanning.algorithms.AStar(var39);
    demo.pathplanning.model.CartesianGraph var44 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var47 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var48 = new demo.pathplanning.model.Location(1, 1);
    boolean var50 = var48.equals((java.lang.Object)0L);
    demo.pathplanning.model.Node var51 = var39.getNode(var48);
    int var52 = var39.getYSize();
    demo.pathplanning.model.CartesianGraph var55 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var56 = var55.getXSize();
    int var57 = var55.getYSize();
    int var58 = var55.getYSize();
    demo.pathplanning.model.CartesianGraph var61 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var62 = new demo.pathplanning.model.Location(var58, 1);
    java.lang.String var63 = var62.toString();
    demo.pathplanning.model.CartesianGraph var66 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var69 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var70 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var73 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var74 = var73.getXSize();
    int var75 = var73.getYSize();
    int var76 = var73.getYSize();
    demo.pathplanning.model.CartesianGraph var79 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var80 = var79.getXSize();
    int var81 = var79.getYSize();
    int var82 = var79.getYSize();
    demo.pathplanning.model.CartesianGraph var83 = new demo.pathplanning.model.CartesianGraph(var76, var82);
    demo.pathplanning.model.CartesianGraph var84 = new demo.pathplanning.model.CartesianGraph(1, var76);
    demo.pathplanning.model.Node var85 = new demo.pathplanning.model.Node(var39, var62, var76);
    java.util.Collection var86 = var85.getNeighbors();
    demo.pathplanning.model.Location var87 = var85.getLocation();
    demo.pathplanning.model.Node var88 = var2.getNode(var87);
    int var89 = var87.getY();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var3 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var4 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var9 + "' != '" + "0,\n"+ "'", var9.equals("0,\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var18 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var19);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var30 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var40 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var50 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var51);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var52 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var56 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var57 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var58 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var63 + "' != '" + "(1,1)"+ "'", var63.equals("(1,1)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var74 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var75 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var76 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var80 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var81 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var82 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var86);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var87);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var88);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var89 == 1);

  }

  public void test398() throws Throwable {

    demo.pathplanning.model.CartesianGraph var2 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var3 = var2.getXSize();
    int var4 = var2.getYSize();
    int var5 = var2.getYSize();
    demo.pathplanning.model.CartesianGraph var8 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var9 = var8.getXSize();
    int var10 = var8.getYSize();
    int var11 = var8.getYSize();
    demo.pathplanning.model.CartesianGraph var14 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var15 = var14.getXSize();
    int var16 = var14.getYSize();
    int var17 = var14.getYSize();
    demo.pathplanning.model.CartesianGraph var18 = new demo.pathplanning.model.CartesianGraph(var11, var17);
    demo.pathplanning.model.CartesianGraph var21 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var24 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var25 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var26 = new demo.pathplanning.model.CartesianGraph(var11, 1);
    demo.pathplanning.model.CartesianGraph var27 = new demo.pathplanning.model.CartesianGraph(var5, var11);
    demo.pathplanning.algorithms.AStar var28 = new demo.pathplanning.algorithms.AStar(var27);
    demo.pathplanning.algorithms.AStar var29 = new demo.pathplanning.algorithms.AStar(var27);
    java.lang.String var30 = var27.toString();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var3 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var4 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var5 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var9 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var11 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var15 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var16 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var17 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var30 + "' != '" + "0,\n"+ "'", var30.equals("0,\n"));

  }

  public void test399() throws Throwable {

    demo.pathplanning.model.CartesianGraph var2 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var3 = var2.getXSize();
    int var4 = var2.getYSize();
    int var5 = var2.getYSize();
    demo.pathplanning.model.CartesianGraph var8 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var9 = var8.getXSize();
    int var10 = var8.getYSize();
    int var11 = var8.getYSize();
    demo.pathplanning.model.CartesianGraph var12 = new demo.pathplanning.model.CartesianGraph(var5, var11);
    demo.pathplanning.model.CartesianGraph var15 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var18 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var19 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var20 = new demo.pathplanning.model.CartesianGraph(var5, 1);
    java.lang.String var21 = var20.toString();
    demo.pathplanning.model.CartesianGraph var24 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var27 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var28 = new demo.pathplanning.model.Location(1, 1);
    boolean var30 = var28.equals((java.lang.Object)0L);
    demo.pathplanning.model.Node var31 = var20.getNode(var28);
    demo.pathplanning.model.CartesianGraph var34 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var37 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var38 = new demo.pathplanning.model.Location(1, 1);
    boolean var40 = var38.equals((java.lang.Object)0L);
    int var41 = var38.getX();
    int var42 = var38.getX();
    demo.pathplanning.model.CartesianGraph var45 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var46 = var45.getXSize();
    demo.pathplanning.model.Node var47 = new demo.pathplanning.model.Node(var20, var38, var46);
    demo.pathplanning.model.CartesianGraph var50 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var51 = var50.getXSize();
    demo.pathplanning.model.CartesianGraph var54 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var55 = new demo.pathplanning.model.CartesianGraph(var51, 1);
    demo.pathplanning.model.CartesianGraph var58 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.algorithms.AStar var59 = new demo.pathplanning.algorithms.AStar(var58);
    demo.pathplanning.model.CartesianGraph var60 = var59.getGraph();
    demo.pathplanning.model.CartesianGraph var61 = var59.getGraph();
    demo.pathplanning.algorithms.PathPlanningContext var62 = new demo.pathplanning.algorithms.PathPlanningContext((demo.pathplanning.algorithms.PathPlanner)var59);
    demo.pathplanning.model.CartesianGraph var63 = var59.getGraph();
    int var64 = var63.getYSize();
    demo.pathplanning.model.CartesianGraph var65 = new demo.pathplanning.model.CartesianGraph(var51, var64);
    int var66 = var65.getXSize();
    boolean var67 = var47.equals((java.lang.Object)var66);
    int var68 = var47.getCost();
    java.lang.String var69 = var47.toString();
    int var70 = var47.getCost();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var3 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var4 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var5 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var9 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var11 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var21 + "' != '" + "0,\n"+ "'", var21.equals("0,\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var30 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var31);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var40 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var41 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var42 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var46 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var51 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var60);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var61);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var63);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var64 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var66 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var67 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var68 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var69 + "' != '" + "(1,1)=1"+ "'", var69.equals("(1,1)=1"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var70 == 1);

  }

  public void test400() throws Throwable {

    demo.pathplanning.model.CartesianGraph var2 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var5 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var6 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var9 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var10 = var9.getXSize();
    int var11 = var9.getYSize();
    int var12 = var9.getYSize();
    demo.pathplanning.model.CartesianGraph var15 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var16 = var15.getXSize();
    int var17 = var15.getYSize();
    int var18 = var15.getYSize();
    demo.pathplanning.model.CartesianGraph var19 = new demo.pathplanning.model.CartesianGraph(var12, var18);
    demo.pathplanning.model.CartesianGraph var20 = new demo.pathplanning.model.CartesianGraph(1, var12);
    int var21 = var20.getYSize();
    demo.pathplanning.model.CartesianGraph var24 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var25 = var24.getXSize();
    int var26 = var24.getYSize();
    int var27 = var24.getYSize();
    demo.pathplanning.model.CartesianGraph var30 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var31 = new demo.pathplanning.model.Location(var27, 1);
    java.lang.String var32 = var31.toString();
    demo.pathplanning.model.Node var33 = var20.getNode(var31);
    int var34 = var31.getY();
    java.lang.String var35 = var31.toString();
    demo.pathplanning.model.CartesianGraph var38 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var39 = var38.getXSize();
    demo.pathplanning.algorithms.AStar var40 = new demo.pathplanning.algorithms.AStar(var38);
    demo.pathplanning.model.CartesianGraph var41 = var40.getGraph();
    boolean var42 = var31.equals((java.lang.Object)var40);
    demo.pathplanning.model.CartesianGraph var43 = var40.getGraph();
    java.lang.String var44 = var43.toString();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var11 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var12 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var16 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var17 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var18 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var21 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var25 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var26 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var27 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var32 + "' != '" + "(1,1)"+ "'", var32.equals("(1,1)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var33);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var34 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var35 + "' != '" + "(1,1)"+ "'", var35.equals("(1,1)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var39 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var41);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var42 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var43);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var44 + "' != '" + "0,\n"+ "'", var44.equals("0,\n"));

  }

  public void test401() throws Throwable {

    demo.pathplanning.model.CartesianGraph var2 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var3 = var2.getXSize();
    int var4 = var2.getYSize();
    int var5 = var2.getYSize();
    demo.pathplanning.model.CartesianGraph var8 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var9 = var8.getXSize();
    int var10 = var8.getYSize();
    int var11 = var8.getYSize();
    demo.pathplanning.model.CartesianGraph var12 = new demo.pathplanning.model.CartesianGraph(var5, var11);
    demo.pathplanning.model.CartesianGraph var15 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var18 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var19 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var20 = new demo.pathplanning.model.CartesianGraph(var5, 1);
    java.lang.String var21 = var20.toString();
    demo.pathplanning.model.CartesianGraph var24 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var27 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var28 = new demo.pathplanning.model.Location(1, 1);
    boolean var30 = var28.equals((java.lang.Object)0L);
    demo.pathplanning.model.Node var31 = var20.getNode(var28);
    demo.pathplanning.model.CartesianGraph var34 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var37 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var38 = new demo.pathplanning.model.Location(1, 1);
    boolean var40 = var38.equals((java.lang.Object)0L);
    int var41 = var38.getX();
    int var42 = var38.getX();
    demo.pathplanning.model.CartesianGraph var45 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var46 = var45.getXSize();
    demo.pathplanning.model.Node var47 = new demo.pathplanning.model.Node(var20, var38, var46);
    int var48 = var47.getCost();
    java.util.Collection var49 = var47.getNeighbors();
    java.util.Collection var50 = var47.getNeighbors();
    java.lang.String var51 = var47.toString();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var3 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var4 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var5 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var9 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var11 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var21 + "' != '" + "0,\n"+ "'", var21.equals("0,\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var30 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var31);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var40 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var41 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var42 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var46 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var48 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var49);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var50);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var51 + "' != '" + "(1,1)=1"+ "'", var51.equals("(1,1)=1"));

  }

  public void test402() throws Throwable {

    demo.pathplanning.model.CartesianGraph var2 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var3 = var2.getXSize();
    int var4 = var2.getYSize();
    int var5 = var2.getYSize();
    demo.pathplanning.model.CartesianGraph var8 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var9 = var8.getXSize();
    int var10 = var8.getYSize();
    int var11 = var8.getYSize();
    demo.pathplanning.model.CartesianGraph var12 = new demo.pathplanning.model.CartesianGraph(var5, var11);
    demo.pathplanning.model.CartesianGraph var15 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var16 = var15.getXSize();
    int var17 = var15.getYSize();
    demo.pathplanning.model.CartesianGraph var20 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.algorithms.AStar var21 = new demo.pathplanning.algorithms.AStar(var20);
    java.lang.String var22 = var20.toString();
    demo.pathplanning.model.CartesianGraph var25 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var28 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var29 = new demo.pathplanning.model.Location(1, 1);
    boolean var31 = var29.equals((java.lang.Object)0L);
    demo.pathplanning.model.Node var32 = var20.getNode(var29);
    demo.pathplanning.model.CartesianGraph var35 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var38 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var39 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var42 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var43 = var42.getXSize();
    demo.pathplanning.model.CartesianGraph var46 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var47 = new demo.pathplanning.model.CartesianGraph(var43, 1);
    demo.pathplanning.model.Location var48 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.Node var49 = new demo.pathplanning.model.Node(var15, var29, 1);
    demo.pathplanning.model.CartesianGraph var52 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var53 = var52.getXSize();
    demo.pathplanning.algorithms.AStar var54 = new demo.pathplanning.algorithms.AStar(var52);
    demo.pathplanning.model.CartesianGraph var57 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var60 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var61 = new demo.pathplanning.model.Location(1, 1);
    boolean var63 = var61.equals((java.lang.Object)0L);
    demo.pathplanning.model.Node var64 = var52.getNode(var61);
    int var65 = var52.getXSize();
    boolean var66 = var29.equals((java.lang.Object)var52);
    int var67 = var52.getXSize();
    int var68 = var52.getYSize();
    demo.pathplanning.model.Location var69 = new demo.pathplanning.model.Location(var5, var68);
    demo.pathplanning.model.CartesianGraph var72 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var75 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var76 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var79 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var80 = var79.getXSize();
    demo.pathplanning.model.CartesianGraph var83 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var84 = new demo.pathplanning.model.CartesianGraph(var80, 1);
    demo.pathplanning.model.Location var85 = new demo.pathplanning.model.Location(1, 1);
    int var86 = var85.getX();
    int var87 = var85.getY();
    demo.pathplanning.model.CartesianGraph var90 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.algorithms.AStar var91 = new demo.pathplanning.algorithms.AStar(var90);
    boolean var92 = var85.equals((java.lang.Object)var91);
    int var93 = var85.getX();
    demo.pathplanning.model.Location var94 = new demo.pathplanning.model.Location(var68, var93);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var3 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var4 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var5 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var9 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var11 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var16 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var17 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var22 + "' != '" + "0,\n"+ "'", var22.equals("0,\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var31 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var32);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var43 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var53 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var63 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var64);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var65 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var66 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var67 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var68 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var80 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var86 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var87 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var92 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var93 == 1);

  }

  public void test403() throws Throwable {

    demo.pathplanning.model.CartesianGraph var2 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var5 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var6 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var9 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var10 = var9.getXSize();
    demo.pathplanning.model.CartesianGraph var13 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var14 = new demo.pathplanning.model.CartesianGraph(var10, 1);
    demo.pathplanning.model.Location var15 = new demo.pathplanning.model.Location(1, 1);
    java.lang.String var16 = var15.toString();
    int var17 = var15.getX();
    int var18 = var15.getY();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var16 + "' != '" + "(1,1)"+ "'", var16.equals("(1,1)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var17 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var18 == 1);

  }

  public void test404() throws Throwable {

    demo.pathplanning.model.CartesianGraph var2 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.algorithms.AStar var3 = new demo.pathplanning.algorithms.AStar(var2);
    demo.pathplanning.model.CartesianGraph var4 = var3.getGraph();
    demo.pathplanning.model.CartesianGraph var5 = var3.getGraph();
    demo.pathplanning.algorithms.PathPlanningContext var6 = new demo.pathplanning.algorithms.PathPlanningContext((demo.pathplanning.algorithms.PathPlanner)var3);
    demo.pathplanning.model.CartesianGraph var7 = var3.getGraph();
    int var8 = var7.getYSize();
    demo.pathplanning.model.CartesianGraph var11 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var14 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var15 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var18 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var21 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var22 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.Node var23 = new demo.pathplanning.model.Node(var7, var15, 1);
    int var24 = var23.getCost();
    demo.pathplanning.model.CartesianGraph var27 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var28 = var27.getXSize();
    int var29 = var27.getYSize();
    int var30 = var27.getYSize();
    demo.pathplanning.model.CartesianGraph var33 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var34 = new demo.pathplanning.model.Location(var30, 1);
    demo.pathplanning.model.CartesianGraph var35 = new demo.pathplanning.model.CartesianGraph(var24, 1);
    demo.pathplanning.model.CartesianGraph var38 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.algorithms.AStar var39 = new demo.pathplanning.algorithms.AStar(var38);
    demo.pathplanning.model.CartesianGraph var40 = var39.getGraph();
    demo.pathplanning.model.CartesianGraph var41 = var39.getGraph();
    demo.pathplanning.algorithms.PathPlanningContext var42 = new demo.pathplanning.algorithms.PathPlanningContext((demo.pathplanning.algorithms.PathPlanner)var39);
    demo.pathplanning.model.CartesianGraph var43 = var39.getGraph();
    int var44 = var43.getYSize();
    demo.pathplanning.model.CartesianGraph var45 = new demo.pathplanning.model.CartesianGraph(1, var44);
    demo.pathplanning.model.CartesianGraph var48 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var49 = var48.getXSize();
    int var50 = var48.getYSize();
    int var51 = var48.getYSize();
    demo.pathplanning.model.CartesianGraph var54 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var55 = var54.getXSize();
    int var56 = var54.getYSize();
    int var57 = var54.getYSize();
    demo.pathplanning.model.CartesianGraph var58 = new demo.pathplanning.model.CartesianGraph(var51, var57);
    demo.pathplanning.model.CartesianGraph var61 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var64 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var65 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var66 = new demo.pathplanning.model.CartesianGraph(var51, 1);
    java.lang.String var67 = var66.toString();
    demo.pathplanning.model.CartesianGraph var70 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var73 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var74 = new demo.pathplanning.model.Location(1, 1);
    boolean var76 = var74.equals((java.lang.Object)0L);
    demo.pathplanning.model.Node var77 = var66.getNode(var74);
    demo.pathplanning.model.CartesianGraph var80 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var83 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var84 = new demo.pathplanning.model.Location(1, 1);
    boolean var86 = var84.equals((java.lang.Object)0L);
    int var87 = var84.getX();
    int var88 = var84.getX();
    demo.pathplanning.model.CartesianGraph var91 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var92 = var91.getXSize();
    demo.pathplanning.model.Node var93 = new demo.pathplanning.model.Node(var66, var84, var92);
    int var94 = var93.getCost();
    demo.pathplanning.model.CartesianGraph var95 = new demo.pathplanning.model.CartesianGraph(var44, var94);
    demo.pathplanning.algorithms.AStar var96 = new demo.pathplanning.algorithms.AStar(var95);
    demo.pathplanning.model.CartesianGraph var97 = var96.getGraph();
    demo.pathplanning.algorithms.AStar var98 = new demo.pathplanning.algorithms.AStar(var97);
    demo.pathplanning.algorithms.PathPlanningContext var99 = new demo.pathplanning.algorithms.PathPlanningContext((demo.pathplanning.algorithms.PathPlanner)var98);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var8 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var24 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var28 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var29 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var30 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var40);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var41);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var43);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var44 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var49 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var50 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var51 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var55 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var56 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var57 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var67 + "' != '" + "0,\n"+ "'", var67.equals("0,\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var76 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var77);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var86 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var87 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var88 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var92 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var94 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var97);

  }

  public void test405() throws Throwable {

    demo.pathplanning.model.CartesianGraph var2 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var3 = var2.getXSize();
    int var4 = var2.getYSize();
    int var5 = var2.getYSize();
    demo.pathplanning.model.CartesianGraph var8 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var9 = new demo.pathplanning.model.Location(var5, 1);
    int var10 = var9.getY();
    int var11 = var9.getY();
    java.lang.String var12 = var9.toString();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var3 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var4 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var5 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var11 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var12 + "' != '" + "(1,1)"+ "'", var12.equals("(1,1)"));

  }

  public void test406() throws Throwable {

    demo.pathplanning.model.CartesianGraph var2 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var3 = var2.getXSize();
    demo.pathplanning.algorithms.AStar var4 = new demo.pathplanning.algorithms.AStar(var2);
    demo.pathplanning.model.CartesianGraph var7 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var10 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var11 = new demo.pathplanning.model.Location(1, 1);
    boolean var13 = var11.equals((java.lang.Object)0L);
    demo.pathplanning.model.Node var14 = var2.getNode(var11);
    int var15 = var2.getYSize();
    demo.pathplanning.model.CartesianGraph var18 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var19 = var18.getXSize();
    int var20 = var18.getYSize();
    int var21 = var18.getYSize();
    demo.pathplanning.model.CartesianGraph var24 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var25 = new demo.pathplanning.model.Location(var21, 1);
    java.lang.String var26 = var25.toString();
    demo.pathplanning.model.CartesianGraph var29 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var32 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var33 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var36 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var37 = var36.getXSize();
    int var38 = var36.getYSize();
    int var39 = var36.getYSize();
    demo.pathplanning.model.CartesianGraph var42 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var43 = var42.getXSize();
    int var44 = var42.getYSize();
    int var45 = var42.getYSize();
    demo.pathplanning.model.CartesianGraph var46 = new demo.pathplanning.model.CartesianGraph(var39, var45);
    demo.pathplanning.model.CartesianGraph var47 = new demo.pathplanning.model.CartesianGraph(1, var39);
    demo.pathplanning.model.Node var48 = new demo.pathplanning.model.Node(var2, var25, var39);
    java.lang.String var49 = var2.toString();
    demo.pathplanning.algorithms.AStar var50 = new demo.pathplanning.algorithms.AStar(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var3 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var13 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var14);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var15 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var19 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var20 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var21 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var26 + "' != '" + "(1,1)"+ "'", var26.equals("(1,1)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var37 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var38 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var39 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var43 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var44 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var45 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var49 + "' != '" + "0,\n"+ "'", var49.equals("0,\n"));

  }

  public void test407() throws Throwable {

    demo.pathplanning.model.CartesianGraph var2 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var3 = var2.getXSize();
    int var4 = var2.getYSize();
    demo.pathplanning.model.CartesianGraph var7 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.algorithms.AStar var8 = new demo.pathplanning.algorithms.AStar(var7);
    java.lang.String var9 = var7.toString();
    demo.pathplanning.model.CartesianGraph var12 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var15 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var16 = new demo.pathplanning.model.Location(1, 1);
    boolean var18 = var16.equals((java.lang.Object)0L);
    demo.pathplanning.model.Node var19 = var7.getNode(var16);
    demo.pathplanning.model.CartesianGraph var22 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var25 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var26 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var29 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var30 = var29.getXSize();
    demo.pathplanning.model.CartesianGraph var33 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var34 = new demo.pathplanning.model.CartesianGraph(var30, 1);
    demo.pathplanning.model.Location var35 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.Node var36 = new demo.pathplanning.model.Node(var2, var16, 1);
    demo.pathplanning.model.CartesianGraph var39 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var40 = var39.getXSize();
    demo.pathplanning.model.CartesianGraph var43 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var44 = new demo.pathplanning.model.CartesianGraph(var40, 1);
    java.lang.String var45 = var44.toString();
    boolean var46 = var36.equals((java.lang.Object)var44);
    demo.pathplanning.model.CartesianGraph var49 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.algorithms.AStar var50 = new demo.pathplanning.algorithms.AStar(var49);
    demo.pathplanning.model.CartesianGraph var51 = var50.getGraph();
    demo.pathplanning.model.CartesianGraph var52 = var50.getGraph();
    demo.pathplanning.algorithms.PathPlanningContext var53 = new demo.pathplanning.algorithms.PathPlanningContext((demo.pathplanning.algorithms.PathPlanner)var50);
    demo.pathplanning.model.CartesianGraph var54 = var50.getGraph();
    int var55 = var54.getYSize();
    demo.pathplanning.model.CartesianGraph var58 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var61 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var62 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var65 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var68 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var69 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.Node var70 = new demo.pathplanning.model.Node(var54, var62, 1);
    java.util.Collection var71 = var70.getNeighbors();
    int var72 = var70.getCost();
    java.lang.String var73 = var70.toString();
    java.util.Collection var74 = var70.getNeighbors();
    java.util.Collection var75 = var70.getNeighbors();
    boolean var76 = var36.equals((java.lang.Object)var75);
    java.util.Collection var77 = var36.getNeighbors();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var3 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var4 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var9 + "' != '" + "0,\n"+ "'", var9.equals("0,\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var18 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var19);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var30 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var40 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var45 + "' != '" + "0,\n"+ "'", var45.equals("0,\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var46 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var51);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var52);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var54);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var55 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var71);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var72 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var73 + "' != '" + "(1,1)=1"+ "'", var73.equals("(1,1)=1"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var74);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var75);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var76 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var77);

  }

  public void test408() throws Throwable {

    demo.pathplanning.model.CartesianGraph var2 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.algorithms.AStar var3 = new demo.pathplanning.algorithms.AStar(var2);
    demo.pathplanning.model.CartesianGraph var4 = var3.getGraph();
    demo.pathplanning.model.CartesianGraph var5 = var3.getGraph();
    demo.pathplanning.algorithms.PathPlanningContext var6 = new demo.pathplanning.algorithms.PathPlanningContext((demo.pathplanning.algorithms.PathPlanner)var3);
    demo.pathplanning.model.CartesianGraph var7 = var3.getGraph();
    int var8 = var7.getYSize();
    demo.pathplanning.model.CartesianGraph var11 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var14 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var15 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var18 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var21 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var22 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.Node var23 = new demo.pathplanning.model.Node(var7, var15, 1);
    java.util.Collection var24 = var23.getNeighbors();
    int var25 = var23.getCost();
    java.lang.String var26 = var23.toString();
    demo.pathplanning.model.CartesianGraph var29 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.algorithms.AStar var30 = new demo.pathplanning.algorithms.AStar(var29);
    demo.pathplanning.model.CartesianGraph var31 = var30.getGraph();
    demo.pathplanning.model.CartesianGraph var32 = var30.getGraph();
    demo.pathplanning.algorithms.PathPlanningContext var33 = new demo.pathplanning.algorithms.PathPlanningContext((demo.pathplanning.algorithms.PathPlanner)var30);
    demo.pathplanning.model.CartesianGraph var34 = var30.getGraph();
    int var35 = var34.getYSize();
    demo.pathplanning.model.CartesianGraph var38 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var41 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var42 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var45 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var48 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var49 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.Node var50 = new demo.pathplanning.model.Node(var34, var42, 1);
    java.lang.String var51 = var50.toString();
    boolean var52 = var23.equals((java.lang.Object)var50);
    demo.pathplanning.model.Location var53 = var23.getLocation();
    int var54 = var53.getY();
    demo.pathplanning.model.CartesianGraph var57 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var58 = var57.getXSize();
    int var59 = var57.getYSize();
    int var60 = var57.getYSize();
    demo.pathplanning.model.CartesianGraph var63 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var64 = new demo.pathplanning.model.Location(var60, 1);
    demo.pathplanning.model.CartesianGraph var65 = new demo.pathplanning.model.CartesianGraph(var54, 1);
    int var66 = var65.getYSize();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var8 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var24);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var25 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var26 + "' != '" + "(1,1)=1"+ "'", var26.equals("(1,1)=1"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var31);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var32);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var34);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var35 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var51 + "' != '" + "(1,1)=1"+ "'", var51.equals("(1,1)=1"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var52 == true);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var53);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var54 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var58 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var59 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var60 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var66 == 1);

  }

  public void test409() throws Throwable {

    demo.pathplanning.model.CartesianGraph var2 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var5 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var6 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var9 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var10 = var9.getXSize();
    int var11 = var9.getYSize();
    int var12 = var9.getYSize();
    demo.pathplanning.model.CartesianGraph var15 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var16 = var15.getXSize();
    int var17 = var15.getYSize();
    int var18 = var15.getYSize();
    demo.pathplanning.model.CartesianGraph var19 = new demo.pathplanning.model.CartesianGraph(var12, var18);
    demo.pathplanning.model.CartesianGraph var20 = new demo.pathplanning.model.CartesianGraph(1, var12);
    int var21 = var20.getYSize();
    demo.pathplanning.model.CartesianGraph var24 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var25 = var24.getXSize();
    int var26 = var24.getYSize();
    int var27 = var24.getYSize();
    demo.pathplanning.model.CartesianGraph var30 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var31 = new demo.pathplanning.model.Location(var27, 1);
    java.lang.String var32 = var31.toString();
    demo.pathplanning.model.Node var33 = var20.getNode(var31);
    int var34 = var31.getY();
    java.lang.String var35 = var31.toString();
    demo.pathplanning.model.CartesianGraph var38 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var39 = var38.getXSize();
    demo.pathplanning.algorithms.AStar var40 = new demo.pathplanning.algorithms.AStar(var38);
    demo.pathplanning.model.CartesianGraph var41 = var40.getGraph();
    boolean var42 = var31.equals((java.lang.Object)var40);
    int var43 = var31.getY();
    int var44 = var31.getX();
    int var45 = var31.getX();
    int var46 = var31.getY();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var11 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var12 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var16 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var17 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var18 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var21 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var25 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var26 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var27 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var32 + "' != '" + "(1,1)"+ "'", var32.equals("(1,1)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var33);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var34 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var35 + "' != '" + "(1,1)"+ "'", var35.equals("(1,1)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var39 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var41);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var42 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var43 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var44 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var45 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var46 == 1);

  }

  public void test410() throws Throwable {

    demo.pathplanning.model.CartesianGraph var2 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var3 = var2.getXSize();
    int var4 = var2.getYSize();
    int var5 = var2.getYSize();
    demo.pathplanning.model.CartesianGraph var8 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var9 = var8.getXSize();
    int var10 = var8.getYSize();
    int var11 = var8.getYSize();
    demo.pathplanning.model.CartesianGraph var12 = new demo.pathplanning.model.CartesianGraph(var5, var11);
    demo.pathplanning.model.CartesianGraph var15 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var18 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var19 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var20 = new demo.pathplanning.model.CartesianGraph(var5, 1);
    java.lang.String var21 = var20.toString();
    demo.pathplanning.model.CartesianGraph var24 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var27 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var28 = new demo.pathplanning.model.Location(1, 1);
    boolean var30 = var28.equals((java.lang.Object)0L);
    demo.pathplanning.model.Node var31 = var20.getNode(var28);
    demo.pathplanning.model.CartesianGraph var34 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var37 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var38 = new demo.pathplanning.model.Location(1, 1);
    boolean var40 = var38.equals((java.lang.Object)0L);
    int var41 = var38.getX();
    int var42 = var38.getX();
    demo.pathplanning.model.CartesianGraph var45 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var46 = var45.getXSize();
    demo.pathplanning.model.Node var47 = new demo.pathplanning.model.Node(var20, var38, var46);
    int var48 = var47.getCost();
    demo.pathplanning.model.CartesianGraph var51 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var52 = var51.getXSize();
    int var53 = var51.getYSize();
    int var54 = var51.getYSize();
    demo.pathplanning.model.CartesianGraph var57 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var58 = new demo.pathplanning.model.Location(var54, 1);
    java.lang.String var59 = var58.toString();
    boolean var60 = var47.equals((java.lang.Object)var58);
    java.lang.String var61 = var47.toString();
    demo.pathplanning.model.Location var62 = var47.getLocation();
    int var63 = var62.getY();
    demo.pathplanning.model.CartesianGraph var66 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var69 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var70 = new demo.pathplanning.model.Location(1, 1);
    boolean var72 = var70.equals((java.lang.Object)0L);
    int var73 = var70.getX();
    int var74 = var70.getX();
    int var75 = var70.getY();
    boolean var76 = var62.equals((java.lang.Object)var75);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var3 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var4 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var5 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var9 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var11 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var21 + "' != '" + "0,\n"+ "'", var21.equals("0,\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var30 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var31);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var40 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var41 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var42 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var46 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var48 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var52 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var53 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var54 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var59 + "' != '" + "(1,1)"+ "'", var59.equals("(1,1)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var60 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var61 + "' != '" + "(1,1)=1"+ "'", var61.equals("(1,1)=1"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var62);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var63 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var72 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var73 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var74 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var75 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var76 == false);

  }

  public void test411() throws Throwable {

    demo.pathplanning.model.CartesianGraph var2 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var3 = var2.getXSize();
    int var4 = var2.getYSize();
    int var5 = var2.getYSize();
    demo.pathplanning.model.CartesianGraph var8 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var9 = var8.getXSize();
    int var10 = var8.getYSize();
    int var11 = var8.getYSize();
    demo.pathplanning.model.CartesianGraph var12 = new demo.pathplanning.model.CartesianGraph(var5, var11);
    demo.pathplanning.model.CartesianGraph var15 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var18 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var19 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var20 = new demo.pathplanning.model.CartesianGraph(var5, 1);
    java.lang.String var21 = var20.toString();
    demo.pathplanning.model.CartesianGraph var24 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var27 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var28 = new demo.pathplanning.model.Location(1, 1);
    boolean var30 = var28.equals((java.lang.Object)0L);
    demo.pathplanning.model.Node var31 = var20.getNode(var28);
    demo.pathplanning.model.CartesianGraph var34 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var37 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var38 = new demo.pathplanning.model.Location(1, 1);
    boolean var40 = var38.equals((java.lang.Object)0L);
    int var41 = var38.getX();
    int var42 = var38.getX();
    demo.pathplanning.model.CartesianGraph var45 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var46 = var45.getXSize();
    demo.pathplanning.model.Node var47 = new demo.pathplanning.model.Node(var20, var38, var46);
    demo.pathplanning.algorithms.AStar var48 = new demo.pathplanning.algorithms.AStar(var20);
    java.lang.String var49 = var20.toString();
    int var50 = var20.getXSize();
    demo.pathplanning.algorithms.AStar var51 = new demo.pathplanning.algorithms.AStar(var20);
    demo.pathplanning.algorithms.AStar var52 = new demo.pathplanning.algorithms.AStar(var20);
    demo.pathplanning.model.CartesianGraph var53 = var52.getGraph();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var3 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var4 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var5 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var9 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var11 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var21 + "' != '" + "0,\n"+ "'", var21.equals("0,\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var30 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var31);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var40 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var41 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var42 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var46 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var49 + "' != '" + "0,\n"+ "'", var49.equals("0,\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var50 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var53);

  }

  public void test412() throws Throwable {

    demo.pathplanning.model.CartesianGraph var2 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.algorithms.AStar var3 = new demo.pathplanning.algorithms.AStar(var2);
    demo.pathplanning.algorithms.AStar var4 = new demo.pathplanning.algorithms.AStar(var2);
    demo.pathplanning.model.CartesianGraph var5 = var4.getGraph();
    demo.pathplanning.model.CartesianGraph var8 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var11 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var12 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var15 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var16 = var15.getXSize();
    int var17 = var15.getYSize();
    int var18 = var15.getYSize();
    demo.pathplanning.model.CartesianGraph var21 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var22 = var21.getXSize();
    int var23 = var21.getYSize();
    int var24 = var21.getYSize();
    demo.pathplanning.model.CartesianGraph var25 = new demo.pathplanning.model.CartesianGraph(var18, var24);
    demo.pathplanning.model.CartesianGraph var26 = new demo.pathplanning.model.CartesianGraph(1, var18);
    int var27 = var26.getYSize();
    demo.pathplanning.model.CartesianGraph var30 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.algorithms.AStar var31 = new demo.pathplanning.algorithms.AStar(var30);
    java.lang.String var32 = var30.toString();
    demo.pathplanning.model.CartesianGraph var35 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var38 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var39 = new demo.pathplanning.model.Location(1, 1);
    boolean var41 = var39.equals((java.lang.Object)0L);
    demo.pathplanning.model.Node var42 = var30.getNode(var39);
    demo.pathplanning.model.CartesianGraph var45 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var46 = var45.getXSize();
    int var47 = var45.getYSize();
    int var48 = var45.getYSize();
    demo.pathplanning.model.CartesianGraph var51 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var52 = var51.getXSize();
    int var53 = var51.getYSize();
    int var54 = var51.getYSize();
    demo.pathplanning.model.CartesianGraph var55 = new demo.pathplanning.model.CartesianGraph(var48, var54);
    demo.pathplanning.model.CartesianGraph var58 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var61 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var62 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var63 = new demo.pathplanning.model.CartesianGraph(var48, 1);
    demo.pathplanning.model.Node var64 = new demo.pathplanning.model.Node(var26, var39, 1);
    demo.pathplanning.model.Location var65 = var64.getLocation();
    java.lang.String var66 = var65.toString();
    demo.pathplanning.model.Node var67 = var5.getNode(var65);
    int var68 = var65.getY();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var16 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var17 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var18 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var22 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var23 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var24 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var27 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var32 + "' != '" + "0,\n"+ "'", var32.equals("0,\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var41 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var42);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var46 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var47 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var48 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var52 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var53 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var54 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var65);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var66 + "' != '" + "(1,1)"+ "'", var66.equals("(1,1)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var67);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var68 == 1);

  }

  public void test413() throws Throwable {

    demo.pathplanning.model.CartesianGraph var2 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var3 = var2.getXSize();
    int var4 = var2.getYSize();
    int var5 = var2.getYSize();
    demo.pathplanning.model.CartesianGraph var8 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var9 = var8.getXSize();
    int var10 = var8.getYSize();
    int var11 = var8.getYSize();
    demo.pathplanning.model.CartesianGraph var12 = new demo.pathplanning.model.CartesianGraph(var5, var11);
    demo.pathplanning.model.CartesianGraph var15 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var18 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var19 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var20 = new demo.pathplanning.model.CartesianGraph(var5, 1);
    int var21 = var20.getXSize();
    demo.pathplanning.model.CartesianGraph var24 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var27 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var28 = new demo.pathplanning.model.Location(1, 1);
    int var29 = var28.getY();
    demo.pathplanning.model.CartesianGraph var32 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var33 = var32.getXSize();
    int var34 = var32.getYSize();
    demo.pathplanning.model.CartesianGraph var37 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var38 = var37.getXSize();
    int var39 = var37.getYSize();
    demo.pathplanning.model.CartesianGraph var42 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.algorithms.AStar var43 = new demo.pathplanning.algorithms.AStar(var42);
    java.lang.String var44 = var42.toString();
    demo.pathplanning.model.CartesianGraph var47 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var50 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var51 = new demo.pathplanning.model.Location(1, 1);
    boolean var53 = var51.equals((java.lang.Object)0L);
    demo.pathplanning.model.Node var54 = var42.getNode(var51);
    demo.pathplanning.model.CartesianGraph var57 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var60 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var61 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var64 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var65 = var64.getXSize();
    demo.pathplanning.model.CartesianGraph var68 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var69 = new demo.pathplanning.model.CartesianGraph(var65, 1);
    demo.pathplanning.model.Location var70 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.Node var71 = new demo.pathplanning.model.Node(var37, var51, 1);
    demo.pathplanning.model.CartesianGraph var72 = new demo.pathplanning.model.CartesianGraph(var34, 1);
    demo.pathplanning.model.Node var73 = new demo.pathplanning.model.Node(var20, var28, 1);
    int var74 = var28.getX();
    int var75 = var28.getX();
    java.lang.String var76 = var28.toString();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var3 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var4 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var5 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var9 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var11 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var21 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var29 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var33 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var34 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var38 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var39 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var44 + "' != '" + "0,\n"+ "'", var44.equals("0,\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var53 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var54);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var65 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var74 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var75 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var76 + "' != '" + "(1,1)"+ "'", var76.equals("(1,1)"));

  }

  public void test414() throws Throwable {

    demo.pathplanning.model.CartesianGraph var2 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var5 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var6 = new demo.pathplanning.model.Location(1, 1);
    int var7 = var6.getX();
    demo.pathplanning.model.CartesianGraph var10 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var13 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var14 = new demo.pathplanning.model.Location(1, 1);
    boolean var16 = var14.equals((java.lang.Object)0L);
    int var17 = var14.getX();
    int var18 = var14.getX();
    int var19 = var14.getY();
    demo.pathplanning.model.CartesianGraph var22 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var23 = var22.getXSize();
    demo.pathplanning.algorithms.AStar var24 = new demo.pathplanning.algorithms.AStar(var22);
    demo.pathplanning.model.CartesianGraph var27 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var30 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var31 = new demo.pathplanning.model.Location(1, 1);
    boolean var33 = var31.equals((java.lang.Object)0L);
    demo.pathplanning.model.Node var34 = var22.getNode(var31);
    boolean var35 = var14.equals((java.lang.Object)var31);
    int var36 = var31.getY();
    boolean var37 = var6.equals((java.lang.Object)var31);
    demo.pathplanning.model.CartesianGraph var40 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.algorithms.AStar var41 = new demo.pathplanning.algorithms.AStar(var40);
    demo.pathplanning.model.CartesianGraph var42 = var41.getGraph();
    demo.pathplanning.model.CartesianGraph var43 = var41.getGraph();
    demo.pathplanning.algorithms.PathPlanningContext var44 = new demo.pathplanning.algorithms.PathPlanningContext((demo.pathplanning.algorithms.PathPlanner)var41);
    demo.pathplanning.model.CartesianGraph var45 = var41.getGraph();
    int var46 = var45.getYSize();
    demo.pathplanning.model.CartesianGraph var49 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var52 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var53 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var56 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var59 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var60 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.Node var61 = new demo.pathplanning.model.Node(var45, var53, 1);
    int var62 = var61.getCost();
    demo.pathplanning.model.CartesianGraph var65 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var66 = var65.getXSize();
    int var67 = var65.getYSize();
    int var68 = var65.getYSize();
    demo.pathplanning.model.CartesianGraph var71 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var72 = new demo.pathplanning.model.Location(var68, 1);
    demo.pathplanning.model.CartesianGraph var73 = new demo.pathplanning.model.CartesianGraph(var62, 1);
    demo.pathplanning.model.CartesianGraph var76 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.algorithms.AStar var77 = new demo.pathplanning.algorithms.AStar(var76);
    demo.pathplanning.model.CartesianGraph var78 = var77.getGraph();
    demo.pathplanning.model.CartesianGraph var79 = var77.getGraph();
    demo.pathplanning.algorithms.PathPlanningContext var80 = new demo.pathplanning.algorithms.PathPlanningContext((demo.pathplanning.algorithms.PathPlanner)var77);
    demo.pathplanning.model.CartesianGraph var81 = var77.getGraph();
    int var82 = var81.getYSize();
    demo.pathplanning.model.CartesianGraph var83 = new demo.pathplanning.model.CartesianGraph(1, var82);
    boolean var84 = var31.equals((java.lang.Object)var82);
    demo.pathplanning.model.CartesianGraph var87 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var88 = var87.getXSize();
    int var89 = var87.getYSize();
    int var90 = var87.getYSize();
    demo.pathplanning.model.CartesianGraph var93 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var94 = var93.getXSize();
    int var95 = var93.getYSize();
    int var96 = var93.getYSize();
    demo.pathplanning.model.CartesianGraph var97 = new demo.pathplanning.model.CartesianGraph(var90, var96);
    demo.pathplanning.model.CartesianGraph var98 = new demo.pathplanning.model.CartesianGraph(var82, var96);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var7 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var16 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var17 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var18 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var19 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var23 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var33 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var34);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var35 == true);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var36 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var37 == true);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var42);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var43);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var45);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var46 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var62 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var66 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var67 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var68 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var78);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var79);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var81);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var82 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var84 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var88 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var89 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var90 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var94 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var95 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var96 == 1);

  }

  public void test415() throws Throwable {

    demo.pathplanning.model.CartesianGraph var2 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var5 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var6 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var9 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var10 = var9.getXSize();
    int var11 = var9.getYSize();
    int var12 = var9.getYSize();
    demo.pathplanning.model.CartesianGraph var15 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var16 = var15.getXSize();
    int var17 = var15.getYSize();
    int var18 = var15.getYSize();
    demo.pathplanning.model.CartesianGraph var19 = new demo.pathplanning.model.CartesianGraph(var12, var18);
    demo.pathplanning.model.CartesianGraph var20 = new demo.pathplanning.model.CartesianGraph(1, var12);
    int var21 = var20.getYSize();
    demo.pathplanning.model.CartesianGraph var24 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var25 = var24.getXSize();
    int var26 = var24.getYSize();
    int var27 = var24.getYSize();
    demo.pathplanning.model.CartesianGraph var30 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var31 = new demo.pathplanning.model.Location(var27, 1);
    java.lang.String var32 = var31.toString();
    demo.pathplanning.model.Node var33 = var20.getNode(var31);
    int var34 = var31.getY();
    java.lang.String var35 = var31.toString();
    demo.pathplanning.model.CartesianGraph var38 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var39 = var38.getXSize();
    demo.pathplanning.algorithms.AStar var40 = new demo.pathplanning.algorithms.AStar(var38);
    demo.pathplanning.model.CartesianGraph var41 = var40.getGraph();
    boolean var42 = var31.equals((java.lang.Object)var40);
    demo.pathplanning.model.CartesianGraph var43 = var40.getGraph();
    demo.pathplanning.algorithms.PathPlanningContext var44 = new demo.pathplanning.algorithms.PathPlanningContext((demo.pathplanning.algorithms.PathPlanner)var40);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var11 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var12 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var16 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var17 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var18 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var21 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var25 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var26 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var27 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var32 + "' != '" + "(1,1)"+ "'", var32.equals("(1,1)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var33);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var34 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var35 + "' != '" + "(1,1)"+ "'", var35.equals("(1,1)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var39 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var41);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var42 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var43);

  }

  public void test416() throws Throwable {

    demo.pathplanning.model.CartesianGraph var2 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.algorithms.AStar var3 = new demo.pathplanning.algorithms.AStar(var2);
    demo.pathplanning.model.CartesianGraph var4 = var3.getGraph();
    demo.pathplanning.model.CartesianGraph var5 = var3.getGraph();
    demo.pathplanning.algorithms.PathPlanningContext var6 = new demo.pathplanning.algorithms.PathPlanningContext((demo.pathplanning.algorithms.PathPlanner)var3);
    demo.pathplanning.model.CartesianGraph var7 = var3.getGraph();
    int var8 = var7.getYSize();
    demo.pathplanning.model.CartesianGraph var11 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var14 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var15 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var18 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var21 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var22 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.Node var23 = new demo.pathplanning.model.Node(var7, var15, 1);
    java.util.Collection var24 = var23.getNeighbors();
    int var25 = var23.getCost();
    int var26 = var23.getCost();
    java.lang.String var27 = var23.toString();
    demo.pathplanning.model.CartesianGraph var30 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.algorithms.AStar var31 = new demo.pathplanning.algorithms.AStar(var30);
    demo.pathplanning.model.CartesianGraph var32 = var31.getGraph();
    demo.pathplanning.model.CartesianGraph var33 = var31.getGraph();
    demo.pathplanning.algorithms.PathPlanningContext var34 = new demo.pathplanning.algorithms.PathPlanningContext((demo.pathplanning.algorithms.PathPlanner)var31);
    demo.pathplanning.model.CartesianGraph var35 = var31.getGraph();
    int var36 = var35.getYSize();
    demo.pathplanning.model.CartesianGraph var39 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var42 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var43 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var46 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var49 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var50 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.Node var51 = new demo.pathplanning.model.Node(var35, var43, 1);
    java.lang.String var52 = var51.toString();
    boolean var53 = var23.equals((java.lang.Object)var51);
    java.util.Collection var54 = var23.getNeighbors();
    demo.pathplanning.model.CartesianGraph var57 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var58 = var57.getXSize();
    java.lang.String var59 = var57.toString();
    boolean var60 = var23.equals((java.lang.Object)var57);
    demo.pathplanning.algorithms.AStar var61 = new demo.pathplanning.algorithms.AStar(var57);
    int var62 = var57.getXSize();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var8 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var24);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var25 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var26 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var27 + "' != '" + "(1,1)=1"+ "'", var27.equals("(1,1)=1"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var32);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var33);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var35);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var36 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var52 + "' != '" + "(1,1)=1"+ "'", var52.equals("(1,1)=1"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var53 == true);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var54);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var58 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var59 + "' != '" + "0,\n"+ "'", var59.equals("0,\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var60 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var62 == 1);

  }

  public void test417() throws Throwable {

    demo.pathplanning.model.CartesianGraph var2 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.algorithms.AStar var3 = new demo.pathplanning.algorithms.AStar(var2);
    demo.pathplanning.model.CartesianGraph var4 = var3.getGraph();
    demo.pathplanning.model.CartesianGraph var5 = var3.getGraph();
    demo.pathplanning.algorithms.PathPlanningContext var6 = new demo.pathplanning.algorithms.PathPlanningContext((demo.pathplanning.algorithms.PathPlanner)var3);
    demo.pathplanning.model.CartesianGraph var7 = var3.getGraph();
    int var8 = var7.getYSize();
    demo.pathplanning.model.CartesianGraph var11 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var14 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var15 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var18 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var21 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var22 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.Node var23 = new demo.pathplanning.model.Node(var7, var15, 1);
    java.util.Collection var24 = var23.getNeighbors();
    int var25 = var23.getCost();
    java.lang.String var26 = var23.toString();
    java.lang.String var27 = var23.toString();
    java.util.Collection var28 = var23.getNeighbors();
    java.util.Collection var29 = var23.getNeighbors();
    demo.pathplanning.model.Location var30 = var23.getLocation();
    int var31 = var30.getY();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var8 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var24);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var25 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var26 + "' != '" + "(1,1)=1"+ "'", var26.equals("(1,1)=1"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var27 + "' != '" + "(1,1)=1"+ "'", var27.equals("(1,1)=1"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var28);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var29);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var30);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var31 == 1);

  }

  public void test418() throws Throwable {

    demo.pathplanning.model.CartesianGraph var2 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var3 = var2.getXSize();
    int var4 = var2.getYSize();
    int var5 = var2.getYSize();
    demo.pathplanning.model.CartesianGraph var8 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var9 = var8.getXSize();
    int var10 = var8.getYSize();
    int var11 = var8.getYSize();
    demo.pathplanning.model.CartesianGraph var12 = new demo.pathplanning.model.CartesianGraph(var5, var11);
    demo.pathplanning.model.CartesianGraph var15 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var18 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var19 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var20 = new demo.pathplanning.model.CartesianGraph(var5, 1);
    int var21 = var20.getXSize();
    demo.pathplanning.model.CartesianGraph var24 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var25 = var24.getXSize();
    int var26 = var24.getYSize();
    int var27 = var24.getYSize();
    demo.pathplanning.model.CartesianGraph var28 = new demo.pathplanning.model.CartesianGraph(var21, var27);
    demo.pathplanning.model.CartesianGraph var31 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var34 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var35 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var38 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var39 = var38.getXSize();
    int var40 = var38.getYSize();
    int var41 = var38.getYSize();
    demo.pathplanning.model.CartesianGraph var44 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var45 = var44.getXSize();
    int var46 = var44.getYSize();
    int var47 = var44.getYSize();
    demo.pathplanning.model.CartesianGraph var48 = new demo.pathplanning.model.CartesianGraph(var41, var47);
    demo.pathplanning.model.CartesianGraph var49 = new demo.pathplanning.model.CartesianGraph(1, var41);
    demo.pathplanning.model.CartesianGraph var52 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var55 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var56 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var59 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var60 = var59.getXSize();
    int var61 = var59.getYSize();
    int var62 = var59.getYSize();
    demo.pathplanning.model.CartesianGraph var65 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var66 = var65.getXSize();
    int var67 = var65.getYSize();
    int var68 = var65.getYSize();
    demo.pathplanning.model.CartesianGraph var69 = new demo.pathplanning.model.CartesianGraph(var62, var68);
    demo.pathplanning.model.CartesianGraph var70 = new demo.pathplanning.model.CartesianGraph(1, var62);
    demo.pathplanning.model.Location var71 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.Location var72 = new demo.pathplanning.model.Location(var21, 1);
    int var73 = var72.getX();
    demo.pathplanning.model.CartesianGraph var76 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var77 = var76.getXSize();
    int var78 = var76.getYSize();
    int var79 = var76.getYSize();
    demo.pathplanning.model.CartesianGraph var82 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var83 = var82.getXSize();
    int var84 = var82.getYSize();
    int var85 = var82.getYSize();
    demo.pathplanning.model.CartesianGraph var86 = new demo.pathplanning.model.CartesianGraph(var79, var85);
    demo.pathplanning.model.Location var87 = new demo.pathplanning.model.Location(var73, var85);
    int var88 = var87.getY();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var3 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var4 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var5 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var9 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var11 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var21 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var25 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var26 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var27 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var39 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var40 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var41 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var45 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var46 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var47 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var60 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var61 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var62 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var66 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var67 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var68 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var73 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var77 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var78 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var79 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var83 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var84 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var85 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var88 == 1);

  }

  public void test419() throws Throwable {

    demo.pathplanning.model.CartesianGraph var2 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.algorithms.AStar var3 = new demo.pathplanning.algorithms.AStar(var2);
    demo.pathplanning.model.CartesianGraph var4 = var3.getGraph();
    demo.pathplanning.model.CartesianGraph var5 = var3.getGraph();
    demo.pathplanning.algorithms.PathPlanningContext var6 = new demo.pathplanning.algorithms.PathPlanningContext((demo.pathplanning.algorithms.PathPlanner)var3);
    demo.pathplanning.model.CartesianGraph var7 = var3.getGraph();
    int var8 = var7.getYSize();
    demo.pathplanning.model.CartesianGraph var11 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var14 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var15 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var18 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var21 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var22 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.Node var23 = new demo.pathplanning.model.Node(var7, var15, 1);
    int var24 = var15.getX();
    demo.pathplanning.model.CartesianGraph var27 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var28 = var27.getXSize();
    int var29 = var27.getYSize();
    demo.pathplanning.model.CartesianGraph var32 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.algorithms.AStar var33 = new demo.pathplanning.algorithms.AStar(var32);
    java.lang.String var34 = var32.toString();
    demo.pathplanning.model.CartesianGraph var37 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var40 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var41 = new demo.pathplanning.model.Location(1, 1);
    boolean var43 = var41.equals((java.lang.Object)0L);
    demo.pathplanning.model.Node var44 = var32.getNode(var41);
    demo.pathplanning.model.CartesianGraph var47 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var50 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var51 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var54 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var55 = var54.getXSize();
    demo.pathplanning.model.CartesianGraph var58 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var59 = new demo.pathplanning.model.CartesianGraph(var55, 1);
    demo.pathplanning.model.Location var60 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.Node var61 = new demo.pathplanning.model.Node(var27, var41, 1);
    demo.pathplanning.model.CartesianGraph var64 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var65 = var64.getXSize();
    demo.pathplanning.algorithms.AStar var66 = new demo.pathplanning.algorithms.AStar(var64);
    demo.pathplanning.model.CartesianGraph var69 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var72 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var73 = new demo.pathplanning.model.Location(1, 1);
    boolean var75 = var73.equals((java.lang.Object)0L);
    demo.pathplanning.model.Node var76 = var64.getNode(var73);
    int var77 = var64.getXSize();
    boolean var78 = var41.equals((java.lang.Object)var64);
    int var79 = var64.getXSize();
    boolean var80 = var15.equals((java.lang.Object)var79);
    java.lang.String var81 = var15.toString();
    int var82 = var15.getX();
    demo.pathplanning.model.Location var84 = new demo.pathplanning.model.Location(var82, (-1));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var8 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var24 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var28 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var29 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var34 + "' != '" + "0,\n"+ "'", var34.equals("0,\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var43 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var44);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var55 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var65 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var75 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var76);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var77 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var78 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var79 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var80 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var81 + "' != '" + "(1,1)"+ "'", var81.equals("(1,1)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var82 == 1);

  }

  public void test420() throws Throwable {

    demo.pathplanning.model.CartesianGraph var2 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.algorithms.AStar var3 = new demo.pathplanning.algorithms.AStar(var2);
    demo.pathplanning.model.CartesianGraph var4 = var3.getGraph();
    demo.pathplanning.model.CartesianGraph var5 = var3.getGraph();
    demo.pathplanning.algorithms.PathPlanningContext var6 = new demo.pathplanning.algorithms.PathPlanningContext((demo.pathplanning.algorithms.PathPlanner)var3);
    demo.pathplanning.model.CartesianGraph var7 = var3.getGraph();
    int var8 = var7.getYSize();
    demo.pathplanning.model.CartesianGraph var11 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var14 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var15 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var18 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var21 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var22 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.Node var23 = new demo.pathplanning.model.Node(var7, var15, 1);
    java.util.Collection var24 = var23.getNeighbors();
    int var25 = var23.getCost();
    java.lang.String var26 = var23.toString();
    demo.pathplanning.model.CartesianGraph var29 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.algorithms.AStar var30 = new demo.pathplanning.algorithms.AStar(var29);
    demo.pathplanning.model.CartesianGraph var31 = var30.getGraph();
    demo.pathplanning.model.CartesianGraph var32 = var30.getGraph();
    demo.pathplanning.algorithms.PathPlanningContext var33 = new demo.pathplanning.algorithms.PathPlanningContext((demo.pathplanning.algorithms.PathPlanner)var30);
    demo.pathplanning.model.CartesianGraph var34 = var30.getGraph();
    int var35 = var34.getYSize();
    demo.pathplanning.model.CartesianGraph var38 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var41 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var42 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var45 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var48 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var49 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.Node var50 = new demo.pathplanning.model.Node(var34, var42, 1);
    java.lang.String var51 = var50.toString();
    boolean var52 = var23.equals((java.lang.Object)var50);
    demo.pathplanning.model.Location var53 = var50.getLocation();
    demo.pathplanning.model.Location var54 = var50.getLocation();
    int var55 = var54.getX();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var8 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var24);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var25 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var26 + "' != '" + "(1,1)=1"+ "'", var26.equals("(1,1)=1"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var31);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var32);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var34);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var35 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var51 + "' != '" + "(1,1)=1"+ "'", var51.equals("(1,1)=1"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var52 == true);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var53);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var54);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var55 == 1);

  }

  public void test421() throws Throwable {

    demo.pathplanning.model.CartesianGraph var2 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var3 = var2.getXSize();
    int var4 = var2.getYSize();
    int var5 = var2.getYSize();
    demo.pathplanning.model.CartesianGraph var8 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var9 = var8.getXSize();
    int var10 = var8.getYSize();
    int var11 = var8.getYSize();
    demo.pathplanning.model.CartesianGraph var12 = new demo.pathplanning.model.CartesianGraph(var5, var11);
    java.lang.String var13 = var12.toString();
    demo.pathplanning.model.CartesianGraph var16 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.algorithms.AStar var17 = new demo.pathplanning.algorithms.AStar(var16);
    java.lang.String var18 = var16.toString();
    demo.pathplanning.model.CartesianGraph var21 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var24 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var25 = new demo.pathplanning.model.Location(1, 1);
    boolean var27 = var25.equals((java.lang.Object)0L);
    demo.pathplanning.model.Node var28 = var16.getNode(var25);
    java.lang.String var29 = var25.toString();
    demo.pathplanning.model.CartesianGraph var32 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.algorithms.AStar var33 = new demo.pathplanning.algorithms.AStar(var32);
    demo.pathplanning.model.CartesianGraph var34 = var33.getGraph();
    demo.pathplanning.model.CartesianGraph var35 = var33.getGraph();
    demo.pathplanning.algorithms.PathPlanningContext var36 = new demo.pathplanning.algorithms.PathPlanningContext((demo.pathplanning.algorithms.PathPlanner)var33);
    demo.pathplanning.model.CartesianGraph var37 = var33.getGraph();
    int var38 = var37.getYSize();
    demo.pathplanning.model.CartesianGraph var41 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var44 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var45 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var48 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var51 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var52 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.Node var53 = new demo.pathplanning.model.Node(var37, var45, 1);
    boolean var54 = var25.equals((java.lang.Object)1);
    int var55 = var25.getX();
    demo.pathplanning.model.CartesianGraph var58 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var59 = var58.getXSize();
    int var60 = var58.getYSize();
    int var61 = var58.getYSize();
    demo.pathplanning.model.CartesianGraph var64 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var65 = new demo.pathplanning.model.Location(var61, 1);
    demo.pathplanning.model.Node var66 = new demo.pathplanning.model.Node(var12, var25, var61);
    int var67 = var12.getXSize();
    int var68 = var12.getYSize();
    demo.pathplanning.algorithms.AStar var69 = new demo.pathplanning.algorithms.AStar(var12);
    demo.pathplanning.algorithms.PathPlanningContext var70 = new demo.pathplanning.algorithms.PathPlanningContext((demo.pathplanning.algorithms.PathPlanner)var69);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var3 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var4 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var5 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var9 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var11 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var13 + "' != '" + "0,\n"+ "'", var13.equals("0,\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var18 + "' != '" + "0,\n"+ "'", var18.equals("0,\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var27 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var28);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var29 + "' != '" + "(1,1)"+ "'", var29.equals("(1,1)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var34);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var35);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var37);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var38 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var54 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var55 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var59 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var60 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var61 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var67 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var68 == 1);

  }

  public void test422() throws Throwable {

    demo.pathplanning.model.CartesianGraph var2 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var3 = var2.getXSize();
    demo.pathplanning.algorithms.AStar var4 = new demo.pathplanning.algorithms.AStar(var2);
    demo.pathplanning.model.CartesianGraph var7 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var10 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var11 = new demo.pathplanning.model.Location(1, 1);
    boolean var13 = var11.equals((java.lang.Object)0L);
    demo.pathplanning.model.Node var14 = var2.getNode(var11);
    int var15 = var2.getYSize();
    demo.pathplanning.model.CartesianGraph var18 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var19 = var18.getXSize();
    int var20 = var18.getYSize();
    int var21 = var18.getYSize();
    demo.pathplanning.model.CartesianGraph var24 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var25 = var24.getXSize();
    int var26 = var24.getYSize();
    int var27 = var24.getYSize();
    demo.pathplanning.model.CartesianGraph var28 = new demo.pathplanning.model.CartesianGraph(var21, var27);
    demo.pathplanning.model.CartesianGraph var31 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var34 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var35 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var36 = new demo.pathplanning.model.CartesianGraph(var21, 1);
    int var37 = var36.getXSize();
    demo.pathplanning.model.CartesianGraph var40 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var41 = var40.getXSize();
    int var42 = var40.getYSize();
    int var43 = var40.getYSize();
    demo.pathplanning.model.CartesianGraph var44 = new demo.pathplanning.model.CartesianGraph(var37, var43);
    demo.pathplanning.model.CartesianGraph var45 = new demo.pathplanning.model.CartesianGraph(var15, var37);
    int var46 = var45.getXSize();
    java.lang.String var47 = var45.toString();
    int var48 = var45.getXSize();
    int var49 = var45.getYSize();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var3 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var13 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var14);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var15 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var19 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var20 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var21 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var25 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var26 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var27 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var37 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var41 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var42 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var43 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var46 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var47 + "' != '" + "0,\n"+ "'", var47.equals("0,\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var48 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var49 == 1);

  }

  public void test423() throws Throwable {

    demo.pathplanning.model.CartesianGraph var2 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var3 = var2.getXSize();
    int var4 = var2.getYSize();
    int var5 = var2.getYSize();
    demo.pathplanning.model.CartesianGraph var8 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var9 = var8.getXSize();
    int var10 = var8.getYSize();
    int var11 = var8.getYSize();
    demo.pathplanning.model.CartesianGraph var12 = new demo.pathplanning.model.CartesianGraph(var5, var11);
    demo.pathplanning.model.CartesianGraph var15 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var18 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var19 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var20 = new demo.pathplanning.model.CartesianGraph(var5, 1);
    int var21 = var20.getXSize();
    demo.pathplanning.model.CartesianGraph var24 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var27 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var28 = new demo.pathplanning.model.Location(1, 1);
    int var29 = var28.getY();
    demo.pathplanning.model.CartesianGraph var32 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var33 = var32.getXSize();
    int var34 = var32.getYSize();
    demo.pathplanning.model.CartesianGraph var37 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var38 = var37.getXSize();
    int var39 = var37.getYSize();
    demo.pathplanning.model.CartesianGraph var42 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.algorithms.AStar var43 = new demo.pathplanning.algorithms.AStar(var42);
    java.lang.String var44 = var42.toString();
    demo.pathplanning.model.CartesianGraph var47 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var50 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var51 = new demo.pathplanning.model.Location(1, 1);
    boolean var53 = var51.equals((java.lang.Object)0L);
    demo.pathplanning.model.Node var54 = var42.getNode(var51);
    demo.pathplanning.model.CartesianGraph var57 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var60 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var61 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var64 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var65 = var64.getXSize();
    demo.pathplanning.model.CartesianGraph var68 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var69 = new demo.pathplanning.model.CartesianGraph(var65, 1);
    demo.pathplanning.model.Location var70 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.Node var71 = new demo.pathplanning.model.Node(var37, var51, 1);
    demo.pathplanning.model.CartesianGraph var72 = new demo.pathplanning.model.CartesianGraph(var34, 1);
    demo.pathplanning.model.Node var73 = new demo.pathplanning.model.Node(var20, var28, 1);
    demo.pathplanning.model.CartesianGraph var76 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var79 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var80 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.Location var82 = new demo.pathplanning.model.Location(1, (-1));
    demo.pathplanning.model.CartesianGraph var83 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var84 = var83.getXSize();
    demo.pathplanning.algorithms.AStar var85 = new demo.pathplanning.algorithms.AStar(var83);
    demo.pathplanning.model.CartesianGraph var86 = var85.getGraph();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var3 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var4 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var5 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var9 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var11 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var21 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var29 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var33 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var34 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var38 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var39 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var44 + "' != '" + "0,\n"+ "'", var44.equals("0,\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var53 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var54);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var65 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var84 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var86);

  }

  public void test424() throws Throwable {

    demo.pathplanning.model.CartesianGraph var2 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.algorithms.AStar var3 = new demo.pathplanning.algorithms.AStar(var2);
    demo.pathplanning.model.CartesianGraph var4 = var3.getGraph();
    demo.pathplanning.model.CartesianGraph var5 = var3.getGraph();
    demo.pathplanning.model.CartesianGraph var6 = var3.getGraph();
    demo.pathplanning.algorithms.AStar var7 = new demo.pathplanning.algorithms.AStar(var6);
    java.lang.String var8 = var6.toString();
    demo.pathplanning.model.CartesianGraph var11 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var14 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var15 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var18 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var19 = var18.getXSize();
    demo.pathplanning.model.CartesianGraph var22 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var23 = new demo.pathplanning.model.CartesianGraph(var19, 1);
    demo.pathplanning.model.Location var24 = new demo.pathplanning.model.Location(1, 1);
    int var25 = var24.getX();
    int var26 = var24.getY();
    int var27 = var24.getY();
    demo.pathplanning.model.Node var28 = var6.getNode(var24);
    int var29 = var24.getX();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var6);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var8 + "' != '" + "0,\n"+ "'", var8.equals("0,\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var19 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var25 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var26 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var27 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var28);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var29 == 1);

  }

  public void test425() throws Throwable {

    demo.pathplanning.model.CartesianGraph var2 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var3 = var2.getXSize();
    demo.pathplanning.algorithms.AStar var4 = new demo.pathplanning.algorithms.AStar(var2);
    demo.pathplanning.model.CartesianGraph var7 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var10 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var11 = new demo.pathplanning.model.Location(1, 1);
    boolean var13 = var11.equals((java.lang.Object)0L);
    demo.pathplanning.model.Node var14 = var2.getNode(var11);
    int var15 = var2.getYSize();
    demo.pathplanning.model.CartesianGraph var18 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var19 = var18.getXSize();
    int var20 = var18.getYSize();
    int var21 = var18.getYSize();
    demo.pathplanning.model.CartesianGraph var24 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var25 = new demo.pathplanning.model.Location(var21, 1);
    java.lang.String var26 = var25.toString();
    demo.pathplanning.model.CartesianGraph var29 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var32 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var33 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var36 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var37 = var36.getXSize();
    int var38 = var36.getYSize();
    int var39 = var36.getYSize();
    demo.pathplanning.model.CartesianGraph var42 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var43 = var42.getXSize();
    int var44 = var42.getYSize();
    int var45 = var42.getYSize();
    demo.pathplanning.model.CartesianGraph var46 = new demo.pathplanning.model.CartesianGraph(var39, var45);
    demo.pathplanning.model.CartesianGraph var47 = new demo.pathplanning.model.CartesianGraph(1, var39);
    demo.pathplanning.model.Node var48 = new demo.pathplanning.model.Node(var2, var25, var39);
    java.util.Collection var49 = var48.getNeighbors();
    java.lang.String var50 = var48.toString();
    java.lang.String var51 = var48.toString();
    java.util.Collection var52 = var48.getNeighbors();
    java.util.Collection var53 = var48.getNeighbors();
    java.lang.String var54 = var48.toString();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var3 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var13 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var14);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var15 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var19 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var20 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var21 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var26 + "' != '" + "(1,1)"+ "'", var26.equals("(1,1)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var37 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var38 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var39 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var43 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var44 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var45 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var49);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var50 + "' != '" + "(1,1)=1"+ "'", var50.equals("(1,1)=1"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var51 + "' != '" + "(1,1)=1"+ "'", var51.equals("(1,1)=1"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var52);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var53);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var54 + "' != '" + "(1,1)=1"+ "'", var54.equals("(1,1)=1"));

  }

  public void test426() throws Throwable {

    demo.pathplanning.model.CartesianGraph var2 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.algorithms.AStar var3 = new demo.pathplanning.algorithms.AStar(var2);
    demo.pathplanning.model.CartesianGraph var4 = var3.getGraph();
    demo.pathplanning.model.CartesianGraph var5 = var3.getGraph();
    demo.pathplanning.algorithms.PathPlanningContext var6 = new demo.pathplanning.algorithms.PathPlanningContext((demo.pathplanning.algorithms.PathPlanner)var3);
    demo.pathplanning.model.CartesianGraph var7 = var3.getGraph();
    int var8 = var7.getYSize();
    java.lang.String var9 = var7.toString();
    demo.pathplanning.model.CartesianGraph var12 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var15 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var16 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var19 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var20 = var19.getXSize();
    int var21 = var19.getYSize();
    int var22 = var19.getYSize();
    demo.pathplanning.model.CartesianGraph var25 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var26 = var25.getXSize();
    int var27 = var25.getYSize();
    int var28 = var25.getYSize();
    demo.pathplanning.model.CartesianGraph var29 = new demo.pathplanning.model.CartesianGraph(var22, var28);
    demo.pathplanning.model.CartesianGraph var30 = new demo.pathplanning.model.CartesianGraph(1, var22);
    int var31 = var30.getYSize();
    demo.pathplanning.model.CartesianGraph var34 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var35 = var34.getXSize();
    int var36 = var34.getYSize();
    int var37 = var34.getYSize();
    demo.pathplanning.model.CartesianGraph var40 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var41 = new demo.pathplanning.model.Location(var37, 1);
    java.lang.String var42 = var41.toString();
    demo.pathplanning.model.Node var43 = var30.getNode(var41);
    int var44 = var41.getX();
    demo.pathplanning.model.CartesianGraph var48 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var49 = var48.getXSize();
    int var50 = var48.getYSize();
    int var51 = var48.getYSize();
    demo.pathplanning.model.CartesianGraph var54 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var55 = var54.getXSize();
    int var56 = var54.getYSize();
    int var57 = var54.getYSize();
    demo.pathplanning.model.CartesianGraph var58 = new demo.pathplanning.model.CartesianGraph(var51, var57);
    demo.pathplanning.model.CartesianGraph var61 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var64 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var65 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var66 = new demo.pathplanning.model.CartesianGraph(var51, 1);
    demo.pathplanning.model.CartesianGraph var67 = new demo.pathplanning.model.CartesianGraph(0, 1);
    demo.pathplanning.model.Node var68 = new demo.pathplanning.model.Node(var7, var41, 1);
    int var69 = var68.getCost();
    java.lang.String var70 = var68.toString();
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      demo.pathplanning.model.Direction var71 = demo.pathplanning.model.Direction.valueOf(var70);
      fail("Expected exception of type java.lang.IllegalArgumentException");
    } catch (java.lang.IllegalArgumentException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var8 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var9 + "' != '" + "0,\n"+ "'", var9.equals("0,\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var20 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var21 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var22 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var26 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var27 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var28 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var31 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var35 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var36 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var37 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var42 + "' != '" + "(1,1)"+ "'", var42.equals("(1,1)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var43);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var44 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var49 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var50 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var51 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var55 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var56 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var57 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var69 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var70 + "' != '" + "(1,1)=1"+ "'", var70.equals("(1,1)=1"));

  }

  public void test427() throws Throwable {

    demo.pathplanning.model.CartesianGraph var2 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var3 = var2.getXSize();
    int var4 = var2.getYSize();
    int var5 = var2.getYSize();
    demo.pathplanning.model.CartesianGraph var8 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var9 = var8.getXSize();
    int var10 = var8.getYSize();
    int var11 = var8.getYSize();
    demo.pathplanning.model.CartesianGraph var12 = new demo.pathplanning.model.CartesianGraph(var5, var11);
    int var13 = var12.getXSize();
    demo.pathplanning.model.CartesianGraph var16 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.algorithms.AStar var17 = new demo.pathplanning.algorithms.AStar(var16);
    java.lang.String var18 = var16.toString();
    demo.pathplanning.model.CartesianGraph var21 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var24 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var25 = new demo.pathplanning.model.Location(1, 1);
    boolean var27 = var25.equals((java.lang.Object)0L);
    demo.pathplanning.model.Node var28 = var16.getNode(var25);
    demo.pathplanning.model.CartesianGraph var31 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var32 = var31.getXSize();
    demo.pathplanning.algorithms.AStar var33 = new demo.pathplanning.algorithms.AStar(var31);
    demo.pathplanning.model.CartesianGraph var36 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var39 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var40 = new demo.pathplanning.model.Location(1, 1);
    boolean var42 = var40.equals((java.lang.Object)0L);
    demo.pathplanning.model.Node var43 = var31.getNode(var40);
    int var44 = var31.getXSize();
    demo.pathplanning.model.Node var45 = new demo.pathplanning.model.Node(var12, var25, var44);
    boolean var47 = var45.equals((java.lang.Object)false);
    int var48 = var45.getCost();
    java.util.Collection var49 = var45.getNeighbors();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var3 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var4 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var5 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var9 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var11 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var13 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var18 + "' != '" + "0,\n"+ "'", var18.equals("0,\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var27 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var28);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var32 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var42 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var43);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var44 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var47 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var48 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var49);

  }

  public void test428() throws Throwable {

    demo.pathplanning.model.CartesianGraph var2 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.algorithms.AStar var3 = new demo.pathplanning.algorithms.AStar(var2);
    demo.pathplanning.model.CartesianGraph var4 = var3.getGraph();
    demo.pathplanning.model.CartesianGraph var5 = var3.getGraph();
    demo.pathplanning.algorithms.PathPlanningContext var6 = new demo.pathplanning.algorithms.PathPlanningContext((demo.pathplanning.algorithms.PathPlanner)var3);
    demo.pathplanning.model.CartesianGraph var7 = var3.getGraph();
    int var8 = var7.getYSize();
    demo.pathplanning.model.CartesianGraph var11 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var14 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var15 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var18 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var21 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var22 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.Node var23 = new demo.pathplanning.model.Node(var7, var15, 1);
    java.util.Collection var24 = var23.getNeighbors();
    int var25 = var23.getCost();
    java.lang.String var26 = var23.toString();
    java.lang.String var27 = var23.toString();
    java.util.Collection var28 = var23.getNeighbors();
    java.lang.String var29 = var23.toString();
    int var30 = var23.getCost();
    demo.pathplanning.model.CartesianGraph var33 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var34 = var33.getXSize();
    int var35 = var33.getYSize();
    demo.pathplanning.model.CartesianGraph var38 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.algorithms.AStar var39 = new demo.pathplanning.algorithms.AStar(var38);
    java.lang.String var40 = var38.toString();
    demo.pathplanning.model.CartesianGraph var43 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var46 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var47 = new demo.pathplanning.model.Location(1, 1);
    boolean var49 = var47.equals((java.lang.Object)0L);
    demo.pathplanning.model.Node var50 = var38.getNode(var47);
    demo.pathplanning.model.CartesianGraph var53 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var56 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var57 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var60 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var61 = var60.getXSize();
    demo.pathplanning.model.CartesianGraph var64 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var65 = new demo.pathplanning.model.CartesianGraph(var61, 1);
    demo.pathplanning.model.Location var66 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.Node var67 = new demo.pathplanning.model.Node(var33, var47, 1);
    int var68 = var33.getXSize();
    int var69 = var33.getYSize();
    demo.pathplanning.model.CartesianGraph var70 = new demo.pathplanning.model.CartesianGraph(var30, var69);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var8 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var24);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var25 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var26 + "' != '" + "(1,1)=1"+ "'", var26.equals("(1,1)=1"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var27 + "' != '" + "(1,1)=1"+ "'", var27.equals("(1,1)=1"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var28);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var29 + "' != '" + "(1,1)=1"+ "'", var29.equals("(1,1)=1"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var30 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var34 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var35 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var40 + "' != '" + "0,\n"+ "'", var40.equals("0,\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var49 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var50);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var61 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var68 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var69 == 1);

  }

  public void test429() throws Throwable {

    demo.pathplanning.model.CartesianGraph var2 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var5 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var6 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var9 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var10 = var9.getXSize();
    int var11 = var9.getYSize();
    int var12 = var9.getYSize();
    demo.pathplanning.model.CartesianGraph var15 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var16 = var15.getXSize();
    int var17 = var15.getYSize();
    int var18 = var15.getYSize();
    demo.pathplanning.model.CartesianGraph var19 = new demo.pathplanning.model.CartesianGraph(var12, var18);
    demo.pathplanning.model.CartesianGraph var20 = new demo.pathplanning.model.CartesianGraph(1, var12);
    int var21 = var20.getYSize();
    demo.pathplanning.model.CartesianGraph var24 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.algorithms.AStar var25 = new demo.pathplanning.algorithms.AStar(var24);
    java.lang.String var26 = var24.toString();
    demo.pathplanning.model.CartesianGraph var29 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var32 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var33 = new demo.pathplanning.model.Location(1, 1);
    boolean var35 = var33.equals((java.lang.Object)0L);
    demo.pathplanning.model.Node var36 = var24.getNode(var33);
    demo.pathplanning.model.CartesianGraph var39 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var40 = var39.getXSize();
    int var41 = var39.getYSize();
    int var42 = var39.getYSize();
    demo.pathplanning.model.CartesianGraph var45 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var46 = var45.getXSize();
    int var47 = var45.getYSize();
    int var48 = var45.getYSize();
    demo.pathplanning.model.CartesianGraph var49 = new demo.pathplanning.model.CartesianGraph(var42, var48);
    demo.pathplanning.model.CartesianGraph var52 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var55 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var56 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var57 = new demo.pathplanning.model.CartesianGraph(var42, 1);
    demo.pathplanning.model.Node var58 = new demo.pathplanning.model.Node(var20, var33, 1);
    demo.pathplanning.model.Location var59 = var58.getLocation();
    demo.pathplanning.model.Location var60 = var58.getLocation();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var11 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var12 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var16 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var17 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var18 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var21 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var26 + "' != '" + "0,\n"+ "'", var26.equals("0,\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var35 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var36);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var40 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var41 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var42 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var46 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var47 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var48 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var59);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var60);

  }

  public void test430() throws Throwable {

    demo.pathplanning.model.CartesianGraph var2 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var5 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var6 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var9 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var10 = var9.getXSize();
    int var11 = var9.getYSize();
    int var12 = var9.getYSize();
    demo.pathplanning.model.CartesianGraph var15 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var16 = var15.getXSize();
    int var17 = var15.getYSize();
    int var18 = var15.getYSize();
    demo.pathplanning.model.CartesianGraph var19 = new demo.pathplanning.model.CartesianGraph(var12, var18);
    demo.pathplanning.model.CartesianGraph var20 = new demo.pathplanning.model.CartesianGraph(1, var12);
    int var21 = var20.getYSize();
    demo.pathplanning.model.CartesianGraph var24 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var25 = var24.getXSize();
    int var26 = var24.getYSize();
    int var27 = var24.getYSize();
    demo.pathplanning.model.CartesianGraph var30 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var31 = new demo.pathplanning.model.Location(var27, 1);
    java.lang.String var32 = var31.toString();
    demo.pathplanning.model.Node var33 = var20.getNode(var31);
    int var34 = var31.getY();
    java.lang.String var35 = var31.toString();
    demo.pathplanning.model.CartesianGraph var38 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var39 = var38.getXSize();
    demo.pathplanning.algorithms.AStar var40 = new demo.pathplanning.algorithms.AStar(var38);
    demo.pathplanning.model.CartesianGraph var41 = var40.getGraph();
    boolean var42 = var31.equals((java.lang.Object)var40);
    demo.pathplanning.model.CartesianGraph var43 = var40.getGraph();
    int var44 = var43.getYSize();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var11 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var12 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var16 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var17 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var18 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var21 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var25 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var26 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var27 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var32 + "' != '" + "(1,1)"+ "'", var32.equals("(1,1)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var33);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var34 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var35 + "' != '" + "(1,1)"+ "'", var35.equals("(1,1)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var39 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var41);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var42 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var43);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var44 == 1);

  }

  public void test431() throws Throwable {

    demo.pathplanning.model.CartesianGraph var2 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.algorithms.AStar var3 = new demo.pathplanning.algorithms.AStar(var2);
    demo.pathplanning.model.CartesianGraph var4 = var3.getGraph();
    demo.pathplanning.model.CartesianGraph var5 = var3.getGraph();
    demo.pathplanning.algorithms.PathPlanningContext var6 = new demo.pathplanning.algorithms.PathPlanningContext((demo.pathplanning.algorithms.PathPlanner)var3);
    demo.pathplanning.model.CartesianGraph var7 = var3.getGraph();
    int var8 = var7.getYSize();
    demo.pathplanning.model.CartesianGraph var11 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var14 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var15 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var18 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var21 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var22 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.Node var23 = new demo.pathplanning.model.Node(var7, var15, 1);
    int var24 = var23.getCost();
    java.util.Collection var25 = var23.getNeighbors();
    int var26 = var23.getCost();
    demo.pathplanning.model.CartesianGraph var29 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var30 = var29.getXSize();
    int var31 = var29.getYSize();
    int var32 = var29.getYSize();
    demo.pathplanning.model.CartesianGraph var35 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var36 = var35.getXSize();
    int var37 = var35.getYSize();
    int var38 = var35.getYSize();
    demo.pathplanning.model.CartesianGraph var39 = new demo.pathplanning.model.CartesianGraph(var32, var38);
    demo.pathplanning.model.CartesianGraph var42 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var45 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var46 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var47 = new demo.pathplanning.model.CartesianGraph(var32, 1);
    java.lang.String var48 = var47.toString();
    demo.pathplanning.model.CartesianGraph var51 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var54 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var55 = new demo.pathplanning.model.Location(1, 1);
    boolean var57 = var55.equals((java.lang.Object)0L);
    demo.pathplanning.model.Node var58 = var47.getNode(var55);
    demo.pathplanning.model.CartesianGraph var61 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var64 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var65 = new demo.pathplanning.model.Location(1, 1);
    boolean var67 = var65.equals((java.lang.Object)0L);
    int var68 = var65.getX();
    int var69 = var65.getX();
    demo.pathplanning.model.CartesianGraph var72 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var73 = var72.getXSize();
    demo.pathplanning.model.Node var74 = new demo.pathplanning.model.Node(var47, var65, var73);
    demo.pathplanning.algorithms.AStar var75 = new demo.pathplanning.algorithms.AStar(var47);
    java.lang.String var76 = var47.toString();
    int var77 = var47.getYSize();
    boolean var78 = var23.equals((java.lang.Object)var47);
    demo.pathplanning.model.CartesianGraph var81 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var84 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var85 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var88 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var89 = var88.getXSize();
    demo.pathplanning.model.CartesianGraph var92 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var93 = new demo.pathplanning.model.CartesianGraph(var89, 1);
    demo.pathplanning.model.Location var94 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.Node var95 = var47.getNode(var94);
    int var96 = var94.getY();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var8 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var24 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var25);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var26 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var30 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var31 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var32 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var36 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var37 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var38 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var48 + "' != '" + "0,\n"+ "'", var48.equals("0,\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var57 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var58);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var67 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var68 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var69 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var73 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var76 + "' != '" + "0,\n"+ "'", var76.equals("0,\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var77 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var78 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var89 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var95);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var96 == 1);

  }

  public void test432() throws Throwable {

    demo.pathplanning.model.CartesianGraph var2 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var5 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var6 = new demo.pathplanning.model.Location(1, 1);
    boolean var8 = var6.equals((java.lang.Object)0L);
    int var9 = var6.getX();
    int var10 = var6.getX();
    int var11 = var6.getY();
    demo.pathplanning.model.CartesianGraph var14 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var15 = var14.getXSize();
    demo.pathplanning.algorithms.AStar var16 = new demo.pathplanning.algorithms.AStar(var14);
    demo.pathplanning.model.CartesianGraph var19 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var22 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var23 = new demo.pathplanning.model.Location(1, 1);
    boolean var25 = var23.equals((java.lang.Object)0L);
    demo.pathplanning.model.Node var26 = var14.getNode(var23);
    int var27 = var14.getYSize();
    demo.pathplanning.model.CartesianGraph var30 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var31 = var30.getXSize();
    int var32 = var30.getYSize();
    int var33 = var30.getYSize();
    demo.pathplanning.model.CartesianGraph var36 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var37 = new demo.pathplanning.model.Location(var33, 1);
    java.lang.String var38 = var37.toString();
    demo.pathplanning.model.CartesianGraph var41 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var44 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var45 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var48 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var49 = var48.getXSize();
    int var50 = var48.getYSize();
    int var51 = var48.getYSize();
    demo.pathplanning.model.CartesianGraph var54 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var55 = var54.getXSize();
    int var56 = var54.getYSize();
    int var57 = var54.getYSize();
    demo.pathplanning.model.CartesianGraph var58 = new demo.pathplanning.model.CartesianGraph(var51, var57);
    demo.pathplanning.model.CartesianGraph var59 = new demo.pathplanning.model.CartesianGraph(1, var51);
    demo.pathplanning.model.Node var60 = new demo.pathplanning.model.Node(var14, var37, var51);
    java.util.Collection var61 = var60.getNeighbors();
    int var62 = var60.getCost();
    demo.pathplanning.model.CartesianGraph var65 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var66 = var65.getXSize();
    demo.pathplanning.model.CartesianGraph var69 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var70 = new demo.pathplanning.model.CartesianGraph(var66, 1);
    demo.pathplanning.model.CartesianGraph var73 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.algorithms.AStar var74 = new demo.pathplanning.algorithms.AStar(var73);
    demo.pathplanning.model.CartesianGraph var75 = var74.getGraph();
    demo.pathplanning.model.CartesianGraph var76 = var74.getGraph();
    demo.pathplanning.algorithms.PathPlanningContext var77 = new demo.pathplanning.algorithms.PathPlanningContext((demo.pathplanning.algorithms.PathPlanner)var74);
    demo.pathplanning.model.CartesianGraph var78 = var74.getGraph();
    int var79 = var78.getYSize();
    demo.pathplanning.model.CartesianGraph var80 = new demo.pathplanning.model.CartesianGraph(var66, var79);
    int var81 = var80.getXSize();
    demo.pathplanning.algorithms.AStar var82 = new demo.pathplanning.algorithms.AStar(var80);
    java.lang.String var83 = var80.toString();
    boolean var84 = var60.equals((java.lang.Object)var80);
    demo.pathplanning.model.CartesianGraph var87 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var90 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var91 = new demo.pathplanning.model.Location(1, 1);
    boolean var93 = var91.equals((java.lang.Object)0L);
    int var94 = var91.getX();
    int var95 = var91.getX();
    int var96 = var91.getY();
    demo.pathplanning.model.Node var97 = var80.getNode(var91);
    int var98 = var91.getY();
    demo.pathplanning.model.CartesianGraph var99 = new demo.pathplanning.model.CartesianGraph(var11, var98);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var9 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var11 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var15 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var25 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var26);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var27 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var31 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var32 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var33 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var38 + "' != '" + "(1,1)"+ "'", var38.equals("(1,1)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var49 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var50 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var51 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var55 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var56 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var57 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var61);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var62 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var66 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var75);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var76);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var78);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var79 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var81 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var83 + "' != '" + "0,\n"+ "'", var83.equals("0,\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var84 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var93 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var94 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var95 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var96 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var97);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var98 == 1);

  }

  public void test433() throws Throwable {

    demo.pathplanning.model.CartesianGraph var2 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var3 = var2.getXSize();
    int var4 = var2.getYSize();
    demo.pathplanning.model.CartesianGraph var7 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var8 = var7.getXSize();
    int var9 = var7.getYSize();
    int var10 = var7.getYSize();
    demo.pathplanning.model.CartesianGraph var13 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var14 = var13.getXSize();
    int var15 = var13.getYSize();
    int var16 = var13.getYSize();
    demo.pathplanning.model.CartesianGraph var17 = new demo.pathplanning.model.CartesianGraph(var10, var16);
    demo.pathplanning.model.CartesianGraph var20 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var23 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var24 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var25 = new demo.pathplanning.model.CartesianGraph(var10, 1);
    java.lang.String var26 = var25.toString();
    demo.pathplanning.model.CartesianGraph var29 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var32 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var33 = new demo.pathplanning.model.Location(1, 1);
    boolean var35 = var33.equals((java.lang.Object)0L);
    demo.pathplanning.model.Node var36 = var25.getNode(var33);
    demo.pathplanning.model.CartesianGraph var39 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var42 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var43 = new demo.pathplanning.model.Location(1, 1);
    boolean var45 = var43.equals((java.lang.Object)0L);
    int var46 = var43.getX();
    int var47 = var43.getX();
    demo.pathplanning.model.CartesianGraph var50 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var51 = var50.getXSize();
    demo.pathplanning.model.Node var52 = new demo.pathplanning.model.Node(var25, var43, var51);
    demo.pathplanning.model.CartesianGraph var55 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.algorithms.AStar var56 = new demo.pathplanning.algorithms.AStar(var55);
    demo.pathplanning.model.CartesianGraph var57 = var56.getGraph();
    demo.pathplanning.model.CartesianGraph var58 = var56.getGraph();
    demo.pathplanning.algorithms.PathPlanningContext var59 = new demo.pathplanning.algorithms.PathPlanningContext((demo.pathplanning.algorithms.PathPlanner)var56);
    demo.pathplanning.model.CartesianGraph var60 = var56.getGraph();
    int var61 = var60.getYSize();
    demo.pathplanning.model.CartesianGraph var62 = new demo.pathplanning.model.CartesianGraph(var51, var61);
    demo.pathplanning.model.CartesianGraph var65 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var68 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var69 = new demo.pathplanning.model.Location(1, 1);
    int var70 = var69.getY();
    demo.pathplanning.model.CartesianGraph var73 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.algorithms.AStar var74 = new demo.pathplanning.algorithms.AStar(var73);
    demo.pathplanning.model.CartesianGraph var75 = var74.getGraph();
    demo.pathplanning.model.CartesianGraph var76 = var74.getGraph();
    demo.pathplanning.model.CartesianGraph var77 = var74.getGraph();
    demo.pathplanning.algorithms.AStar var78 = new demo.pathplanning.algorithms.AStar(var77);
    int var79 = var77.getYSize();
    demo.pathplanning.model.Node var80 = new demo.pathplanning.model.Node(var62, var69, var79);
    int var81 = var62.getYSize();
    int var82 = var62.getYSize();
    demo.pathplanning.model.Location var83 = new demo.pathplanning.model.Location(var4, var82);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var3 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var4 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var8 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var9 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var14 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var15 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var16 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var26 + "' != '" + "0,\n"+ "'", var26.equals("0,\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var35 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var36);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var45 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var46 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var47 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var51 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var57);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var58);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var60);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var61 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var70 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var75);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var76);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var77);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var79 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var81 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var82 == 1);

  }

  public void test434() throws Throwable {

    demo.pathplanning.model.CartesianGraph var2 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var3 = var2.getXSize();
    int var4 = var2.getYSize();
    int var5 = var2.getYSize();
    demo.pathplanning.model.CartesianGraph var8 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var9 = var8.getXSize();
    int var10 = var8.getYSize();
    int var11 = var8.getYSize();
    demo.pathplanning.model.CartesianGraph var12 = new demo.pathplanning.model.CartesianGraph(var5, var11);
    demo.pathplanning.algorithms.AStar var13 = new demo.pathplanning.algorithms.AStar(var12);
    demo.pathplanning.model.CartesianGraph var16 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var17 = var16.getXSize();
    int var18 = var16.getYSize();
    int var19 = var16.getYSize();
    demo.pathplanning.model.CartesianGraph var22 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var23 = var22.getXSize();
    int var24 = var22.getYSize();
    int var25 = var22.getYSize();
    demo.pathplanning.model.CartesianGraph var26 = new demo.pathplanning.model.CartesianGraph(var19, var25);
    demo.pathplanning.model.CartesianGraph var29 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var32 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var33 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var34 = new demo.pathplanning.model.CartesianGraph(var19, 1);
    java.lang.String var35 = var34.toString();
    demo.pathplanning.model.CartesianGraph var38 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var41 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var42 = new demo.pathplanning.model.Location(1, 1);
    boolean var44 = var42.equals((java.lang.Object)0L);
    demo.pathplanning.model.Node var45 = var34.getNode(var42);
    int var46 = var42.getY();
    demo.pathplanning.model.CartesianGraph var49 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var50 = var49.getXSize();
    demo.pathplanning.algorithms.AStar var51 = new demo.pathplanning.algorithms.AStar(var49);
    demo.pathplanning.model.CartesianGraph var54 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var57 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var58 = new demo.pathplanning.model.Location(1, 1);
    boolean var60 = var58.equals((java.lang.Object)0L);
    demo.pathplanning.model.Node var61 = var49.getNode(var58);
    int var62 = var49.getYSize();
    demo.pathplanning.model.CartesianGraph var65 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var66 = var65.getXSize();
    int var67 = var65.getYSize();
    int var68 = var65.getYSize();
    demo.pathplanning.model.CartesianGraph var71 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var72 = var71.getXSize();
    int var73 = var71.getYSize();
    int var74 = var71.getYSize();
    demo.pathplanning.model.CartesianGraph var75 = new demo.pathplanning.model.CartesianGraph(var68, var74);
    demo.pathplanning.model.CartesianGraph var78 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var81 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var82 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var83 = new demo.pathplanning.model.CartesianGraph(var68, 1);
    int var84 = var83.getXSize();
    demo.pathplanning.model.CartesianGraph var87 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var88 = var87.getXSize();
    int var89 = var87.getYSize();
    int var90 = var87.getYSize();
    demo.pathplanning.model.CartesianGraph var91 = new demo.pathplanning.model.CartesianGraph(var84, var90);
    demo.pathplanning.model.CartesianGraph var92 = new demo.pathplanning.model.CartesianGraph(var62, var84);
    demo.pathplanning.model.Node var93 = new demo.pathplanning.model.Node(var12, var42, var84);
    demo.pathplanning.algorithms.AStar var94 = new demo.pathplanning.algorithms.AStar(var12);
    int var95 = var12.getYSize();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var3 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var4 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var5 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var9 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var11 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var17 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var18 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var19 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var23 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var24 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var25 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var35 + "' != '" + "0,\n"+ "'", var35.equals("0,\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var44 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var45);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var46 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var50 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var60 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var61);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var62 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var66 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var67 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var68 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var72 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var73 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var74 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var84 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var88 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var89 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var90 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var95 == 1);

  }

  public void test435() throws Throwable {

    demo.pathplanning.model.CartesianGraph var2 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var3 = var2.getXSize();
    demo.pathplanning.algorithms.AStar var4 = new demo.pathplanning.algorithms.AStar(var2);
    demo.pathplanning.model.CartesianGraph var7 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var10 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var11 = new demo.pathplanning.model.Location(1, 1);
    boolean var13 = var11.equals((java.lang.Object)0L);
    demo.pathplanning.model.Node var14 = var2.getNode(var11);
    demo.pathplanning.algorithms.AStar var15 = new demo.pathplanning.algorithms.AStar(var2);
    demo.pathplanning.model.CartesianGraph var16 = var15.getGraph();
    int var17 = var16.getYSize();
    java.lang.String var18 = var16.toString();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var3 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var13 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var14);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var16);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var17 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var18 + "' != '" + "0,\n"+ "'", var18.equals("0,\n"));

  }

  public void test436() throws Throwable {

    demo.pathplanning.model.CartesianGraph var2 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.algorithms.AStar var3 = new demo.pathplanning.algorithms.AStar(var2);
    demo.pathplanning.model.CartesianGraph var4 = var3.getGraph();
    demo.pathplanning.model.CartesianGraph var5 = var3.getGraph();
    demo.pathplanning.algorithms.PathPlanningContext var6 = new demo.pathplanning.algorithms.PathPlanningContext((demo.pathplanning.algorithms.PathPlanner)var3);
    demo.pathplanning.model.CartesianGraph var7 = var3.getGraph();
    int var8 = var7.getYSize();
    demo.pathplanning.model.CartesianGraph var11 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var14 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var15 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var18 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var21 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var22 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.Node var23 = new demo.pathplanning.model.Node(var7, var15, 1);
    int var24 = var23.getCost();
    demo.pathplanning.model.CartesianGraph var27 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var28 = var27.getXSize();
    int var29 = var27.getYSize();
    int var30 = var27.getYSize();
    demo.pathplanning.model.CartesianGraph var33 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var34 = new demo.pathplanning.model.Location(var30, 1);
    demo.pathplanning.model.CartesianGraph var35 = new demo.pathplanning.model.CartesianGraph(var24, 1);
    demo.pathplanning.model.CartesianGraph var38 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var41 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var42 = new demo.pathplanning.model.Location(1, 1);
    boolean var44 = var42.equals((java.lang.Object)0L);
    demo.pathplanning.model.Node var45 = var35.getNode(var42);
    java.lang.String var46 = var42.toString();
    int var47 = var42.getY();
    java.lang.String var48 = var42.toString();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var8 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var24 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var28 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var29 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var30 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var44 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var45);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var46 + "' != '" + "(1,1)"+ "'", var46.equals("(1,1)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var47 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var48 + "' != '" + "(1,1)"+ "'", var48.equals("(1,1)"));

  }

  public void test437() throws Throwable {

    demo.pathplanning.model.CartesianGraph var2 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.algorithms.AStar var3 = new demo.pathplanning.algorithms.AStar(var2);
    demo.pathplanning.model.CartesianGraph var4 = var3.getGraph();
    demo.pathplanning.model.CartesianGraph var5 = var3.getGraph();
    demo.pathplanning.model.CartesianGraph var6 = var3.getGraph();
    demo.pathplanning.algorithms.AStar var7 = new demo.pathplanning.algorithms.AStar(var6);
    java.lang.String var8 = var6.toString();
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      demo.pathplanning.model.Direction var9 = demo.pathplanning.model.Direction.valueOf(var8);
      fail("Expected exception of type java.lang.IllegalArgumentException");
    } catch (java.lang.IllegalArgumentException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var6);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var8 + "' != '" + "0,\n"+ "'", var8.equals("0,\n"));

  }

  public void test438() throws Throwable {

    demo.pathplanning.model.CartesianGraph var2 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var3 = var2.getXSize();
    demo.pathplanning.algorithms.AStar var4 = new demo.pathplanning.algorithms.AStar(var2);
    demo.pathplanning.model.CartesianGraph var7 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var10 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var11 = new demo.pathplanning.model.Location(1, 1);
    boolean var13 = var11.equals((java.lang.Object)0L);
    demo.pathplanning.model.Node var14 = var2.getNode(var11);
    int var15 = var2.getYSize();
    demo.pathplanning.model.CartesianGraph var18 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var19 = var18.getXSize();
    int var20 = var18.getYSize();
    int var21 = var18.getYSize();
    demo.pathplanning.model.CartesianGraph var24 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var25 = new demo.pathplanning.model.Location(var21, 1);
    java.lang.String var26 = var25.toString();
    demo.pathplanning.model.CartesianGraph var29 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var32 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var33 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var36 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var37 = var36.getXSize();
    int var38 = var36.getYSize();
    int var39 = var36.getYSize();
    demo.pathplanning.model.CartesianGraph var42 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var43 = var42.getXSize();
    int var44 = var42.getYSize();
    int var45 = var42.getYSize();
    demo.pathplanning.model.CartesianGraph var46 = new demo.pathplanning.model.CartesianGraph(var39, var45);
    demo.pathplanning.model.CartesianGraph var47 = new demo.pathplanning.model.CartesianGraph(1, var39);
    demo.pathplanning.model.Node var48 = new demo.pathplanning.model.Node(var2, var25, var39);
    java.util.Collection var49 = var48.getNeighbors();
    demo.pathplanning.model.Location var50 = var48.getLocation();
    demo.pathplanning.model.CartesianGraph var53 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.algorithms.AStar var54 = new demo.pathplanning.algorithms.AStar(var53);
    demo.pathplanning.model.CartesianGraph var55 = var54.getGraph();
    demo.pathplanning.model.CartesianGraph var56 = var54.getGraph();
    demo.pathplanning.algorithms.PathPlanningContext var57 = new demo.pathplanning.algorithms.PathPlanningContext((demo.pathplanning.algorithms.PathPlanner)var54);
    demo.pathplanning.model.CartesianGraph var58 = var54.getGraph();
    int var59 = var58.getYSize();
    demo.pathplanning.model.CartesianGraph var62 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var65 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var66 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var69 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var72 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var73 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.Node var74 = new demo.pathplanning.model.Node(var58, var66, 1);
    java.util.Collection var75 = var74.getNeighbors();
    int var76 = var74.getCost();
    java.lang.String var77 = var74.toString();
    java.util.Collection var78 = var74.getNeighbors();
    java.util.Collection var79 = var74.getNeighbors();
    java.lang.String var80 = var74.toString();
    boolean var81 = var48.equals((java.lang.Object)var74);
    demo.pathplanning.model.Location var82 = var48.getLocation();
    int var83 = var48.getCost();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var3 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var13 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var14);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var15 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var19 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var20 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var21 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var26 + "' != '" + "(1,1)"+ "'", var26.equals("(1,1)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var37 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var38 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var39 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var43 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var44 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var45 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var49);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var50);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var55);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var56);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var58);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var59 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var75);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var76 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var77 + "' != '" + "(1,1)=1"+ "'", var77.equals("(1,1)=1"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var78);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var79);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var80 + "' != '" + "(1,1)=1"+ "'", var80.equals("(1,1)=1"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var81 == true);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var82);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var83 == 1);

  }

  public void test439() throws Throwable {

    demo.pathplanning.model.CartesianGraph var2 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var5 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var6 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var9 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var10 = var9.getXSize();
    int var11 = var9.getYSize();
    int var12 = var9.getYSize();
    demo.pathplanning.model.CartesianGraph var15 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var16 = var15.getXSize();
    int var17 = var15.getYSize();
    int var18 = var15.getYSize();
    demo.pathplanning.model.CartesianGraph var19 = new demo.pathplanning.model.CartesianGraph(var12, var18);
    demo.pathplanning.model.CartesianGraph var20 = new demo.pathplanning.model.CartesianGraph(1, var12);
    int var21 = var20.getYSize();
    demo.pathplanning.model.CartesianGraph var24 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.algorithms.AStar var25 = new demo.pathplanning.algorithms.AStar(var24);
    java.lang.String var26 = var24.toString();
    demo.pathplanning.model.CartesianGraph var29 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var32 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var33 = new demo.pathplanning.model.Location(1, 1);
    boolean var35 = var33.equals((java.lang.Object)0L);
    demo.pathplanning.model.Node var36 = var24.getNode(var33);
    demo.pathplanning.model.CartesianGraph var39 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var40 = var39.getXSize();
    int var41 = var39.getYSize();
    int var42 = var39.getYSize();
    demo.pathplanning.model.CartesianGraph var45 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var46 = var45.getXSize();
    int var47 = var45.getYSize();
    int var48 = var45.getYSize();
    demo.pathplanning.model.CartesianGraph var49 = new demo.pathplanning.model.CartesianGraph(var42, var48);
    demo.pathplanning.model.CartesianGraph var52 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var55 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var56 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var57 = new demo.pathplanning.model.CartesianGraph(var42, 1);
    demo.pathplanning.model.Node var58 = new demo.pathplanning.model.Node(var20, var33, 1);
    demo.pathplanning.model.Location var59 = var58.getLocation();
    demo.pathplanning.model.CartesianGraph var62 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var65 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var66 = new demo.pathplanning.model.Location(1, 1);
    int var67 = var66.getX();
    boolean var68 = var58.equals((java.lang.Object)var66);
    demo.pathplanning.model.Location var69 = var58.getLocation();
    int var70 = var58.getCost();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var11 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var12 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var16 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var17 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var18 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var21 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var26 + "' != '" + "0,\n"+ "'", var26.equals("0,\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var35 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var36);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var40 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var41 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var42 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var46 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var47 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var48 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var59);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var67 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var68 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var69);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var70 == 1);

  }

  public void test440() throws Throwable {

    demo.pathplanning.model.CartesianGraph var2 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var3 = var2.getXSize();
    demo.pathplanning.algorithms.AStar var4 = new demo.pathplanning.algorithms.AStar(var2);
    demo.pathplanning.model.CartesianGraph var7 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var10 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var11 = new demo.pathplanning.model.Location(1, 1);
    boolean var13 = var11.equals((java.lang.Object)0L);
    demo.pathplanning.model.Node var14 = var2.getNode(var11);
    int var15 = var2.getYSize();
    demo.pathplanning.model.CartesianGraph var18 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var19 = var18.getXSize();
    int var20 = var18.getYSize();
    int var21 = var18.getYSize();
    demo.pathplanning.model.CartesianGraph var24 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var25 = new demo.pathplanning.model.Location(var21, 1);
    java.lang.String var26 = var25.toString();
    demo.pathplanning.model.CartesianGraph var29 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var32 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var33 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var36 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var37 = var36.getXSize();
    int var38 = var36.getYSize();
    int var39 = var36.getYSize();
    demo.pathplanning.model.CartesianGraph var42 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var43 = var42.getXSize();
    int var44 = var42.getYSize();
    int var45 = var42.getYSize();
    demo.pathplanning.model.CartesianGraph var46 = new demo.pathplanning.model.CartesianGraph(var39, var45);
    demo.pathplanning.model.CartesianGraph var47 = new demo.pathplanning.model.CartesianGraph(1, var39);
    demo.pathplanning.model.Node var48 = new demo.pathplanning.model.Node(var2, var25, var39);
    demo.pathplanning.model.CartesianGraph var51 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.algorithms.AStar var52 = new demo.pathplanning.algorithms.AStar(var51);
    demo.pathplanning.model.CartesianGraph var53 = var52.getGraph();
    demo.pathplanning.model.CartesianGraph var54 = var52.getGraph();
    demo.pathplanning.algorithms.PathPlanningContext var55 = new demo.pathplanning.algorithms.PathPlanningContext((demo.pathplanning.algorithms.PathPlanner)var52);
    demo.pathplanning.model.CartesianGraph var56 = var52.getGraph();
    int var57 = var56.getYSize();
    demo.pathplanning.model.CartesianGraph var60 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var63 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var64 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var67 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var70 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var71 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.Node var72 = new demo.pathplanning.model.Node(var56, var64, 1);
    demo.pathplanning.model.Node var73 = var2.getNode(var64);
    int var74 = var2.getXSize();
    int var75 = var2.getXSize();
    java.lang.String var76 = var2.toString();
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      demo.pathplanning.model.Direction var77 = demo.pathplanning.model.Direction.valueOf(var76);
      fail("Expected exception of type java.lang.IllegalArgumentException");
    } catch (java.lang.IllegalArgumentException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var3 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var13 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var14);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var15 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var19 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var20 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var21 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var26 + "' != '" + "(1,1)"+ "'", var26.equals("(1,1)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var37 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var38 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var39 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var43 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var44 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var45 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var53);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var54);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var56);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var57 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var73);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var74 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var75 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var76 + "' != '" + "0,\n"+ "'", var76.equals("0,\n"));

  }

  public void test441() throws Throwable {

    demo.pathplanning.model.CartesianGraph var2 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var3 = var2.getXSize();
    int var4 = var2.getYSize();
    int var5 = var2.getYSize();
    demo.pathplanning.model.CartesianGraph var8 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var9 = var8.getXSize();
    int var10 = var8.getYSize();
    int var11 = var8.getYSize();
    demo.pathplanning.model.CartesianGraph var12 = new demo.pathplanning.model.CartesianGraph(var5, var11);
    demo.pathplanning.model.CartesianGraph var15 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var18 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var19 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var20 = new demo.pathplanning.model.CartesianGraph(var5, 1);
    java.lang.String var21 = var20.toString();
    demo.pathplanning.model.CartesianGraph var24 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var27 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var28 = new demo.pathplanning.model.Location(1, 1);
    boolean var30 = var28.equals((java.lang.Object)0L);
    demo.pathplanning.model.Node var31 = var20.getNode(var28);
    demo.pathplanning.model.CartesianGraph var34 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var37 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var38 = new demo.pathplanning.model.Location(1, 1);
    boolean var40 = var38.equals((java.lang.Object)0L);
    int var41 = var38.getX();
    int var42 = var38.getX();
    demo.pathplanning.model.CartesianGraph var45 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var46 = var45.getXSize();
    demo.pathplanning.model.Node var47 = new demo.pathplanning.model.Node(var20, var38, var46);
    java.lang.String var48 = var47.toString();
    int var49 = var47.getCost();
    demo.pathplanning.model.CartesianGraph var52 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var53 = var52.getXSize();
    demo.pathplanning.algorithms.AStar var54 = new demo.pathplanning.algorithms.AStar(var52);
    demo.pathplanning.model.CartesianGraph var57 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var60 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var61 = new demo.pathplanning.model.Location(1, 1);
    boolean var63 = var61.equals((java.lang.Object)0L);
    demo.pathplanning.model.Node var64 = var52.getNode(var61);
    int var65 = var52.getYSize();
    demo.pathplanning.model.CartesianGraph var68 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var69 = var68.getXSize();
    int var70 = var68.getYSize();
    int var71 = var68.getYSize();
    demo.pathplanning.model.CartesianGraph var74 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var75 = new demo.pathplanning.model.Location(var71, 1);
    java.lang.String var76 = var75.toString();
    demo.pathplanning.model.CartesianGraph var79 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var82 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var83 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var86 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var87 = var86.getXSize();
    int var88 = var86.getYSize();
    int var89 = var86.getYSize();
    demo.pathplanning.model.CartesianGraph var92 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var93 = var92.getXSize();
    int var94 = var92.getYSize();
    int var95 = var92.getYSize();
    demo.pathplanning.model.CartesianGraph var96 = new demo.pathplanning.model.CartesianGraph(var89, var95);
    demo.pathplanning.model.CartesianGraph var97 = new demo.pathplanning.model.CartesianGraph(1, var89);
    demo.pathplanning.model.Node var98 = new demo.pathplanning.model.Node(var52, var75, var89);
    demo.pathplanning.model.Location var99 = new demo.pathplanning.model.Location(var49, var89);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var3 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var4 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var5 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var9 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var11 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var21 + "' != '" + "0,\n"+ "'", var21.equals("0,\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var30 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var31);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var40 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var41 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var42 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var46 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var48 + "' != '" + "(1,1)=1"+ "'", var48.equals("(1,1)=1"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var49 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var53 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var63 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var64);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var65 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var69 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var70 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var71 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var76 + "' != '" + "(1,1)"+ "'", var76.equals("(1,1)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var87 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var88 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var89 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var93 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var94 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var95 == 1);

  }

  public void test442() throws Throwable {

    demo.pathplanning.model.CartesianGraph var2 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.algorithms.AStar var3 = new demo.pathplanning.algorithms.AStar(var2);
    demo.pathplanning.model.CartesianGraph var4 = var3.getGraph();
    demo.pathplanning.model.CartesianGraph var5 = var3.getGraph();
    demo.pathplanning.algorithms.PathPlanningContext var6 = new demo.pathplanning.algorithms.PathPlanningContext((demo.pathplanning.algorithms.PathPlanner)var3);
    demo.pathplanning.model.CartesianGraph var7 = var3.getGraph();
    int var8 = var7.getYSize();
    demo.pathplanning.model.CartesianGraph var11 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var14 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var15 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var18 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var21 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var22 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.Node var23 = new demo.pathplanning.model.Node(var7, var15, 1);
    java.util.Collection var24 = var23.getNeighbors();
    java.util.Collection var25 = var23.getNeighbors();
    int var26 = var23.getCost();
    demo.pathplanning.model.Location var27 = var23.getLocation();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var8 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var24);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var25);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var26 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var27);

  }

  public void test443() throws Throwable {

    demo.pathplanning.model.CartesianGraph var2 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.algorithms.AStar var3 = new demo.pathplanning.algorithms.AStar(var2);
    demo.pathplanning.model.CartesianGraph var4 = var3.getGraph();
    demo.pathplanning.model.CartesianGraph var5 = var3.getGraph();
    demo.pathplanning.algorithms.PathPlanningContext var6 = new demo.pathplanning.algorithms.PathPlanningContext((demo.pathplanning.algorithms.PathPlanner)var3);
    demo.pathplanning.model.CartesianGraph var7 = var3.getGraph();
    int var8 = var7.getYSize();
    demo.pathplanning.model.CartesianGraph var11 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var14 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var15 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var18 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var21 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var22 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.Node var23 = new demo.pathplanning.model.Node(var7, var15, 1);
    int var24 = var23.getCost();
    java.util.Collection var25 = var23.getNeighbors();
    java.util.Collection var26 = var23.getNeighbors();
    boolean var28 = var23.equals((java.lang.Object)(-1L));
    demo.pathplanning.model.Location var29 = var23.getLocation();
    java.util.Collection var30 = var23.getNeighbors();
    java.util.Collection var31 = var23.getNeighbors();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var8 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var24 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var25);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var26);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var28 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var29);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var30);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var31);

  }

  public void test444() throws Throwable {

    demo.pathplanning.model.CartesianGraph var2 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var3 = var2.getXSize();
    demo.pathplanning.algorithms.AStar var4 = new demo.pathplanning.algorithms.AStar(var2);
    demo.pathplanning.model.CartesianGraph var7 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var8 = var7.getXSize();
    int var9 = var7.getYSize();
    int var10 = var7.getYSize();
    demo.pathplanning.model.CartesianGraph var13 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var14 = new demo.pathplanning.model.Location(var10, 1);
    java.lang.String var15 = var14.toString();
    demo.pathplanning.model.Node var16 = var2.getNode(var14);
    demo.pathplanning.algorithms.AStar var17 = new demo.pathplanning.algorithms.AStar(var2);
    demo.pathplanning.model.CartesianGraph var20 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var23 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var24 = new demo.pathplanning.model.Location(1, 1);
    boolean var26 = var24.equals((java.lang.Object)0L);
    int var27 = var24.getX();
    int var28 = var24.getX();
    int var29 = var24.getY();
    demo.pathplanning.model.CartesianGraph var32 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var33 = var32.getXSize();
    demo.pathplanning.algorithms.AStar var34 = new demo.pathplanning.algorithms.AStar(var32);
    demo.pathplanning.model.CartesianGraph var37 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var40 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var41 = new demo.pathplanning.model.Location(1, 1);
    boolean var43 = var41.equals((java.lang.Object)0L);
    demo.pathplanning.model.Node var44 = var32.getNode(var41);
    boolean var45 = var24.equals((java.lang.Object)var41);
    demo.pathplanning.model.CartesianGraph var48 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var49 = var48.getXSize();
    int var50 = var48.getYSize();
    int var51 = var48.getYSize();
    demo.pathplanning.model.CartesianGraph var54 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var55 = var54.getXSize();
    int var56 = var54.getYSize();
    int var57 = var54.getYSize();
    demo.pathplanning.model.CartesianGraph var58 = new demo.pathplanning.model.CartesianGraph(var51, var57);
    int var59 = var58.getXSize();
    demo.pathplanning.model.CartesianGraph var62 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.algorithms.AStar var63 = new demo.pathplanning.algorithms.AStar(var62);
    java.lang.String var64 = var62.toString();
    demo.pathplanning.model.CartesianGraph var67 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var70 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var71 = new demo.pathplanning.model.Location(1, 1);
    boolean var73 = var71.equals((java.lang.Object)0L);
    demo.pathplanning.model.Node var74 = var62.getNode(var71);
    demo.pathplanning.model.CartesianGraph var77 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var78 = var77.getXSize();
    demo.pathplanning.algorithms.AStar var79 = new demo.pathplanning.algorithms.AStar(var77);
    demo.pathplanning.model.CartesianGraph var82 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var85 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var86 = new demo.pathplanning.model.Location(1, 1);
    boolean var88 = var86.equals((java.lang.Object)0L);
    demo.pathplanning.model.Node var89 = var77.getNode(var86);
    int var90 = var77.getXSize();
    demo.pathplanning.model.Node var91 = new demo.pathplanning.model.Node(var58, var71, var90);
    java.lang.String var92 = var71.toString();
    java.lang.String var93 = var71.toString();
    java.lang.String var94 = var71.toString();
    java.util.List var95 = var17.getPath(var41, var71);

  }

  public void test445() throws Throwable {

    demo.pathplanning.model.CartesianGraph var2 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.algorithms.AStar var3 = new demo.pathplanning.algorithms.AStar(var2);
    java.lang.String var4 = var2.toString();
    demo.pathplanning.model.CartesianGraph var7 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var10 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var11 = new demo.pathplanning.model.Location(1, 1);
    boolean var13 = var11.equals((java.lang.Object)0L);
    demo.pathplanning.model.Node var14 = var2.getNode(var11);
    java.lang.String var15 = var11.toString();
    demo.pathplanning.model.CartesianGraph var18 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.algorithms.AStar var19 = new demo.pathplanning.algorithms.AStar(var18);
    demo.pathplanning.model.CartesianGraph var20 = var19.getGraph();
    demo.pathplanning.model.CartesianGraph var21 = var19.getGraph();
    demo.pathplanning.algorithms.PathPlanningContext var22 = new demo.pathplanning.algorithms.PathPlanningContext((demo.pathplanning.algorithms.PathPlanner)var19);
    demo.pathplanning.model.CartesianGraph var23 = var19.getGraph();
    int var24 = var23.getYSize();
    demo.pathplanning.model.CartesianGraph var27 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var30 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var31 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var34 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var37 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var38 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.Node var39 = new demo.pathplanning.model.Node(var23, var31, 1);
    boolean var40 = var11.equals((java.lang.Object)1);
    int var41 = var11.getX();
    int var42 = var11.getY();
    int var43 = var11.getY();
    java.lang.String var44 = var11.toString();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var4 + "' != '" + "0,\n"+ "'", var4.equals("0,\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var13 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var14);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var15 + "' != '" + "(1,1)"+ "'", var15.equals("(1,1)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var20);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var21);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var23);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var24 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var40 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var41 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var42 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var43 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var44 + "' != '" + "(1,1)"+ "'", var44.equals("(1,1)"));

  }

  public void test446() throws Throwable {

    demo.pathplanning.model.CartesianGraph var2 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var3 = var2.getXSize();
    int var4 = var2.getYSize();
    int var5 = var2.getYSize();
    demo.pathplanning.model.CartesianGraph var8 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var9 = var8.getXSize();
    int var10 = var8.getYSize();
    int var11 = var8.getYSize();
    demo.pathplanning.model.CartesianGraph var12 = new demo.pathplanning.model.CartesianGraph(var5, var11);
    demo.pathplanning.model.CartesianGraph var15 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var18 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var19 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var20 = new demo.pathplanning.model.CartesianGraph(var5, 1);
    java.lang.String var21 = var20.toString();
    demo.pathplanning.model.CartesianGraph var24 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var27 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var28 = new demo.pathplanning.model.Location(1, 1);
    boolean var30 = var28.equals((java.lang.Object)0L);
    demo.pathplanning.model.Node var31 = var20.getNode(var28);
    demo.pathplanning.model.CartesianGraph var34 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var37 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var38 = new demo.pathplanning.model.Location(1, 1);
    boolean var40 = var38.equals((java.lang.Object)0L);
    int var41 = var38.getX();
    int var42 = var38.getX();
    demo.pathplanning.model.CartesianGraph var45 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var46 = var45.getXSize();
    demo.pathplanning.model.Node var47 = new demo.pathplanning.model.Node(var20, var38, var46);
    demo.pathplanning.model.CartesianGraph var50 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.algorithms.AStar var51 = new demo.pathplanning.algorithms.AStar(var50);
    demo.pathplanning.model.CartesianGraph var52 = var51.getGraph();
    demo.pathplanning.model.CartesianGraph var53 = var51.getGraph();
    demo.pathplanning.algorithms.PathPlanningContext var54 = new demo.pathplanning.algorithms.PathPlanningContext((demo.pathplanning.algorithms.PathPlanner)var51);
    demo.pathplanning.model.CartesianGraph var55 = var51.getGraph();
    int var56 = var55.getYSize();
    demo.pathplanning.model.CartesianGraph var57 = new demo.pathplanning.model.CartesianGraph(var46, var56);
    demo.pathplanning.model.CartesianGraph var60 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var63 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var64 = new demo.pathplanning.model.Location(1, 1);
    int var65 = var64.getY();
    demo.pathplanning.model.CartesianGraph var68 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.algorithms.AStar var69 = new demo.pathplanning.algorithms.AStar(var68);
    demo.pathplanning.model.CartesianGraph var70 = var69.getGraph();
    demo.pathplanning.model.CartesianGraph var71 = var69.getGraph();
    demo.pathplanning.model.CartesianGraph var72 = var69.getGraph();
    demo.pathplanning.algorithms.AStar var73 = new demo.pathplanning.algorithms.AStar(var72);
    int var74 = var72.getYSize();
    demo.pathplanning.model.Node var75 = new demo.pathplanning.model.Node(var57, var64, var74);
    int var76 = var57.getYSize();
    int var77 = var57.getXSize();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var3 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var4 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var5 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var9 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var11 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var21 + "' != '" + "0,\n"+ "'", var21.equals("0,\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var30 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var31);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var40 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var41 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var42 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var46 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var52);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var53);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var55);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var56 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var65 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var70);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var71);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var72);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var74 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var76 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var77 == 1);

  }

  public void test447() throws Throwable {

    demo.pathplanning.model.CartesianGraph var2 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var3 = var2.getXSize();
    int var4 = var2.getYSize();
    demo.pathplanning.model.CartesianGraph var7 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.algorithms.AStar var8 = new demo.pathplanning.algorithms.AStar(var7);
    java.lang.String var9 = var7.toString();
    demo.pathplanning.model.CartesianGraph var12 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var15 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var16 = new demo.pathplanning.model.Location(1, 1);
    boolean var18 = var16.equals((java.lang.Object)0L);
    demo.pathplanning.model.Node var19 = var7.getNode(var16);
    demo.pathplanning.model.CartesianGraph var22 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var25 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var26 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var29 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var30 = var29.getXSize();
    demo.pathplanning.model.CartesianGraph var33 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var34 = new demo.pathplanning.model.CartesianGraph(var30, 1);
    demo.pathplanning.model.Location var35 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.Node var36 = new demo.pathplanning.model.Node(var2, var16, 1);
    int var37 = var16.getX();
    demo.pathplanning.model.CartesianGraph var40 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var41 = var40.getXSize();
    demo.pathplanning.model.CartesianGraph var44 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var45 = new demo.pathplanning.model.CartesianGraph(var41, 1);
    boolean var46 = var16.equals((java.lang.Object)var41);
    int var47 = var16.getY();
    int var48 = var16.getY();
    int var49 = var16.getY();
    demo.pathplanning.model.CartesianGraph var52 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var53 = var52.getXSize();
    int var54 = var52.getYSize();
    demo.pathplanning.model.CartesianGraph var57 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var58 = var57.getXSize();
    int var59 = var57.getYSize();
    demo.pathplanning.model.CartesianGraph var62 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.algorithms.AStar var63 = new demo.pathplanning.algorithms.AStar(var62);
    java.lang.String var64 = var62.toString();
    demo.pathplanning.model.CartesianGraph var67 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var70 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var71 = new demo.pathplanning.model.Location(1, 1);
    boolean var73 = var71.equals((java.lang.Object)0L);
    demo.pathplanning.model.Node var74 = var62.getNode(var71);
    demo.pathplanning.model.CartesianGraph var77 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var80 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var81 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var84 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var85 = var84.getXSize();
    demo.pathplanning.model.CartesianGraph var88 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var89 = new demo.pathplanning.model.CartesianGraph(var85, 1);
    demo.pathplanning.model.Location var90 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.Node var91 = new demo.pathplanning.model.Node(var57, var71, 1);
    demo.pathplanning.model.CartesianGraph var92 = new demo.pathplanning.model.CartesianGraph(var54, 1);
    boolean var93 = var16.equals((java.lang.Object)var92);
    demo.pathplanning.algorithms.AStar var94 = new demo.pathplanning.algorithms.AStar(var92);
    demo.pathplanning.model.CartesianGraph var95 = var94.getGraph();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var3 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var4 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var9 + "' != '" + "0,\n"+ "'", var9.equals("0,\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var18 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var19);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var30 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var37 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var41 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var46 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var47 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var48 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var49 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var53 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var54 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var58 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var59 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var64 + "' != '" + "0,\n"+ "'", var64.equals("0,\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var73 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var74);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var85 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var93 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var95);

  }

  public void test448() throws Throwable {

    demo.pathplanning.model.CartesianGraph var2 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var3 = var2.getXSize();
    int var4 = var2.getYSize();
    int var5 = var2.getYSize();
    demo.pathplanning.model.CartesianGraph var8 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var9 = var8.getXSize();
    int var10 = var8.getYSize();
    int var11 = var8.getYSize();
    demo.pathplanning.model.CartesianGraph var12 = new demo.pathplanning.model.CartesianGraph(var5, var11);
    demo.pathplanning.model.CartesianGraph var15 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var18 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var19 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var20 = new demo.pathplanning.model.CartesianGraph(var5, 1);
    java.lang.String var21 = var20.toString();
    demo.pathplanning.model.CartesianGraph var24 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var27 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var28 = new demo.pathplanning.model.Location(1, 1);
    boolean var30 = var28.equals((java.lang.Object)0L);
    demo.pathplanning.model.Node var31 = var20.getNode(var28);
    demo.pathplanning.model.CartesianGraph var34 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var37 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var38 = new demo.pathplanning.model.Location(1, 1);
    boolean var40 = var38.equals((java.lang.Object)0L);
    int var41 = var38.getX();
    int var42 = var38.getX();
    demo.pathplanning.model.CartesianGraph var45 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var46 = var45.getXSize();
    demo.pathplanning.model.Node var47 = new demo.pathplanning.model.Node(var20, var38, var46);
    int var48 = var47.getCost();
    java.util.Collection var49 = var47.getNeighbors();
    demo.pathplanning.model.CartesianGraph var52 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var53 = var52.getXSize();
    demo.pathplanning.algorithms.AStar var54 = new demo.pathplanning.algorithms.AStar(var52);
    demo.pathplanning.model.CartesianGraph var57 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var60 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var61 = new demo.pathplanning.model.Location(1, 1);
    boolean var63 = var61.equals((java.lang.Object)0L);
    demo.pathplanning.model.Node var64 = var52.getNode(var61);
    demo.pathplanning.algorithms.AStar var65 = new demo.pathplanning.algorithms.AStar(var52);
    demo.pathplanning.model.CartesianGraph var66 = var65.getGraph();
    boolean var67 = var47.equals((java.lang.Object)var65);
    demo.pathplanning.algorithms.PathPlanningContext var68 = new demo.pathplanning.algorithms.PathPlanningContext((demo.pathplanning.algorithms.PathPlanner)var65);
    demo.pathplanning.model.CartesianGraph var69 = var65.getGraph();
    demo.pathplanning.model.CartesianGraph var70 = var65.getGraph();
    demo.pathplanning.model.CartesianGraph var71 = var65.getGraph();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var3 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var4 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var5 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var9 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var11 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var21 + "' != '" + "0,\n"+ "'", var21.equals("0,\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var30 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var31);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var40 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var41 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var42 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var46 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var48 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var49);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var53 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var63 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var64);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var66);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var67 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var69);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var70);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var71);

  }

  public void test449() throws Throwable {

    demo.pathplanning.model.CartesianGraph var2 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.algorithms.AStar var3 = new demo.pathplanning.algorithms.AStar(var2);
    demo.pathplanning.model.CartesianGraph var4 = var3.getGraph();
    demo.pathplanning.model.CartesianGraph var5 = var3.getGraph();
    demo.pathplanning.algorithms.PathPlanningContext var6 = new demo.pathplanning.algorithms.PathPlanningContext((demo.pathplanning.algorithms.PathPlanner)var3);
    demo.pathplanning.model.CartesianGraph var7 = var3.getGraph();
    demo.pathplanning.model.CartesianGraph var8 = var3.getGraph();
    demo.pathplanning.model.CartesianGraph var11 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var12 = var11.getXSize();
    demo.pathplanning.algorithms.AStar var13 = new demo.pathplanning.algorithms.AStar(var11);
    demo.pathplanning.model.CartesianGraph var16 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var19 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var20 = new demo.pathplanning.model.Location(1, 1);
    boolean var22 = var20.equals((java.lang.Object)0L);
    demo.pathplanning.model.Node var23 = var11.getNode(var20);
    int var24 = var20.getY();
    demo.pathplanning.model.CartesianGraph var27 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var28 = var27.getXSize();
    int var29 = var27.getYSize();
    int var30 = var27.getYSize();
    demo.pathplanning.model.CartesianGraph var33 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var34 = var33.getXSize();
    int var35 = var33.getYSize();
    int var36 = var33.getYSize();
    demo.pathplanning.model.CartesianGraph var37 = new demo.pathplanning.model.CartesianGraph(var30, var36);
    int var38 = var37.getXSize();
    demo.pathplanning.model.CartesianGraph var41 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.algorithms.AStar var42 = new demo.pathplanning.algorithms.AStar(var41);
    java.lang.String var43 = var41.toString();
    demo.pathplanning.model.CartesianGraph var46 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var49 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var50 = new demo.pathplanning.model.Location(1, 1);
    boolean var52 = var50.equals((java.lang.Object)0L);
    demo.pathplanning.model.Node var53 = var41.getNode(var50);
    demo.pathplanning.model.CartesianGraph var56 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var57 = var56.getXSize();
    demo.pathplanning.algorithms.AStar var58 = new demo.pathplanning.algorithms.AStar(var56);
    demo.pathplanning.model.CartesianGraph var61 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var64 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var65 = new demo.pathplanning.model.Location(1, 1);
    boolean var67 = var65.equals((java.lang.Object)0L);
    demo.pathplanning.model.Node var68 = var56.getNode(var65);
    int var69 = var56.getXSize();
    demo.pathplanning.model.Node var70 = new demo.pathplanning.model.Node(var37, var50, var69);
    java.lang.String var71 = var37.toString();
    boolean var72 = var20.equals((java.lang.Object)var71);
    java.lang.String var73 = var20.toString();
    demo.pathplanning.model.Node var74 = var8.getNode(var20);
    int var75 = var20.getX();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var8);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var12 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var22 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var23);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var24 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var28 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var29 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var30 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var34 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var35 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var36 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var38 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var43 + "' != '" + "0,\n"+ "'", var43.equals("0,\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var52 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var53);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var57 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var67 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var68);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var69 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var71 + "' != '" + "0,\n"+ "'", var71.equals("0,\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var72 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var73 + "' != '" + "(1,1)"+ "'", var73.equals("(1,1)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var74);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var75 == 1);

  }

  public void test450() throws Throwable {

    demo.pathplanning.model.CartesianGraph var2 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.algorithms.AStar var3 = new demo.pathplanning.algorithms.AStar(var2);
    demo.pathplanning.model.CartesianGraph var4 = var3.getGraph();
    demo.pathplanning.model.CartesianGraph var5 = var3.getGraph();
    demo.pathplanning.algorithms.PathPlanningContext var6 = new demo.pathplanning.algorithms.PathPlanningContext((demo.pathplanning.algorithms.PathPlanner)var3);
    demo.pathplanning.model.CartesianGraph var7 = var3.getGraph();
    int var8 = var7.getYSize();
    java.lang.String var9 = var7.toString();
    int var10 = var7.getYSize();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var8 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var9 + "' != '" + "0,\n"+ "'", var9.equals("0,\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == 1);

  }

  public void test451() throws Throwable {

    demo.pathplanning.model.CartesianGraph var2 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var3 = var2.getXSize();
    int var4 = var2.getYSize();
    int var5 = var2.getYSize();
    demo.pathplanning.model.CartesianGraph var8 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var9 = new demo.pathplanning.model.Location(var5, 1);
    java.lang.String var10 = var9.toString();
    demo.pathplanning.model.CartesianGraph var13 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var14 = var13.getXSize();
    int var15 = var13.getYSize();
    int var16 = var13.getYSize();
    demo.pathplanning.model.CartesianGraph var19 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var20 = var19.getXSize();
    int var21 = var19.getYSize();
    int var22 = var19.getYSize();
    demo.pathplanning.model.CartesianGraph var23 = new demo.pathplanning.model.CartesianGraph(var16, var22);
    demo.pathplanning.model.CartesianGraph var26 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var29 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var30 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var31 = new demo.pathplanning.model.CartesianGraph(var16, 1);
    java.lang.String var32 = var31.toString();
    demo.pathplanning.model.CartesianGraph var35 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var38 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var39 = new demo.pathplanning.model.Location(1, 1);
    boolean var41 = var39.equals((java.lang.Object)0L);
    demo.pathplanning.model.Node var42 = var31.getNode(var39);
    demo.pathplanning.model.CartesianGraph var45 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var48 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var49 = new demo.pathplanning.model.Location(1, 1);
    boolean var51 = var49.equals((java.lang.Object)0L);
    int var52 = var49.getX();
    int var53 = var49.getX();
    demo.pathplanning.model.CartesianGraph var56 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var57 = var56.getXSize();
    demo.pathplanning.model.Node var58 = new demo.pathplanning.model.Node(var31, var49, var57);
    int var59 = var58.getCost();
    java.util.Collection var60 = var58.getNeighbors();
    demo.pathplanning.model.CartesianGraph var63 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var64 = var63.getXSize();
    demo.pathplanning.algorithms.AStar var65 = new demo.pathplanning.algorithms.AStar(var63);
    demo.pathplanning.model.CartesianGraph var68 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var71 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var72 = new demo.pathplanning.model.Location(1, 1);
    boolean var74 = var72.equals((java.lang.Object)0L);
    demo.pathplanning.model.Node var75 = var63.getNode(var72);
    demo.pathplanning.algorithms.AStar var76 = new demo.pathplanning.algorithms.AStar(var63);
    demo.pathplanning.model.CartesianGraph var77 = var76.getGraph();
    boolean var78 = var58.equals((java.lang.Object)var76);
    demo.pathplanning.algorithms.PathPlanningContext var79 = new demo.pathplanning.algorithms.PathPlanningContext((demo.pathplanning.algorithms.PathPlanner)var76);
    demo.pathplanning.model.CartesianGraph var80 = var76.getGraph();
    boolean var81 = var9.equals((java.lang.Object)var80);
    int var82 = var9.getX();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var3 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var4 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var5 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var10 + "' != '" + "(1,1)"+ "'", var10.equals("(1,1)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var14 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var15 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var16 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var20 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var21 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var22 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var32 + "' != '" + "0,\n"+ "'", var32.equals("0,\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var41 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var42);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var51 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var52 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var53 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var57 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var59 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var60);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var64 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var74 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var75);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var77);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var78 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var80);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var81 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var82 == 1);

  }

  public void test452() throws Throwable {

    demo.pathplanning.model.CartesianGraph var2 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var5 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.algorithms.AStar var6 = new demo.pathplanning.algorithms.AStar(var5);
    demo.pathplanning.model.CartesianGraph var7 = var6.getGraph();
    demo.pathplanning.model.CartesianGraph var8 = var6.getGraph();
    demo.pathplanning.algorithms.PathPlanningContext var9 = new demo.pathplanning.algorithms.PathPlanningContext((demo.pathplanning.algorithms.PathPlanner)var6);
    demo.pathplanning.model.CartesianGraph var10 = var6.getGraph();
    int var11 = var10.getYSize();
    demo.pathplanning.model.CartesianGraph var14 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var17 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var18 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var21 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var24 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var25 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.Node var26 = new demo.pathplanning.model.Node(var10, var18, 1);
    demo.pathplanning.model.CartesianGraph var29 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var32 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var33 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var36 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var37 = var36.getXSize();
    int var38 = var36.getYSize();
    int var39 = var36.getYSize();
    demo.pathplanning.model.CartesianGraph var42 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var43 = var42.getXSize();
    int var44 = var42.getYSize();
    int var45 = var42.getYSize();
    demo.pathplanning.model.CartesianGraph var46 = new demo.pathplanning.model.CartesianGraph(var39, var45);
    demo.pathplanning.model.CartesianGraph var47 = new demo.pathplanning.model.CartesianGraph(1, var39);
    demo.pathplanning.model.CartesianGraph var48 = new demo.pathplanning.model.CartesianGraph(1, var39);
    demo.pathplanning.model.Location var49 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var52 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var53 = var52.getXSize();
    demo.pathplanning.model.CartesianGraph var54 = new demo.pathplanning.model.CartesianGraph(1, var53);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var8);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var10);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var11 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var37 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var38 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var39 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var43 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var44 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var45 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var53 == 1);

  }

  public void test453() throws Throwable {

    demo.pathplanning.model.CartesianGraph var2 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.algorithms.AStar var3 = new demo.pathplanning.algorithms.AStar(var2);
    demo.pathplanning.model.CartesianGraph var4 = var3.getGraph();
    demo.pathplanning.model.CartesianGraph var5 = var3.getGraph();
    demo.pathplanning.algorithms.PathPlanningContext var6 = new demo.pathplanning.algorithms.PathPlanningContext((demo.pathplanning.algorithms.PathPlanner)var3);
    demo.pathplanning.model.CartesianGraph var7 = var3.getGraph();
    int var8 = var7.getYSize();
    demo.pathplanning.model.CartesianGraph var11 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var14 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var15 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var18 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var21 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var22 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.Node var23 = new demo.pathplanning.model.Node(var7, var15, 1);
    demo.pathplanning.model.CartesianGraph var26 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var27 = var26.getXSize();
    int var28 = var26.getYSize();
    int var29 = var26.getYSize();
    demo.pathplanning.model.CartesianGraph var32 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var33 = var32.getXSize();
    int var34 = var32.getYSize();
    int var35 = var32.getYSize();
    demo.pathplanning.model.CartesianGraph var36 = new demo.pathplanning.model.CartesianGraph(var29, var35);
    demo.pathplanning.model.CartesianGraph var39 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var42 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var43 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var44 = new demo.pathplanning.model.CartesianGraph(var29, 1);
    java.lang.String var45 = var44.toString();
    demo.pathplanning.model.CartesianGraph var48 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var51 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var52 = new demo.pathplanning.model.Location(1, 1);
    boolean var54 = var52.equals((java.lang.Object)0L);
    demo.pathplanning.model.Node var55 = var44.getNode(var52);
    demo.pathplanning.model.CartesianGraph var58 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var61 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var62 = new demo.pathplanning.model.Location(1, 1);
    boolean var64 = var62.equals((java.lang.Object)0L);
    int var65 = var62.getX();
    int var66 = var62.getX();
    demo.pathplanning.model.CartesianGraph var69 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var70 = var69.getXSize();
    demo.pathplanning.model.Node var71 = new demo.pathplanning.model.Node(var44, var62, var70);
    int var72 = var71.getCost();
    java.util.Collection var73 = var71.getNeighbors();
    demo.pathplanning.model.CartesianGraph var76 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var77 = var76.getXSize();
    demo.pathplanning.algorithms.AStar var78 = new demo.pathplanning.algorithms.AStar(var76);
    demo.pathplanning.model.CartesianGraph var81 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var84 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var85 = new demo.pathplanning.model.Location(1, 1);
    boolean var87 = var85.equals((java.lang.Object)0L);
    demo.pathplanning.model.Node var88 = var76.getNode(var85);
    demo.pathplanning.algorithms.AStar var89 = new demo.pathplanning.algorithms.AStar(var76);
    demo.pathplanning.model.CartesianGraph var90 = var89.getGraph();
    boolean var91 = var71.equals((java.lang.Object)var89);
    java.lang.String var92 = var71.toString();
    boolean var93 = var23.equals((java.lang.Object)var71);
    int var94 = var23.getCost();
    int var95 = var23.getCost();
    demo.pathplanning.model.Location var96 = var23.getLocation();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var8 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var27 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var28 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var29 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var33 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var34 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var35 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var45 + "' != '" + "0,\n"+ "'", var45.equals("0,\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var54 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var55);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var64 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var65 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var66 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var70 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var72 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var73);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var77 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var87 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var88);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var90);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var91 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var92 + "' != '" + "(1,1)=1"+ "'", var92.equals("(1,1)=1"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var93 == true);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var94 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var95 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var96);

  }

  public void test454() throws Throwable {

    demo.pathplanning.model.CartesianGraph var2 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.algorithms.AStar var3 = new demo.pathplanning.algorithms.AStar(var2);
    demo.pathplanning.model.CartesianGraph var4 = var3.getGraph();
    demo.pathplanning.model.CartesianGraph var5 = var3.getGraph();
    demo.pathplanning.algorithms.PathPlanningContext var6 = new demo.pathplanning.algorithms.PathPlanningContext((demo.pathplanning.algorithms.PathPlanner)var3);
    demo.pathplanning.model.CartesianGraph var7 = var3.getGraph();
    int var8 = var7.getYSize();
    demo.pathplanning.model.CartesianGraph var11 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var14 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var15 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var18 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var21 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var22 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.Node var23 = new demo.pathplanning.model.Node(var7, var15, 1);
    java.util.Collection var24 = var23.getNeighbors();
    java.util.Collection var25 = var23.getNeighbors();
    java.lang.String var26 = var23.toString();
    java.lang.String var27 = var23.toString();
    int var28 = var23.getCost();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var8 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var24);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var25);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var26 + "' != '" + "(1,1)=1"+ "'", var26.equals("(1,1)=1"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var27 + "' != '" + "(1,1)=1"+ "'", var27.equals("(1,1)=1"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var28 == 1);

  }

  public void test455() throws Throwable {

    demo.pathplanning.model.CartesianGraph var2 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var3 = var2.getXSize();
    demo.pathplanning.algorithms.AStar var4 = new demo.pathplanning.algorithms.AStar(var2);
    demo.pathplanning.model.CartesianGraph var7 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var10 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var11 = new demo.pathplanning.model.Location(1, 1);
    boolean var13 = var11.equals((java.lang.Object)0L);
    demo.pathplanning.model.Node var14 = var2.getNode(var11);
    int var15 = var11.getY();
    int var16 = var11.getY();
    demo.pathplanning.model.CartesianGraph var20 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.algorithms.AStar var21 = new demo.pathplanning.algorithms.AStar(var20);
    demo.pathplanning.model.CartesianGraph var22 = var21.getGraph();
    demo.pathplanning.model.CartesianGraph var23 = var21.getGraph();
    demo.pathplanning.algorithms.PathPlanningContext var24 = new demo.pathplanning.algorithms.PathPlanningContext((demo.pathplanning.algorithms.PathPlanner)var21);
    demo.pathplanning.model.CartesianGraph var25 = var21.getGraph();
    int var26 = var25.getYSize();
    demo.pathplanning.model.CartesianGraph var29 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var32 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var33 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var36 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var39 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var40 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.Node var41 = new demo.pathplanning.model.Node(var25, var33, 1);
    demo.pathplanning.model.CartesianGraph var44 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var47 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var48 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var51 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var52 = var51.getXSize();
    int var53 = var51.getYSize();
    int var54 = var51.getYSize();
    demo.pathplanning.model.CartesianGraph var57 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var58 = var57.getXSize();
    int var59 = var57.getYSize();
    int var60 = var57.getYSize();
    demo.pathplanning.model.CartesianGraph var61 = new demo.pathplanning.model.CartesianGraph(var54, var60);
    demo.pathplanning.model.CartesianGraph var62 = new demo.pathplanning.model.CartesianGraph(1, var54);
    demo.pathplanning.model.CartesianGraph var63 = new demo.pathplanning.model.CartesianGraph(1, var54);
    demo.pathplanning.model.CartesianGraph var64 = new demo.pathplanning.model.CartesianGraph(0, 1);
    demo.pathplanning.model.CartesianGraph var65 = new demo.pathplanning.model.CartesianGraph(var16, 0);
    java.lang.String var66 = var65.toString();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var3 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var13 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var14);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var15 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var16 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var22);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var23);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var25);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var26 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var52 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var53 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var54 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var58 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var59 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var60 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var66 + "' != '" + "\n"+ "'", var66.equals("\n"));

  }

  public void test456() throws Throwable {

    demo.pathplanning.model.CartesianGraph var2 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.algorithms.AStar var3 = new demo.pathplanning.algorithms.AStar(var2);
    demo.pathplanning.model.CartesianGraph var4 = var3.getGraph();
    demo.pathplanning.model.CartesianGraph var5 = var3.getGraph();
    demo.pathplanning.algorithms.PathPlanningContext var6 = new demo.pathplanning.algorithms.PathPlanningContext((demo.pathplanning.algorithms.PathPlanner)var3);
    demo.pathplanning.model.CartesianGraph var7 = var3.getGraph();
    int var8 = var7.getYSize();
    demo.pathplanning.model.CartesianGraph var11 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var14 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var15 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var18 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var21 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var22 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.Node var23 = new demo.pathplanning.model.Node(var7, var15, 1);
    int var24 = var23.getCost();
    demo.pathplanning.model.CartesianGraph var27 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var28 = var27.getXSize();
    int var29 = var27.getYSize();
    int var30 = var27.getYSize();
    demo.pathplanning.model.CartesianGraph var33 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var34 = new demo.pathplanning.model.Location(var30, 1);
    demo.pathplanning.model.CartesianGraph var35 = new demo.pathplanning.model.CartesianGraph(var24, 1);
    demo.pathplanning.model.CartesianGraph var38 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var41 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var42 = new demo.pathplanning.model.Location(1, 1);
    boolean var44 = var42.equals((java.lang.Object)0L);
    demo.pathplanning.model.Node var45 = var35.getNode(var42);
    java.lang.String var46 = var35.toString();
    int var47 = var35.getYSize();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var8 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var24 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var28 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var29 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var30 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var44 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var45);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var46 + "' != '" + "0,\n"+ "'", var46.equals("0,\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var47 == 1);

  }

  public void test457() throws Throwable {

    demo.pathplanning.model.CartesianGraph var2 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.algorithms.AStar var3 = new demo.pathplanning.algorithms.AStar(var2);
    demo.pathplanning.model.CartesianGraph var4 = var3.getGraph();
    demo.pathplanning.model.CartesianGraph var5 = var3.getGraph();
    demo.pathplanning.algorithms.PathPlanningContext var6 = new demo.pathplanning.algorithms.PathPlanningContext((demo.pathplanning.algorithms.PathPlanner)var3);
    demo.pathplanning.model.CartesianGraph var7 = var3.getGraph();
    int var8 = var7.getYSize();
    demo.pathplanning.model.CartesianGraph var11 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var14 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var15 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var18 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var21 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var22 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.Node var23 = new demo.pathplanning.model.Node(var7, var15, 1);
    java.util.Collection var24 = var23.getNeighbors();
    int var25 = var23.getCost();
    int var26 = var23.getCost();
    java.lang.String var27 = var23.toString();
    demo.pathplanning.model.CartesianGraph var30 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.algorithms.AStar var31 = new demo.pathplanning.algorithms.AStar(var30);
    demo.pathplanning.model.CartesianGraph var32 = var31.getGraph();
    demo.pathplanning.model.CartesianGraph var33 = var31.getGraph();
    demo.pathplanning.algorithms.PathPlanningContext var34 = new demo.pathplanning.algorithms.PathPlanningContext((demo.pathplanning.algorithms.PathPlanner)var31);
    demo.pathplanning.model.CartesianGraph var35 = var31.getGraph();
    int var36 = var35.getYSize();
    demo.pathplanning.model.CartesianGraph var39 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var42 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var43 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var46 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var49 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var50 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.Node var51 = new demo.pathplanning.model.Node(var35, var43, 1);
    java.lang.String var52 = var51.toString();
    boolean var53 = var23.equals((java.lang.Object)var51);
    java.lang.String var54 = var23.toString();
    int var55 = var23.getCost();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var8 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var24);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var25 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var26 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var27 + "' != '" + "(1,1)=1"+ "'", var27.equals("(1,1)=1"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var32);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var33);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var35);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var36 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var52 + "' != '" + "(1,1)=1"+ "'", var52.equals("(1,1)=1"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var53 == true);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var54 + "' != '" + "(1,1)=1"+ "'", var54.equals("(1,1)=1"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var55 == 1);

  }

  public void test458() throws Throwable {

    demo.pathplanning.model.CartesianGraph var2 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var3 = var2.getXSize();
    int var4 = var2.getYSize();
    int var5 = var2.getYSize();
    demo.pathplanning.model.CartesianGraph var8 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var9 = var8.getXSize();
    int var10 = var8.getYSize();
    int var11 = var8.getYSize();
    demo.pathplanning.model.CartesianGraph var12 = new demo.pathplanning.model.CartesianGraph(var5, var11);
    demo.pathplanning.model.CartesianGraph var15 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var18 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var19 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var20 = new demo.pathplanning.model.CartesianGraph(var5, 1);
    java.lang.String var21 = var20.toString();
    demo.pathplanning.model.CartesianGraph var24 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var27 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var28 = new demo.pathplanning.model.Location(1, 1);
    boolean var30 = var28.equals((java.lang.Object)0L);
    demo.pathplanning.model.Node var31 = var20.getNode(var28);
    demo.pathplanning.model.CartesianGraph var34 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var37 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var38 = new demo.pathplanning.model.Location(1, 1);
    boolean var40 = var38.equals((java.lang.Object)0L);
    int var41 = var38.getX();
    int var42 = var38.getX();
    demo.pathplanning.model.CartesianGraph var45 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var46 = var45.getXSize();
    demo.pathplanning.model.Node var47 = new demo.pathplanning.model.Node(var20, var38, var46);
    demo.pathplanning.model.CartesianGraph var50 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var53 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var54 = new demo.pathplanning.model.Location(1, 1);
    boolean var56 = var54.equals((java.lang.Object)0L);
    int var57 = var54.getX();
    int var58 = var54.getX();
    int var59 = var54.getY();
    demo.pathplanning.model.CartesianGraph var62 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var63 = var62.getXSize();
    demo.pathplanning.algorithms.AStar var64 = new demo.pathplanning.algorithms.AStar(var62);
    demo.pathplanning.model.CartesianGraph var67 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var70 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var71 = new demo.pathplanning.model.Location(1, 1);
    boolean var73 = var71.equals((java.lang.Object)0L);
    demo.pathplanning.model.Node var74 = var62.getNode(var71);
    boolean var75 = var54.equals((java.lang.Object)var71);
    int var76 = var71.getY();
    int var77 = var71.getX();
    demo.pathplanning.model.CartesianGraph var80 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var81 = var80.getXSize();
    demo.pathplanning.algorithms.AStar var82 = new demo.pathplanning.algorithms.AStar(var80);
    demo.pathplanning.model.CartesianGraph var85 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var88 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var89 = new demo.pathplanning.model.Location(1, 1);
    boolean var91 = var89.equals((java.lang.Object)0L);
    demo.pathplanning.model.Node var92 = var80.getNode(var89);
    int var93 = var89.getY();
    int var94 = var89.getY();
    demo.pathplanning.model.CartesianGraph var95 = new demo.pathplanning.model.CartesianGraph(var77, var94);
    int var96 = var95.getYSize();
    boolean var97 = var38.equals((java.lang.Object)var96);
    int var98 = var38.getY();
    java.lang.String var99 = var38.toString();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var3 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var4 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var5 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var9 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var11 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var21 + "' != '" + "0,\n"+ "'", var21.equals("0,\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var30 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var31);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var40 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var41 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var42 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var46 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var56 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var57 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var58 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var59 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var63 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var73 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var74);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var75 == true);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var76 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var77 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var81 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var91 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var92);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var93 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var94 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var96 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var97 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var98 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var99 + "' != '" + "(1,1)"+ "'", var99.equals("(1,1)"));

  }

  public void test459() throws Throwable {

    demo.pathplanning.model.CartesianGraph var2 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var3 = var2.getXSize();
    int var4 = var2.getYSize();
    int var5 = var2.getYSize();
    demo.pathplanning.model.CartesianGraph var8 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var9 = new demo.pathplanning.model.Location(var5, 1);
    demo.pathplanning.model.CartesianGraph var12 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var13 = var12.getXSize();
    demo.pathplanning.algorithms.AStar var14 = new demo.pathplanning.algorithms.AStar(var12);
    int var15 = var12.getYSize();
    int var16 = var12.getXSize();
    demo.pathplanning.model.CartesianGraph var19 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.algorithms.AStar var20 = new demo.pathplanning.algorithms.AStar(var19);
    demo.pathplanning.model.CartesianGraph var21 = var20.getGraph();
    demo.pathplanning.model.CartesianGraph var22 = var20.getGraph();
    demo.pathplanning.algorithms.PathPlanningContext var23 = new demo.pathplanning.algorithms.PathPlanningContext((demo.pathplanning.algorithms.PathPlanner)var20);
    demo.pathplanning.model.CartesianGraph var24 = var20.getGraph();
    int var25 = var24.getYSize();
    demo.pathplanning.model.CartesianGraph var28 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var31 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var32 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var35 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var38 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var39 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.Node var40 = new demo.pathplanning.model.Node(var24, var32, 1);
    demo.pathplanning.model.CartesianGraph var43 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var46 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var47 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var50 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var51 = var50.getXSize();
    int var52 = var50.getYSize();
    int var53 = var50.getYSize();
    demo.pathplanning.model.CartesianGraph var56 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var57 = var56.getXSize();
    int var58 = var56.getYSize();
    int var59 = var56.getYSize();
    demo.pathplanning.model.CartesianGraph var60 = new demo.pathplanning.model.CartesianGraph(var53, var59);
    demo.pathplanning.model.CartesianGraph var61 = new demo.pathplanning.model.CartesianGraph(1, var53);
    demo.pathplanning.model.CartesianGraph var64 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var67 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var68 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var71 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var72 = var71.getXSize();
    int var73 = var71.getYSize();
    int var74 = var71.getYSize();
    demo.pathplanning.model.CartesianGraph var77 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var78 = var77.getXSize();
    int var79 = var77.getYSize();
    int var80 = var77.getYSize();
    demo.pathplanning.model.CartesianGraph var81 = new demo.pathplanning.model.CartesianGraph(var74, var80);
    demo.pathplanning.model.CartesianGraph var82 = new demo.pathplanning.model.CartesianGraph(1, var74);
    demo.pathplanning.model.Location var83 = new demo.pathplanning.model.Location(1, 1);
    boolean var84 = var40.equals((java.lang.Object)1);
    demo.pathplanning.model.Location var85 = new demo.pathplanning.model.Location(var16, 1);
    demo.pathplanning.model.CartesianGraph var86 = new demo.pathplanning.model.CartesianGraph(1, var16);
    int var87 = var86.getYSize();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var3 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var4 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var5 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var13 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var15 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var16 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var21);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var22);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var24);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var25 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var51 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var52 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var53 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var57 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var58 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var59 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var72 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var73 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var74 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var78 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var79 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var80 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var84 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var87 == 1);

  }

  public void test460() throws Throwable {

    demo.pathplanning.model.CartesianGraph var2 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.algorithms.AStar var3 = new demo.pathplanning.algorithms.AStar(var2);
    demo.pathplanning.model.CartesianGraph var4 = var3.getGraph();
    demo.pathplanning.model.CartesianGraph var5 = var3.getGraph();
    demo.pathplanning.algorithms.PathPlanningContext var6 = new demo.pathplanning.algorithms.PathPlanningContext((demo.pathplanning.algorithms.PathPlanner)var3);
    demo.pathplanning.model.CartesianGraph var7 = var3.getGraph();
    int var8 = var7.getYSize();
    demo.pathplanning.model.CartesianGraph var11 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var14 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var15 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var18 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var21 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var22 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.Node var23 = new demo.pathplanning.model.Node(var7, var15, 1);
    java.util.Collection var24 = var23.getNeighbors();
    int var25 = var23.getCost();
    java.lang.String var26 = var23.toString();
    java.lang.String var27 = var23.toString();
    java.lang.String var28 = var23.toString();
    java.util.Collection var29 = var23.getNeighbors();
    demo.pathplanning.model.Location var30 = var23.getLocation();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var8 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var24);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var25 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var26 + "' != '" + "(1,1)=1"+ "'", var26.equals("(1,1)=1"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var27 + "' != '" + "(1,1)=1"+ "'", var27.equals("(1,1)=1"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var28 + "' != '" + "(1,1)=1"+ "'", var28.equals("(1,1)=1"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var29);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var30);

  }

  public void test461() throws Throwable {

    demo.pathplanning.model.CartesianGraph var2 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var3 = var2.getXSize();
    demo.pathplanning.algorithms.AStar var4 = new demo.pathplanning.algorithms.AStar(var2);
    demo.pathplanning.model.CartesianGraph var7 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var10 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var11 = new demo.pathplanning.model.Location(1, 1);
    boolean var13 = var11.equals((java.lang.Object)0L);
    demo.pathplanning.model.Node var14 = var2.getNode(var11);
    int var15 = var2.getYSize();
    demo.pathplanning.model.CartesianGraph var18 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var19 = var18.getXSize();
    int var20 = var18.getYSize();
    int var21 = var18.getYSize();
    demo.pathplanning.model.CartesianGraph var24 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var25 = new demo.pathplanning.model.Location(var21, 1);
    java.lang.String var26 = var25.toString();
    demo.pathplanning.model.CartesianGraph var29 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var32 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var33 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var36 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var37 = var36.getXSize();
    int var38 = var36.getYSize();
    int var39 = var36.getYSize();
    demo.pathplanning.model.CartesianGraph var42 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var43 = var42.getXSize();
    int var44 = var42.getYSize();
    int var45 = var42.getYSize();
    demo.pathplanning.model.CartesianGraph var46 = new demo.pathplanning.model.CartesianGraph(var39, var45);
    demo.pathplanning.model.CartesianGraph var47 = new demo.pathplanning.model.CartesianGraph(1, var39);
    demo.pathplanning.model.Node var48 = new demo.pathplanning.model.Node(var2, var25, var39);
    java.util.Collection var49 = var48.getNeighbors();
    demo.pathplanning.model.Location var50 = var48.getLocation();
    demo.pathplanning.model.CartesianGraph var53 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.algorithms.AStar var54 = new demo.pathplanning.algorithms.AStar(var53);
    demo.pathplanning.model.CartesianGraph var55 = var54.getGraph();
    demo.pathplanning.model.CartesianGraph var56 = var54.getGraph();
    demo.pathplanning.algorithms.PathPlanningContext var57 = new demo.pathplanning.algorithms.PathPlanningContext((demo.pathplanning.algorithms.PathPlanner)var54);
    demo.pathplanning.model.CartesianGraph var58 = var54.getGraph();
    int var59 = var58.getYSize();
    demo.pathplanning.model.CartesianGraph var62 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var65 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var66 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var69 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var72 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var73 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.Node var74 = new demo.pathplanning.model.Node(var58, var66, 1);
    java.util.Collection var75 = var74.getNeighbors();
    int var76 = var74.getCost();
    java.lang.String var77 = var74.toString();
    java.util.Collection var78 = var74.getNeighbors();
    java.util.Collection var79 = var74.getNeighbors();
    java.lang.String var80 = var74.toString();
    boolean var81 = var48.equals((java.lang.Object)var74);
    demo.pathplanning.model.Location var82 = var48.getLocation();
    int var83 = var82.getX();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var3 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var13 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var14);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var15 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var19 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var20 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var21 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var26 + "' != '" + "(1,1)"+ "'", var26.equals("(1,1)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var37 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var38 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var39 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var43 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var44 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var45 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var49);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var50);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var55);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var56);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var58);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var59 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var75);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var76 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var77 + "' != '" + "(1,1)=1"+ "'", var77.equals("(1,1)=1"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var78);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var79);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var80 + "' != '" + "(1,1)=1"+ "'", var80.equals("(1,1)=1"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var81 == true);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var82);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var83 == 1);

  }

  public void test462() throws Throwable {

    demo.pathplanning.model.CartesianGraph var2 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var3 = var2.getXSize();
    demo.pathplanning.algorithms.AStar var4 = new demo.pathplanning.algorithms.AStar(var2);
    demo.pathplanning.model.CartesianGraph var7 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var10 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var11 = new demo.pathplanning.model.Location(1, 1);
    boolean var13 = var11.equals((java.lang.Object)0L);
    demo.pathplanning.model.Node var14 = var2.getNode(var11);
    int var15 = var2.getXSize();
    int var16 = var2.getXSize();
    java.lang.String var17 = var2.toString();
    demo.pathplanning.algorithms.AStar var18 = new demo.pathplanning.algorithms.AStar(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var3 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var13 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var14);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var15 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var16 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var17 + "' != '" + "0,\n"+ "'", var17.equals("0,\n"));

  }

  public void test463() throws Throwable {

    demo.pathplanning.model.CartesianGraph var2 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var5 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var6 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var9 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var10 = var9.getXSize();
    int var11 = var9.getYSize();
    int var12 = var9.getYSize();
    demo.pathplanning.model.CartesianGraph var15 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var16 = var15.getXSize();
    int var17 = var15.getYSize();
    int var18 = var15.getYSize();
    demo.pathplanning.model.CartesianGraph var19 = new demo.pathplanning.model.CartesianGraph(var12, var18);
    demo.pathplanning.model.CartesianGraph var20 = new demo.pathplanning.model.CartesianGraph(1, var12);
    int var21 = var20.getYSize();
    demo.pathplanning.model.CartesianGraph var24 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var25 = var24.getXSize();
    int var26 = var24.getYSize();
    int var27 = var24.getYSize();
    demo.pathplanning.model.CartesianGraph var30 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var31 = new demo.pathplanning.model.Location(var27, 1);
    java.lang.String var32 = var31.toString();
    demo.pathplanning.model.Node var33 = var20.getNode(var31);
    int var34 = var31.getY();
    java.lang.String var35 = var31.toString();
    demo.pathplanning.model.CartesianGraph var38 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var39 = var38.getXSize();
    demo.pathplanning.algorithms.AStar var40 = new demo.pathplanning.algorithms.AStar(var38);
    demo.pathplanning.model.CartesianGraph var41 = var40.getGraph();
    boolean var42 = var31.equals((java.lang.Object)var40);
    java.lang.String var43 = var31.toString();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var11 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var12 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var16 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var17 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var18 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var21 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var25 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var26 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var27 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var32 + "' != '" + "(1,1)"+ "'", var32.equals("(1,1)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var33);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var34 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var35 + "' != '" + "(1,1)"+ "'", var35.equals("(1,1)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var39 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var41);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var42 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var43 + "' != '" + "(1,1)"+ "'", var43.equals("(1,1)"));

  }

  public void test464() throws Throwable {

    demo.pathplanning.model.CartesianGraph var2 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var3 = var2.getXSize();
    demo.pathplanning.model.CartesianGraph var6 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var7 = new demo.pathplanning.model.CartesianGraph(var3, 1);
    demo.pathplanning.model.CartesianGraph var10 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.algorithms.AStar var11 = new demo.pathplanning.algorithms.AStar(var10);
    demo.pathplanning.model.CartesianGraph var12 = var11.getGraph();
    demo.pathplanning.model.CartesianGraph var13 = var11.getGraph();
    demo.pathplanning.algorithms.PathPlanningContext var14 = new demo.pathplanning.algorithms.PathPlanningContext((demo.pathplanning.algorithms.PathPlanner)var11);
    demo.pathplanning.model.CartesianGraph var15 = var11.getGraph();
    int var16 = var15.getYSize();
    demo.pathplanning.model.CartesianGraph var17 = new demo.pathplanning.model.CartesianGraph(var3, var16);
    int var18 = var17.getXSize();
    java.lang.String var19 = var17.toString();
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      demo.pathplanning.model.Direction var20 = demo.pathplanning.model.Direction.valueOf(var19);
      fail("Expected exception of type java.lang.IllegalArgumentException");
    } catch (java.lang.IllegalArgumentException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var3 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var12);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var13);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var15);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var16 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var18 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var19 + "' != '" + "0,\n"+ "'", var19.equals("0,\n"));

  }

  public void test465() throws Throwable {

    demo.pathplanning.model.CartesianGraph var2 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var5 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var6 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var9 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var10 = var9.getXSize();
    int var11 = var9.getYSize();
    int var12 = var9.getYSize();
    demo.pathplanning.model.CartesianGraph var15 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var16 = var15.getXSize();
    int var17 = var15.getYSize();
    int var18 = var15.getYSize();
    demo.pathplanning.model.CartesianGraph var19 = new demo.pathplanning.model.CartesianGraph(var12, var18);
    demo.pathplanning.model.CartesianGraph var20 = new demo.pathplanning.model.CartesianGraph(1, var12);
    int var21 = var20.getYSize();
    demo.pathplanning.model.CartesianGraph var24 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.algorithms.AStar var25 = new demo.pathplanning.algorithms.AStar(var24);
    java.lang.String var26 = var24.toString();
    demo.pathplanning.model.CartesianGraph var29 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var32 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var33 = new demo.pathplanning.model.Location(1, 1);
    boolean var35 = var33.equals((java.lang.Object)0L);
    demo.pathplanning.model.Node var36 = var24.getNode(var33);
    demo.pathplanning.model.CartesianGraph var39 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var40 = var39.getXSize();
    int var41 = var39.getYSize();
    int var42 = var39.getYSize();
    demo.pathplanning.model.CartesianGraph var45 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var46 = var45.getXSize();
    int var47 = var45.getYSize();
    int var48 = var45.getYSize();
    demo.pathplanning.model.CartesianGraph var49 = new demo.pathplanning.model.CartesianGraph(var42, var48);
    demo.pathplanning.model.CartesianGraph var52 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var55 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var56 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var57 = new demo.pathplanning.model.CartesianGraph(var42, 1);
    demo.pathplanning.model.Node var58 = new demo.pathplanning.model.Node(var20, var33, 1);
    demo.pathplanning.model.Location var59 = var58.getLocation();
    demo.pathplanning.model.CartesianGraph var62 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var65 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var66 = new demo.pathplanning.model.Location(1, 1);
    int var67 = var66.getX();
    boolean var68 = var58.equals((java.lang.Object)var66);
    java.util.Collection var69 = var58.getNeighbors();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var11 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var12 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var16 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var17 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var18 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var21 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var26 + "' != '" + "0,\n"+ "'", var26.equals("0,\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var35 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var36);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var40 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var41 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var42 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var46 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var47 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var48 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var59);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var67 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var68 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var69);

  }

  public void test466() throws Throwable {

    demo.pathplanning.model.CartesianGraph var2 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var3 = var2.getXSize();
    int var4 = var2.getYSize();
    int var5 = var2.getYSize();
    demo.pathplanning.model.CartesianGraph var8 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var9 = var8.getXSize();
    int var10 = var8.getYSize();
    int var11 = var8.getYSize();
    demo.pathplanning.model.CartesianGraph var12 = new demo.pathplanning.model.CartesianGraph(var5, var11);
    int var13 = var12.getXSize();
    demo.pathplanning.model.CartesianGraph var16 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.algorithms.AStar var17 = new demo.pathplanning.algorithms.AStar(var16);
    java.lang.String var18 = var16.toString();
    demo.pathplanning.model.CartesianGraph var21 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var24 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var25 = new demo.pathplanning.model.Location(1, 1);
    boolean var27 = var25.equals((java.lang.Object)0L);
    demo.pathplanning.model.Node var28 = var16.getNode(var25);
    demo.pathplanning.model.CartesianGraph var31 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var32 = var31.getXSize();
    demo.pathplanning.algorithms.AStar var33 = new demo.pathplanning.algorithms.AStar(var31);
    demo.pathplanning.model.CartesianGraph var36 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var39 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var40 = new demo.pathplanning.model.Location(1, 1);
    boolean var42 = var40.equals((java.lang.Object)0L);
    demo.pathplanning.model.Node var43 = var31.getNode(var40);
    int var44 = var31.getXSize();
    demo.pathplanning.model.Node var45 = new demo.pathplanning.model.Node(var12, var25, var44);
    java.lang.String var46 = var45.toString();
    int var47 = var45.getCost();
    java.util.Collection var48 = var45.getNeighbors();
    java.util.Collection var49 = var45.getNeighbors();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var3 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var4 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var5 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var9 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var11 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var13 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var18 + "' != '" + "0,\n"+ "'", var18.equals("0,\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var27 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var28);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var32 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var42 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var43);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var44 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var46 + "' != '" + "(1,1)=1"+ "'", var46.equals("(1,1)=1"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var47 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var48);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var49);

  }

  public void test467() throws Throwable {

    demo.pathplanning.model.CartesianGraph var2 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var3 = var2.getXSize();
    int var4 = var2.getYSize();
    int var5 = var2.getYSize();
    demo.pathplanning.model.CartesianGraph var8 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var9 = var8.getXSize();
    int var10 = var8.getYSize();
    int var11 = var8.getYSize();
    demo.pathplanning.model.CartesianGraph var12 = new demo.pathplanning.model.CartesianGraph(var5, var11);
    demo.pathplanning.model.CartesianGraph var15 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var18 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var19 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var20 = new demo.pathplanning.model.CartesianGraph(var5, 1);
    java.lang.String var21 = var20.toString();
    demo.pathplanning.model.CartesianGraph var24 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var27 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var28 = new demo.pathplanning.model.Location(1, 1);
    boolean var30 = var28.equals((java.lang.Object)0L);
    demo.pathplanning.model.Node var31 = var20.getNode(var28);
    demo.pathplanning.model.CartesianGraph var34 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var37 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var38 = new demo.pathplanning.model.Location(1, 1);
    boolean var40 = var38.equals((java.lang.Object)0L);
    int var41 = var38.getX();
    int var42 = var38.getX();
    demo.pathplanning.model.CartesianGraph var45 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var46 = var45.getXSize();
    demo.pathplanning.model.Node var47 = new demo.pathplanning.model.Node(var20, var38, var46);
    demo.pathplanning.algorithms.AStar var48 = new demo.pathplanning.algorithms.AStar(var20);
    demo.pathplanning.model.CartesianGraph var49 = var48.getGraph();
    demo.pathplanning.model.CartesianGraph var52 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.algorithms.AStar var53 = new demo.pathplanning.algorithms.AStar(var52);
    java.lang.String var54 = var52.toString();
    demo.pathplanning.model.CartesianGraph var57 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var60 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var61 = new demo.pathplanning.model.Location(1, 1);
    boolean var63 = var61.equals((java.lang.Object)0L);
    demo.pathplanning.model.Node var64 = var52.getNode(var61);
    int var65 = var61.getX();
    demo.pathplanning.model.CartesianGraph var68 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var69 = var68.getXSize();
    demo.pathplanning.model.CartesianGraph var72 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var73 = new demo.pathplanning.model.CartesianGraph(var69, 1);
    demo.pathplanning.model.CartesianGraph var76 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.algorithms.AStar var77 = new demo.pathplanning.algorithms.AStar(var76);
    demo.pathplanning.model.CartesianGraph var78 = var77.getGraph();
    demo.pathplanning.model.CartesianGraph var79 = var77.getGraph();
    demo.pathplanning.algorithms.PathPlanningContext var80 = new demo.pathplanning.algorithms.PathPlanningContext((demo.pathplanning.algorithms.PathPlanner)var77);
    demo.pathplanning.model.CartesianGraph var81 = var77.getGraph();
    int var82 = var81.getYSize();
    demo.pathplanning.model.CartesianGraph var83 = new demo.pathplanning.model.CartesianGraph(var69, var82);
    int var84 = var83.getXSize();
    demo.pathplanning.algorithms.AStar var85 = new demo.pathplanning.algorithms.AStar(var83);
    int var86 = var83.getYSize();
    demo.pathplanning.model.Node var87 = new demo.pathplanning.model.Node(var49, var61, var86);
    int var88 = var49.getYSize();
    java.lang.String var89 = var49.toString();
    int var90 = var49.getYSize();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var3 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var4 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var5 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var9 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var11 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var21 + "' != '" + "0,\n"+ "'", var21.equals("0,\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var30 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var31);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var40 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var41 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var42 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var46 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var49);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var54 + "' != '" + "0,\n"+ "'", var54.equals("0,\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var63 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var64);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var65 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var69 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var78);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var79);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var81);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var82 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var84 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var86 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var88 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var89 + "' != '" + "0,\n"+ "'", var89.equals("0,\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var90 == 1);

  }

  public void test468() throws Throwable {

    demo.pathplanning.model.CartesianGraph var2 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var3 = var2.getXSize();
    demo.pathplanning.model.CartesianGraph var6 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var7 = new demo.pathplanning.model.CartesianGraph(var3, 1);
    demo.pathplanning.model.CartesianGraph var10 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.algorithms.AStar var11 = new demo.pathplanning.algorithms.AStar(var10);
    demo.pathplanning.model.CartesianGraph var12 = var11.getGraph();
    demo.pathplanning.model.CartesianGraph var13 = var11.getGraph();
    demo.pathplanning.algorithms.PathPlanningContext var14 = new demo.pathplanning.algorithms.PathPlanningContext((demo.pathplanning.algorithms.PathPlanner)var11);
    demo.pathplanning.model.CartesianGraph var15 = var11.getGraph();
    int var16 = var15.getYSize();
    demo.pathplanning.model.CartesianGraph var17 = new demo.pathplanning.model.CartesianGraph(var3, var16);
    int var18 = var17.getXSize();
    demo.pathplanning.model.CartesianGraph var21 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var22 = var21.getXSize();
    demo.pathplanning.algorithms.AStar var23 = new demo.pathplanning.algorithms.AStar(var21);
    demo.pathplanning.model.CartesianGraph var26 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var29 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var30 = new demo.pathplanning.model.Location(1, 1);
    boolean var32 = var30.equals((java.lang.Object)0L);
    demo.pathplanning.model.Node var33 = var21.getNode(var30);
    int var34 = var21.getYSize();
    demo.pathplanning.model.CartesianGraph var37 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var38 = var37.getXSize();
    int var39 = var37.getYSize();
    int var40 = var37.getYSize();
    demo.pathplanning.model.CartesianGraph var43 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var44 = var43.getXSize();
    int var45 = var43.getYSize();
    int var46 = var43.getYSize();
    demo.pathplanning.model.CartesianGraph var47 = new demo.pathplanning.model.CartesianGraph(var40, var46);
    demo.pathplanning.model.CartesianGraph var50 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var53 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var54 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var55 = new demo.pathplanning.model.CartesianGraph(var40, 1);
    int var56 = var55.getXSize();
    demo.pathplanning.model.CartesianGraph var59 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var60 = var59.getXSize();
    int var61 = var59.getYSize();
    int var62 = var59.getYSize();
    demo.pathplanning.model.CartesianGraph var63 = new demo.pathplanning.model.CartesianGraph(var56, var62);
    demo.pathplanning.model.CartesianGraph var64 = new demo.pathplanning.model.CartesianGraph(var34, var56);
    demo.pathplanning.model.Location var65 = new demo.pathplanning.model.Location(var18, var56);
    java.lang.String var66 = var65.toString();
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      demo.pathplanning.model.Direction var67 = demo.pathplanning.model.Direction.valueOf(var66);
      fail("Expected exception of type java.lang.IllegalArgumentException");
    } catch (java.lang.IllegalArgumentException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var3 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var12);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var13);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var15);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var16 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var18 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var22 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var32 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var33);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var34 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var38 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var39 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var40 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var44 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var45 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var46 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var56 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var60 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var61 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var62 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var66 + "' != '" + "(1,1)"+ "'", var66.equals("(1,1)"));

  }

  public void test469() throws Throwable {

    demo.pathplanning.model.CartesianGraph var2 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var3 = var2.getXSize();
    demo.pathplanning.algorithms.AStar var4 = new demo.pathplanning.algorithms.AStar(var2);
    demo.pathplanning.model.CartesianGraph var7 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var8 = var7.getXSize();
    int var9 = var7.getYSize();
    int var10 = var7.getYSize();
    demo.pathplanning.model.CartesianGraph var13 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var14 = new demo.pathplanning.model.Location(var10, 1);
    java.lang.String var15 = var14.toString();
    demo.pathplanning.model.Node var16 = var2.getNode(var14);
    demo.pathplanning.algorithms.AStar var17 = new demo.pathplanning.algorithms.AStar(var2);
    demo.pathplanning.model.CartesianGraph var18 = var17.getGraph();
    java.lang.String var19 = var18.toString();
    demo.pathplanning.algorithms.AStar var20 = new demo.pathplanning.algorithms.AStar(var18);
    demo.pathplanning.model.CartesianGraph var23 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var26 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var27 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var30 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var31 = var30.getXSize();
    int var32 = var30.getYSize();
    int var33 = var30.getYSize();
    demo.pathplanning.model.CartesianGraph var36 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var37 = var36.getXSize();
    int var38 = var36.getYSize();
    int var39 = var36.getYSize();
    demo.pathplanning.model.CartesianGraph var40 = new demo.pathplanning.model.CartesianGraph(var33, var39);
    demo.pathplanning.model.CartesianGraph var41 = new demo.pathplanning.model.CartesianGraph(1, var33);
    int var42 = var41.getYSize();
    demo.pathplanning.model.CartesianGraph var45 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var46 = var45.getXSize();
    int var47 = var45.getYSize();
    int var48 = var45.getYSize();
    demo.pathplanning.model.CartesianGraph var51 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var52 = new demo.pathplanning.model.Location(var48, 1);
    java.lang.String var53 = var52.toString();
    demo.pathplanning.model.Node var54 = var41.getNode(var52);
    int var55 = var52.getY();
    java.lang.String var56 = var52.toString();
    demo.pathplanning.model.CartesianGraph var59 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var60 = var59.getXSize();
    demo.pathplanning.algorithms.AStar var61 = new demo.pathplanning.algorithms.AStar(var59);
    demo.pathplanning.model.CartesianGraph var62 = var61.getGraph();
    boolean var63 = var52.equals((java.lang.Object)var61);
    demo.pathplanning.model.Node var64 = var18.getNode(var52);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var3 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var8 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var9 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var15 + "' != '" + "(1,1)"+ "'", var15.equals("(1,1)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var16);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var18);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var19 + "' != '" + "0,\n"+ "'", var19.equals("0,\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var31 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var32 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var33 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var37 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var38 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var39 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var42 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var46 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var47 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var48 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var53 + "' != '" + "(1,1)"+ "'", var53.equals("(1,1)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var54);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var55 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var56 + "' != '" + "(1,1)"+ "'", var56.equals("(1,1)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var60 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var62);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var63 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var64);

  }

  public void test470() throws Throwable {

    demo.pathplanning.model.CartesianGraph var2 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.algorithms.AStar var3 = new demo.pathplanning.algorithms.AStar(var2);
    demo.pathplanning.model.CartesianGraph var4 = var3.getGraph();
    demo.pathplanning.model.CartesianGraph var5 = var3.getGraph();
    demo.pathplanning.model.CartesianGraph var6 = var3.getGraph();
    demo.pathplanning.algorithms.PathPlanningContext var7 = new demo.pathplanning.algorithms.PathPlanningContext((demo.pathplanning.algorithms.PathPlanner)var3);
    demo.pathplanning.model.CartesianGraph var10 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var13 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var14 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var17 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var18 = var17.getXSize();
    int var19 = var17.getYSize();
    int var20 = var17.getYSize();
    demo.pathplanning.model.CartesianGraph var23 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var24 = var23.getXSize();
    int var25 = var23.getYSize();
    int var26 = var23.getYSize();
    demo.pathplanning.model.CartesianGraph var27 = new demo.pathplanning.model.CartesianGraph(var20, var26);
    demo.pathplanning.model.CartesianGraph var28 = new demo.pathplanning.model.CartesianGraph(1, var20);
    int var29 = var28.getYSize();
    demo.pathplanning.model.CartesianGraph var32 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var33 = var32.getXSize();
    int var34 = var32.getYSize();
    int var35 = var32.getYSize();
    demo.pathplanning.model.CartesianGraph var38 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var39 = new demo.pathplanning.model.Location(var35, 1);
    java.lang.String var40 = var39.toString();
    demo.pathplanning.model.Node var41 = var28.getNode(var39);
    int var42 = var39.getY();
    java.lang.String var43 = var39.toString();
    int var44 = var39.getX();
    int var45 = var39.getY();
    int var46 = var39.getX();
    int var47 = var39.getY();
    demo.pathplanning.model.CartesianGraph var50 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var53 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var54 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var57 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var58 = var57.getXSize();
    int var59 = var57.getYSize();
    int var60 = var57.getYSize();
    demo.pathplanning.model.CartesianGraph var63 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var64 = var63.getXSize();
    int var65 = var63.getYSize();
    int var66 = var63.getYSize();
    demo.pathplanning.model.CartesianGraph var67 = new demo.pathplanning.model.CartesianGraph(var60, var66);
    demo.pathplanning.model.CartesianGraph var68 = new demo.pathplanning.model.CartesianGraph(1, var60);
    int var69 = var68.getYSize();
    demo.pathplanning.model.CartesianGraph var72 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var73 = var72.getXSize();
    int var74 = var72.getYSize();
    int var75 = var72.getYSize();
    demo.pathplanning.model.CartesianGraph var78 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var79 = new demo.pathplanning.model.Location(var75, 1);
    java.lang.String var80 = var79.toString();
    demo.pathplanning.model.Node var81 = var68.getNode(var79);
    int var82 = var79.getY();
    java.lang.String var83 = var79.toString();
    int var84 = var79.getX();
    int var85 = var79.getY();
    java.util.List var86 = var7.getPath(var39, var79);

  }

  public void test471() throws Throwable {

    demo.pathplanning.model.CartesianGraph var2 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var5 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var6 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var9 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var10 = var9.getXSize();
    int var11 = var9.getYSize();
    int var12 = var9.getYSize();
    demo.pathplanning.model.CartesianGraph var15 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var16 = var15.getXSize();
    int var17 = var15.getYSize();
    int var18 = var15.getYSize();
    demo.pathplanning.model.CartesianGraph var19 = new demo.pathplanning.model.CartesianGraph(var12, var18);
    demo.pathplanning.model.CartesianGraph var20 = new demo.pathplanning.model.CartesianGraph(1, var12);
    int var21 = var20.getYSize();
    demo.pathplanning.model.CartesianGraph var24 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.algorithms.AStar var25 = new demo.pathplanning.algorithms.AStar(var24);
    java.lang.String var26 = var24.toString();
    demo.pathplanning.model.CartesianGraph var29 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var32 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var33 = new demo.pathplanning.model.Location(1, 1);
    boolean var35 = var33.equals((java.lang.Object)0L);
    demo.pathplanning.model.Node var36 = var24.getNode(var33);
    demo.pathplanning.model.CartesianGraph var39 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var40 = var39.getXSize();
    int var41 = var39.getYSize();
    int var42 = var39.getYSize();
    demo.pathplanning.model.CartesianGraph var45 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var46 = var45.getXSize();
    int var47 = var45.getYSize();
    int var48 = var45.getYSize();
    demo.pathplanning.model.CartesianGraph var49 = new demo.pathplanning.model.CartesianGraph(var42, var48);
    demo.pathplanning.model.CartesianGraph var52 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var55 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var56 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var57 = new demo.pathplanning.model.CartesianGraph(var42, 1);
    demo.pathplanning.model.Node var58 = new demo.pathplanning.model.Node(var20, var33, 1);
    demo.pathplanning.model.Location var59 = var58.getLocation();
    java.lang.String var60 = var59.toString();
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      demo.pathplanning.model.Direction var61 = demo.pathplanning.model.Direction.valueOf(var60);
      fail("Expected exception of type java.lang.IllegalArgumentException");
    } catch (java.lang.IllegalArgumentException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var11 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var12 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var16 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var17 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var18 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var21 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var26 + "' != '" + "0,\n"+ "'", var26.equals("0,\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var35 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var36);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var40 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var41 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var42 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var46 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var47 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var48 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var59);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var60 + "' != '" + "(1,1)"+ "'", var60.equals("(1,1)"));

  }

  public void test472() throws Throwable {

    demo.pathplanning.model.CartesianGraph var2 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.algorithms.AStar var3 = new demo.pathplanning.algorithms.AStar(var2);
    demo.pathplanning.model.CartesianGraph var4 = var3.getGraph();
    demo.pathplanning.model.CartesianGraph var5 = var3.getGraph();
    demo.pathplanning.algorithms.PathPlanningContext var6 = new demo.pathplanning.algorithms.PathPlanningContext((demo.pathplanning.algorithms.PathPlanner)var3);
    demo.pathplanning.model.CartesianGraph var7 = var3.getGraph();
    int var8 = var7.getYSize();
    demo.pathplanning.model.CartesianGraph var11 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var14 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var15 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var18 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var21 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var22 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.Node var23 = new demo.pathplanning.model.Node(var7, var15, 1);
    int var24 = var23.getCost();
    java.util.Collection var25 = var23.getNeighbors();
    int var26 = var23.getCost();
    demo.pathplanning.model.CartesianGraph var29 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var30 = var29.getXSize();
    demo.pathplanning.model.CartesianGraph var33 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var34 = new demo.pathplanning.model.CartesianGraph(var30, 1);
    demo.pathplanning.model.CartesianGraph var37 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.algorithms.AStar var38 = new demo.pathplanning.algorithms.AStar(var37);
    demo.pathplanning.model.CartesianGraph var39 = var38.getGraph();
    demo.pathplanning.model.CartesianGraph var40 = var38.getGraph();
    demo.pathplanning.algorithms.PathPlanningContext var41 = new demo.pathplanning.algorithms.PathPlanningContext((demo.pathplanning.algorithms.PathPlanner)var38);
    demo.pathplanning.model.CartesianGraph var42 = var38.getGraph();
    int var43 = var42.getYSize();
    demo.pathplanning.model.CartesianGraph var44 = new demo.pathplanning.model.CartesianGraph(var30, var43);
    int var45 = var44.getXSize();
    demo.pathplanning.algorithms.AStar var46 = new demo.pathplanning.algorithms.AStar(var44);
    boolean var47 = var23.equals((java.lang.Object)var44);
    demo.pathplanning.algorithms.AStar var48 = new demo.pathplanning.algorithms.AStar(var44);
    demo.pathplanning.algorithms.PathPlanningContext var49 = new demo.pathplanning.algorithms.PathPlanningContext((demo.pathplanning.algorithms.PathPlanner)var48);
    demo.pathplanning.model.CartesianGraph var52 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var55 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var56 = var55.getXSize();
    demo.pathplanning.model.CartesianGraph var59 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var60 = new demo.pathplanning.model.CartesianGraph(var56, 1);
    demo.pathplanning.model.CartesianGraph var63 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.algorithms.AStar var64 = new demo.pathplanning.algorithms.AStar(var63);
    demo.pathplanning.model.CartesianGraph var65 = var64.getGraph();
    demo.pathplanning.model.CartesianGraph var66 = var64.getGraph();
    demo.pathplanning.algorithms.PathPlanningContext var67 = new demo.pathplanning.algorithms.PathPlanningContext((demo.pathplanning.algorithms.PathPlanner)var64);
    demo.pathplanning.model.CartesianGraph var68 = var64.getGraph();
    int var69 = var68.getYSize();
    demo.pathplanning.model.Location var70 = new demo.pathplanning.model.Location(var56, var69);
    java.lang.String var71 = var70.toString();
    demo.pathplanning.model.Node var72 = var52.getNode(var70);
    demo.pathplanning.model.CartesianGraph var75 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var78 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var79 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var82 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var83 = var82.getXSize();
    demo.pathplanning.model.CartesianGraph var86 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var87 = new demo.pathplanning.model.CartesianGraph(var83, 1);
    demo.pathplanning.model.Location var88 = new demo.pathplanning.model.Location(1, 1);
    int var89 = var88.getX();
    int var90 = var88.getY();
    int var91 = var88.getX();
    java.util.List var92 = var49.getPath(var70, var88);

  }

  public void test473() throws Throwable {

    demo.pathplanning.model.CartesianGraph var2 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.algorithms.AStar var3 = new demo.pathplanning.algorithms.AStar(var2);
    demo.pathplanning.model.CartesianGraph var4 = var3.getGraph();
    demo.pathplanning.model.CartesianGraph var5 = var3.getGraph();
    demo.pathplanning.algorithms.PathPlanningContext var6 = new demo.pathplanning.algorithms.PathPlanningContext((demo.pathplanning.algorithms.PathPlanner)var3);
    demo.pathplanning.model.CartesianGraph var7 = var3.getGraph();
    int var8 = var7.getYSize();
    demo.pathplanning.model.CartesianGraph var11 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var14 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var15 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var18 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var21 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var22 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.Node var23 = new demo.pathplanning.model.Node(var7, var15, 1);
    demo.pathplanning.model.CartesianGraph var26 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var29 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var30 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var33 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var34 = var33.getXSize();
    int var35 = var33.getYSize();
    int var36 = var33.getYSize();
    demo.pathplanning.model.CartesianGraph var39 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var40 = var39.getXSize();
    int var41 = var39.getYSize();
    int var42 = var39.getYSize();
    demo.pathplanning.model.CartesianGraph var43 = new demo.pathplanning.model.CartesianGraph(var36, var42);
    demo.pathplanning.model.CartesianGraph var44 = new demo.pathplanning.model.CartesianGraph(1, var36);
    demo.pathplanning.model.CartesianGraph var47 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var50 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var51 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var54 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var55 = var54.getXSize();
    int var56 = var54.getYSize();
    int var57 = var54.getYSize();
    demo.pathplanning.model.CartesianGraph var60 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var61 = var60.getXSize();
    int var62 = var60.getYSize();
    int var63 = var60.getYSize();
    demo.pathplanning.model.CartesianGraph var64 = new demo.pathplanning.model.CartesianGraph(var57, var63);
    demo.pathplanning.model.CartesianGraph var65 = new demo.pathplanning.model.CartesianGraph(1, var57);
    demo.pathplanning.model.Location var66 = new demo.pathplanning.model.Location(1, 1);
    boolean var67 = var23.equals((java.lang.Object)1);
    demo.pathplanning.model.Location var68 = var23.getLocation();
    java.util.Collection var69 = var23.getNeighbors();
    demo.pathplanning.model.Location var70 = var23.getLocation();
    int var71 = var23.getCost();
    java.util.Collection var72 = var23.getNeighbors();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var8 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var34 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var35 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var36 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var40 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var41 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var42 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var55 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var56 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var57 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var61 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var62 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var63 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var67 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var68);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var69);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var70);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var71 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var72);

  }

  public void test474() throws Throwable {

    demo.pathplanning.model.CartesianGraph var2 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var3 = var2.getXSize();
    demo.pathplanning.model.CartesianGraph var6 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var7 = new demo.pathplanning.model.CartesianGraph(var3, 1);
    demo.pathplanning.model.CartesianGraph var10 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.algorithms.AStar var11 = new demo.pathplanning.algorithms.AStar(var10);
    demo.pathplanning.model.CartesianGraph var12 = var11.getGraph();
    demo.pathplanning.model.CartesianGraph var13 = var11.getGraph();
    demo.pathplanning.algorithms.PathPlanningContext var14 = new demo.pathplanning.algorithms.PathPlanningContext((demo.pathplanning.algorithms.PathPlanner)var11);
    demo.pathplanning.model.CartesianGraph var15 = var11.getGraph();
    int var16 = var15.getYSize();
    demo.pathplanning.model.CartesianGraph var17 = new demo.pathplanning.model.CartesianGraph(var3, var16);
    int var18 = var17.getXSize();
    java.lang.String var19 = var17.toString();
    int var20 = var17.getXSize();
    demo.pathplanning.model.CartesianGraph var23 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.algorithms.AStar var24 = new demo.pathplanning.algorithms.AStar(var23);
    demo.pathplanning.model.CartesianGraph var25 = var24.getGraph();
    demo.pathplanning.model.CartesianGraph var26 = var24.getGraph();
    int var27 = var26.getYSize();
    demo.pathplanning.model.CartesianGraph var30 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var31 = var30.getXSize();
    demo.pathplanning.model.CartesianGraph var34 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var35 = new demo.pathplanning.model.CartesianGraph(var31, 1);
    demo.pathplanning.model.CartesianGraph var38 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.algorithms.AStar var39 = new demo.pathplanning.algorithms.AStar(var38);
    demo.pathplanning.model.CartesianGraph var40 = var39.getGraph();
    demo.pathplanning.model.CartesianGraph var41 = var39.getGraph();
    demo.pathplanning.algorithms.PathPlanningContext var42 = new demo.pathplanning.algorithms.PathPlanningContext((demo.pathplanning.algorithms.PathPlanner)var39);
    demo.pathplanning.model.CartesianGraph var43 = var39.getGraph();
    int var44 = var43.getYSize();
    demo.pathplanning.model.CartesianGraph var45 = new demo.pathplanning.model.CartesianGraph(var31, var44);
    demo.pathplanning.model.CartesianGraph var48 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var51 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var52 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var55 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var56 = var55.getXSize();
    demo.pathplanning.model.CartesianGraph var59 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var60 = new demo.pathplanning.model.CartesianGraph(var56, 1);
    demo.pathplanning.model.Location var61 = new demo.pathplanning.model.Location(1, 1);
    int var62 = var61.getX();
    int var63 = var61.getY();
    demo.pathplanning.model.Node var64 = var45.getNode(var61);
    demo.pathplanning.model.Node var65 = var26.getNode(var61);
    int var66 = var61.getX();
    java.lang.String var67 = var61.toString();
    demo.pathplanning.model.Node var68 = var17.getNode(var61);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var3 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var12);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var13);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var15);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var16 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var18 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var19 + "' != '" + "0,\n"+ "'", var19.equals("0,\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var20 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var25);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var26);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var27 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var31 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var40);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var41);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var43);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var44 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var56 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var62 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var63 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var64);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var65);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var66 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var67 + "' != '" + "(1,1)"+ "'", var67.equals("(1,1)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var68);

  }

  public void test475() throws Throwable {

    demo.pathplanning.model.CartesianGraph var2 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var3 = var2.getXSize();
    demo.pathplanning.algorithms.AStar var4 = new demo.pathplanning.algorithms.AStar(var2);
    demo.pathplanning.model.CartesianGraph var7 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var10 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var11 = new demo.pathplanning.model.Location(1, 1);
    boolean var13 = var11.equals((java.lang.Object)0L);
    demo.pathplanning.model.Node var14 = var2.getNode(var11);
    int var15 = var2.getYSize();
    demo.pathplanning.model.CartesianGraph var18 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var19 = var18.getXSize();
    int var20 = var18.getYSize();
    int var21 = var18.getYSize();
    demo.pathplanning.model.CartesianGraph var24 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var25 = new demo.pathplanning.model.Location(var21, 1);
    java.lang.String var26 = var25.toString();
    demo.pathplanning.model.CartesianGraph var29 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var32 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var33 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var36 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var37 = var36.getXSize();
    int var38 = var36.getYSize();
    int var39 = var36.getYSize();
    demo.pathplanning.model.CartesianGraph var42 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var43 = var42.getXSize();
    int var44 = var42.getYSize();
    int var45 = var42.getYSize();
    demo.pathplanning.model.CartesianGraph var46 = new demo.pathplanning.model.CartesianGraph(var39, var45);
    demo.pathplanning.model.CartesianGraph var47 = new demo.pathplanning.model.CartesianGraph(1, var39);
    demo.pathplanning.model.Node var48 = new demo.pathplanning.model.Node(var2, var25, var39);
    java.util.Collection var49 = var48.getNeighbors();
    demo.pathplanning.model.Location var50 = var48.getLocation();
    int var51 = var50.getY();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var3 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var13 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var14);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var15 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var19 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var20 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var21 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var26 + "' != '" + "(1,1)"+ "'", var26.equals("(1,1)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var37 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var38 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var39 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var43 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var44 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var45 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var49);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var50);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var51 == 1);

  }

  public void test476() throws Throwable {

    demo.pathplanning.model.CartesianGraph var2 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var3 = var2.getXSize();
    int var4 = var2.getYSize();
    int var5 = var2.getYSize();
    demo.pathplanning.model.CartesianGraph var8 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var9 = var8.getXSize();
    int var10 = var8.getYSize();
    int var11 = var8.getYSize();
    demo.pathplanning.model.CartesianGraph var12 = new demo.pathplanning.model.CartesianGraph(var5, var11);
    demo.pathplanning.model.CartesianGraph var15 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var18 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var19 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var20 = new demo.pathplanning.model.CartesianGraph(var5, 1);
    java.lang.String var21 = var20.toString();
    demo.pathplanning.model.CartesianGraph var24 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var27 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var28 = new demo.pathplanning.model.Location(1, 1);
    boolean var30 = var28.equals((java.lang.Object)0L);
    demo.pathplanning.model.Node var31 = var20.getNode(var28);
    demo.pathplanning.model.CartesianGraph var34 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var37 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var38 = new demo.pathplanning.model.Location(1, 1);
    boolean var40 = var38.equals((java.lang.Object)0L);
    int var41 = var38.getX();
    int var42 = var38.getX();
    demo.pathplanning.model.CartesianGraph var45 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var46 = var45.getXSize();
    demo.pathplanning.model.Node var47 = new demo.pathplanning.model.Node(var20, var38, var46);
    int var48 = var47.getCost();
    java.util.Collection var49 = var47.getNeighbors();
    int var50 = var47.getCost();
    demo.pathplanning.model.Location var51 = var47.getLocation();
    java.lang.String var52 = var47.toString();
    java.lang.String var53 = var47.toString();
    java.util.Collection var54 = var47.getNeighbors();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var3 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var4 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var5 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var9 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var11 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var21 + "' != '" + "0,\n"+ "'", var21.equals("0,\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var30 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var31);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var40 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var41 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var42 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var46 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var48 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var49);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var50 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var51);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var52 + "' != '" + "(1,1)=1"+ "'", var52.equals("(1,1)=1"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var53 + "' != '" + "(1,1)=1"+ "'", var53.equals("(1,1)=1"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var54);

  }

  public void test477() throws Throwable {

    demo.pathplanning.model.CartesianGraph var2 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.algorithms.AStar var3 = new demo.pathplanning.algorithms.AStar(var2);
    demo.pathplanning.model.CartesianGraph var4 = var3.getGraph();
    demo.pathplanning.model.CartesianGraph var5 = var3.getGraph();
    demo.pathplanning.algorithms.PathPlanningContext var6 = new demo.pathplanning.algorithms.PathPlanningContext((demo.pathplanning.algorithms.PathPlanner)var3);
    demo.pathplanning.model.CartesianGraph var7 = var3.getGraph();
    int var8 = var7.getYSize();
    demo.pathplanning.model.CartesianGraph var11 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var14 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var15 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var18 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var21 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var22 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.Node var23 = new demo.pathplanning.model.Node(var7, var15, 1);
    java.util.Collection var24 = var23.getNeighbors();
    int var25 = var23.getCost();
    java.lang.String var26 = var23.toString();
    java.lang.String var27 = var23.toString();
    java.util.Collection var28 = var23.getNeighbors();
    java.lang.String var29 = var23.toString();
    java.lang.String var30 = var23.toString();
    demo.pathplanning.model.Location var31 = var23.getLocation();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var8 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var24);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var25 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var26 + "' != '" + "(1,1)=1"+ "'", var26.equals("(1,1)=1"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var27 + "' != '" + "(1,1)=1"+ "'", var27.equals("(1,1)=1"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var28);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var29 + "' != '" + "(1,1)=1"+ "'", var29.equals("(1,1)=1"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var30 + "' != '" + "(1,1)=1"+ "'", var30.equals("(1,1)=1"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var31);

  }

  public void test478() throws Throwable {

    demo.pathplanning.model.CartesianGraph var2 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.algorithms.AStar var3 = new demo.pathplanning.algorithms.AStar(var2);
    java.lang.String var4 = var2.toString();
    demo.pathplanning.model.CartesianGraph var7 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var10 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var11 = new demo.pathplanning.model.Location(1, 1);
    boolean var13 = var11.equals((java.lang.Object)0L);
    int var14 = var11.getX();
    int var15 = var11.getX();
    demo.pathplanning.model.CartesianGraph var18 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.algorithms.AStar var19 = new demo.pathplanning.algorithms.AStar(var18);
    demo.pathplanning.model.CartesianGraph var20 = var19.getGraph();
    demo.pathplanning.model.CartesianGraph var21 = var19.getGraph();
    demo.pathplanning.algorithms.PathPlanningContext var22 = new demo.pathplanning.algorithms.PathPlanningContext((demo.pathplanning.algorithms.PathPlanner)var19);
    demo.pathplanning.model.CartesianGraph var23 = var19.getGraph();
    int var24 = var23.getYSize();
    demo.pathplanning.model.CartesianGraph var27 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var30 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var31 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var34 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var37 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var38 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.Node var39 = new demo.pathplanning.model.Node(var23, var31, 1);
    demo.pathplanning.model.CartesianGraph var42 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var45 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var46 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var49 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var50 = var49.getXSize();
    int var51 = var49.getYSize();
    int var52 = var49.getYSize();
    demo.pathplanning.model.CartesianGraph var55 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var56 = var55.getXSize();
    int var57 = var55.getYSize();
    int var58 = var55.getYSize();
    demo.pathplanning.model.CartesianGraph var59 = new demo.pathplanning.model.CartesianGraph(var52, var58);
    demo.pathplanning.model.CartesianGraph var60 = new demo.pathplanning.model.CartesianGraph(1, var52);
    demo.pathplanning.model.CartesianGraph var61 = new demo.pathplanning.model.CartesianGraph(1, var52);
    demo.pathplanning.model.Node var62 = new demo.pathplanning.model.Node(var2, var11, var52);
    demo.pathplanning.model.CartesianGraph var65 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.algorithms.AStar var66 = new demo.pathplanning.algorithms.AStar(var65);
    demo.pathplanning.model.CartesianGraph var67 = var66.getGraph();
    demo.pathplanning.model.CartesianGraph var68 = var66.getGraph();
    demo.pathplanning.algorithms.PathPlanningContext var69 = new demo.pathplanning.algorithms.PathPlanningContext((demo.pathplanning.algorithms.PathPlanner)var66);
    demo.pathplanning.model.CartesianGraph var70 = var66.getGraph();
    int var71 = var70.getYSize();
    demo.pathplanning.model.CartesianGraph var74 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var77 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var78 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var81 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var84 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var85 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.Node var86 = new demo.pathplanning.model.Node(var70, var78, 1);
    java.util.Collection var87 = var86.getNeighbors();
    int var88 = var86.getCost();
    java.lang.String var89 = var86.toString();
    java.lang.String var90 = var86.toString();
    java.util.Collection var91 = var86.getNeighbors();
    demo.pathplanning.model.Location var92 = var86.getLocation();
    int var93 = var92.getY();
    int var94 = var92.getY();
    demo.pathplanning.model.Node var95 = var2.getNode(var92);
    java.lang.String var96 = var2.toString();
    int var97 = var2.getYSize();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var4 + "' != '" + "0,\n"+ "'", var4.equals("0,\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var13 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var14 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var15 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var20);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var21);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var23);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var24 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var50 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var51 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var52 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var56 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var57 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var58 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var67);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var68);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var70);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var71 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var87);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var88 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var89 + "' != '" + "(1,1)=1"+ "'", var89.equals("(1,1)=1"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var90 + "' != '" + "(1,1)=1"+ "'", var90.equals("(1,1)=1"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var91);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var92);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var93 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var94 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var95);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var96 + "' != '" + "0,\n"+ "'", var96.equals("0,\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var97 == 1);

  }

  public void test479() throws Throwable {

    demo.pathplanning.model.CartesianGraph var2 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var3 = var2.getXSize();
    demo.pathplanning.model.CartesianGraph var6 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var7 = new demo.pathplanning.model.CartesianGraph(var3, 1);
    demo.pathplanning.algorithms.AStar var8 = new demo.pathplanning.algorithms.AStar(var7);
    demo.pathplanning.model.CartesianGraph var9 = var8.getGraph();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var3 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var9);

  }

  public void test480() throws Throwable {

    demo.pathplanning.model.CartesianGraph var2 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var3 = var2.getXSize();
    demo.pathplanning.algorithms.AStar var4 = new demo.pathplanning.algorithms.AStar(var2);
    demo.pathplanning.model.CartesianGraph var7 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var10 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var11 = new demo.pathplanning.model.Location(1, 1);
    boolean var13 = var11.equals((java.lang.Object)0L);
    demo.pathplanning.model.Node var14 = var2.getNode(var11);
    int var15 = var2.getYSize();
    demo.pathplanning.model.CartesianGraph var18 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var19 = var18.getXSize();
    int var20 = var18.getYSize();
    int var21 = var18.getYSize();
    demo.pathplanning.model.CartesianGraph var24 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var25 = new demo.pathplanning.model.Location(var21, 1);
    java.lang.String var26 = var25.toString();
    demo.pathplanning.model.CartesianGraph var29 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var32 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var33 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var36 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var37 = var36.getXSize();
    int var38 = var36.getYSize();
    int var39 = var36.getYSize();
    demo.pathplanning.model.CartesianGraph var42 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var43 = var42.getXSize();
    int var44 = var42.getYSize();
    int var45 = var42.getYSize();
    demo.pathplanning.model.CartesianGraph var46 = new demo.pathplanning.model.CartesianGraph(var39, var45);
    demo.pathplanning.model.CartesianGraph var47 = new demo.pathplanning.model.CartesianGraph(1, var39);
    demo.pathplanning.model.Node var48 = new demo.pathplanning.model.Node(var2, var25, var39);
    demo.pathplanning.algorithms.AStar var49 = new demo.pathplanning.algorithms.AStar(var2);
    demo.pathplanning.algorithms.PathPlanningContext var50 = new demo.pathplanning.algorithms.PathPlanningContext((demo.pathplanning.algorithms.PathPlanner)var49);
    demo.pathplanning.model.CartesianGraph var51 = var49.getGraph();
    java.lang.String var52 = var51.toString();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var3 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var13 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var14);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var15 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var19 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var20 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var21 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var26 + "' != '" + "(1,1)"+ "'", var26.equals("(1,1)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var37 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var38 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var39 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var43 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var44 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var45 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var51);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var52 + "' != '" + "0,\n"+ "'", var52.equals("0,\n"));

  }

  public void test481() throws Throwable {

    demo.pathplanning.model.CartesianGraph var2 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.algorithms.AStar var3 = new demo.pathplanning.algorithms.AStar(var2);
    demo.pathplanning.model.CartesianGraph var4 = var3.getGraph();
    demo.pathplanning.model.CartesianGraph var5 = var3.getGraph();
    demo.pathplanning.algorithms.PathPlanningContext var6 = new demo.pathplanning.algorithms.PathPlanningContext((demo.pathplanning.algorithms.PathPlanner)var3);
    demo.pathplanning.model.CartesianGraph var7 = var3.getGraph();
    int var8 = var7.getYSize();
    demo.pathplanning.model.CartesianGraph var11 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var14 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var15 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var18 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var21 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var22 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.Node var23 = new demo.pathplanning.model.Node(var7, var15, 1);
    int var24 = var23.getCost();
    demo.pathplanning.model.CartesianGraph var27 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var28 = var27.getXSize();
    int var29 = var27.getYSize();
    int var30 = var27.getYSize();
    demo.pathplanning.model.CartesianGraph var33 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var34 = new demo.pathplanning.model.Location(var30, 1);
    demo.pathplanning.model.CartesianGraph var35 = new demo.pathplanning.model.CartesianGraph(var24, 1);
    demo.pathplanning.model.CartesianGraph var38 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var41 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var42 = new demo.pathplanning.model.Location(1, 1);
    boolean var44 = var42.equals((java.lang.Object)0L);
    demo.pathplanning.model.Node var45 = var35.getNode(var42);
    demo.pathplanning.algorithms.AStar var46 = new demo.pathplanning.algorithms.AStar(var35);
    demo.pathplanning.model.CartesianGraph var49 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var52 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var53 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var56 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var57 = var56.getXSize();
    int var58 = var56.getYSize();
    int var59 = var56.getYSize();
    demo.pathplanning.model.CartesianGraph var62 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var63 = var62.getXSize();
    int var64 = var62.getYSize();
    int var65 = var62.getYSize();
    demo.pathplanning.model.CartesianGraph var66 = new demo.pathplanning.model.CartesianGraph(var59, var65);
    demo.pathplanning.model.CartesianGraph var67 = new demo.pathplanning.model.CartesianGraph(1, var59);
    int var68 = var67.getYSize();
    demo.pathplanning.model.CartesianGraph var71 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var72 = var71.getXSize();
    int var73 = var71.getYSize();
    int var74 = var71.getYSize();
    demo.pathplanning.model.CartesianGraph var77 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var78 = new demo.pathplanning.model.Location(var74, 1);
    java.lang.String var79 = var78.toString();
    demo.pathplanning.model.Node var80 = var67.getNode(var78);
    int var81 = var78.getY();
    java.lang.String var82 = var78.toString();
    int var83 = var78.getX();
    int var84 = var78.getY();
    demo.pathplanning.model.Node var85 = var35.getNode(var78);
    int var86 = var35.getYSize();
    java.lang.String var87 = var35.toString();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var8 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var24 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var28 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var29 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var30 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var44 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var45);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var57 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var58 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var59 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var63 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var64 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var65 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var68 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var72 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var73 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var74 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var79 + "' != '" + "(1,1)"+ "'", var79.equals("(1,1)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var80);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var81 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var82 + "' != '" + "(1,1)"+ "'", var82.equals("(1,1)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var83 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var84 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var85);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var86 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var87 + "' != '" + "0,\n"+ "'", var87.equals("0,\n"));

  }

  public void test482() throws Throwable {

    demo.pathplanning.model.CartesianGraph var2 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var3 = var2.getXSize();
    int var4 = var2.getYSize();
    int var5 = var2.getYSize();
    demo.pathplanning.model.CartesianGraph var8 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var9 = var8.getXSize();
    int var10 = var8.getYSize();
    int var11 = var8.getYSize();
    demo.pathplanning.model.CartesianGraph var12 = new demo.pathplanning.model.CartesianGraph(var5, var11);
    demo.pathplanning.algorithms.AStar var13 = new demo.pathplanning.algorithms.AStar(var12);
    demo.pathplanning.algorithms.PathPlanningContext var14 = new demo.pathplanning.algorithms.PathPlanningContext((demo.pathplanning.algorithms.PathPlanner)var13);
    demo.pathplanning.model.CartesianGraph var15 = var13.getGraph();
    int var16 = var15.getXSize();
    int var17 = var15.getYSize();
    demo.pathplanning.algorithms.AStar var18 = new demo.pathplanning.algorithms.AStar(var15);
    demo.pathplanning.algorithms.PathPlanningContext var19 = new demo.pathplanning.algorithms.PathPlanningContext((demo.pathplanning.algorithms.PathPlanner)var18);
    demo.pathplanning.model.CartesianGraph var20 = var18.getGraph();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var3 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var4 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var5 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var9 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var11 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var15);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var16 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var17 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var20);

  }

  public void test483() throws Throwable {

    demo.pathplanning.model.CartesianGraph var2 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var3 = var2.getXSize();
    int var4 = var2.getYSize();
    demo.pathplanning.model.CartesianGraph var7 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.algorithms.AStar var8 = new demo.pathplanning.algorithms.AStar(var7);
    demo.pathplanning.model.CartesianGraph var9 = var8.getGraph();
    demo.pathplanning.model.CartesianGraph var10 = var8.getGraph();
    demo.pathplanning.algorithms.PathPlanningContext var11 = new demo.pathplanning.algorithms.PathPlanningContext((demo.pathplanning.algorithms.PathPlanner)var8);
    demo.pathplanning.model.CartesianGraph var12 = var8.getGraph();
    int var13 = var12.getYSize();
    demo.pathplanning.model.CartesianGraph var16 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var19 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var20 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var23 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var26 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var27 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.Node var28 = new demo.pathplanning.model.Node(var12, var20, 1);
    int var29 = var28.getCost();
    demo.pathplanning.model.CartesianGraph var32 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var33 = var32.getXSize();
    int var34 = var32.getYSize();
    int var35 = var32.getYSize();
    demo.pathplanning.model.CartesianGraph var38 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var39 = new demo.pathplanning.model.Location(var35, 1);
    demo.pathplanning.model.CartesianGraph var40 = new demo.pathplanning.model.CartesianGraph(var29, 1);
    demo.pathplanning.model.CartesianGraph var43 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.algorithms.AStar var44 = new demo.pathplanning.algorithms.AStar(var43);
    demo.pathplanning.model.CartesianGraph var45 = var44.getGraph();
    demo.pathplanning.model.CartesianGraph var46 = var44.getGraph();
    demo.pathplanning.algorithms.PathPlanningContext var47 = new demo.pathplanning.algorithms.PathPlanningContext((demo.pathplanning.algorithms.PathPlanner)var44);
    demo.pathplanning.model.CartesianGraph var48 = var44.getGraph();
    int var49 = var48.getYSize();
    demo.pathplanning.model.CartesianGraph var50 = new demo.pathplanning.model.CartesianGraph(1, var49);
    int var51 = var50.getXSize();
    demo.pathplanning.model.Location var52 = new demo.pathplanning.model.Location(var4, var51);
    int var53 = var52.getX();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var3 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var4 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var9);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var10);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var12);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var13 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var29 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var33 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var34 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var35 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var45);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var46);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var48);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var49 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var51 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var53 == 1);

  }

  public void test484() throws Throwable {

    demo.pathplanning.model.CartesianGraph var2 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.algorithms.AStar var3 = new demo.pathplanning.algorithms.AStar(var2);
    demo.pathplanning.model.CartesianGraph var4 = var3.getGraph();
    demo.pathplanning.model.CartesianGraph var5 = var3.getGraph();
    demo.pathplanning.algorithms.PathPlanningContext var6 = new demo.pathplanning.algorithms.PathPlanningContext((demo.pathplanning.algorithms.PathPlanner)var3);
    demo.pathplanning.model.CartesianGraph var7 = var3.getGraph();
    int var8 = var7.getYSize();
    demo.pathplanning.model.CartesianGraph var11 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var14 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var15 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var18 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var21 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var22 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.Node var23 = new demo.pathplanning.model.Node(var7, var15, 1);
    java.util.Collection var24 = var23.getNeighbors();
    int var25 = var23.getCost();
    java.lang.String var26 = var23.toString();
    demo.pathplanning.model.CartesianGraph var29 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.algorithms.AStar var30 = new demo.pathplanning.algorithms.AStar(var29);
    demo.pathplanning.model.CartesianGraph var31 = var30.getGraph();
    demo.pathplanning.model.CartesianGraph var32 = var30.getGraph();
    demo.pathplanning.algorithms.PathPlanningContext var33 = new demo.pathplanning.algorithms.PathPlanningContext((demo.pathplanning.algorithms.PathPlanner)var30);
    demo.pathplanning.model.CartesianGraph var34 = var30.getGraph();
    int var35 = var34.getYSize();
    demo.pathplanning.model.CartesianGraph var38 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var41 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var42 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var45 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var48 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var49 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.Node var50 = new demo.pathplanning.model.Node(var34, var42, 1);
    java.lang.String var51 = var50.toString();
    boolean var52 = var23.equals((java.lang.Object)var50);
    demo.pathplanning.model.Location var53 = var23.getLocation();
    int var54 = var53.getY();
    int var55 = var53.getX();
    int var56 = var53.getX();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var8 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var24);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var25 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var26 + "' != '" + "(1,1)=1"+ "'", var26.equals("(1,1)=1"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var31);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var32);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var34);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var35 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var51 + "' != '" + "(1,1)=1"+ "'", var51.equals("(1,1)=1"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var52 == true);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var53);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var54 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var55 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var56 == 1);

  }

  public void test485() throws Throwable {

    demo.pathplanning.model.CartesianGraph var2 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var3 = var2.getXSize();
    int var4 = var2.getYSize();
    int var5 = var2.getYSize();
    demo.pathplanning.model.CartesianGraph var8 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var9 = var8.getXSize();
    int var10 = var8.getYSize();
    int var11 = var8.getYSize();
    demo.pathplanning.model.CartesianGraph var12 = new demo.pathplanning.model.CartesianGraph(var5, var11);
    demo.pathplanning.model.CartesianGraph var15 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var16 = var15.getXSize();
    int var17 = var15.getYSize();
    demo.pathplanning.model.CartesianGraph var20 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.algorithms.AStar var21 = new demo.pathplanning.algorithms.AStar(var20);
    java.lang.String var22 = var20.toString();
    demo.pathplanning.model.CartesianGraph var25 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var28 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var29 = new demo.pathplanning.model.Location(1, 1);
    boolean var31 = var29.equals((java.lang.Object)0L);
    demo.pathplanning.model.Node var32 = var20.getNode(var29);
    demo.pathplanning.model.CartesianGraph var35 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var38 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var39 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var42 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var43 = var42.getXSize();
    demo.pathplanning.model.CartesianGraph var46 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var47 = new demo.pathplanning.model.CartesianGraph(var43, 1);
    demo.pathplanning.model.Location var48 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.Node var49 = new demo.pathplanning.model.Node(var15, var29, 1);
    demo.pathplanning.model.CartesianGraph var52 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var53 = var52.getXSize();
    demo.pathplanning.algorithms.AStar var54 = new demo.pathplanning.algorithms.AStar(var52);
    demo.pathplanning.model.CartesianGraph var57 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var60 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var61 = new demo.pathplanning.model.Location(1, 1);
    boolean var63 = var61.equals((java.lang.Object)0L);
    demo.pathplanning.model.Node var64 = var52.getNode(var61);
    int var65 = var52.getXSize();
    boolean var66 = var29.equals((java.lang.Object)var52);
    int var67 = var52.getXSize();
    int var68 = var52.getYSize();
    demo.pathplanning.model.Location var69 = new demo.pathplanning.model.Location(var5, var68);
    java.lang.String var70 = var69.toString();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var3 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var4 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var5 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var9 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var11 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var16 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var17 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var22 + "' != '" + "0,\n"+ "'", var22.equals("0,\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var31 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var32);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var43 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var53 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var63 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var64);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var65 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var66 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var67 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var68 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var70 + "' != '" + "(1,1)"+ "'", var70.equals("(1,1)"));

  }

  public void test486() throws Throwable {

    demo.pathplanning.model.CartesianGraph var2 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var3 = var2.getXSize();
    int var4 = var2.getYSize();
    int var5 = var2.getYSize();
    demo.pathplanning.model.CartesianGraph var8 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var9 = var8.getXSize();
    int var10 = var8.getYSize();
    int var11 = var8.getYSize();
    demo.pathplanning.model.CartesianGraph var12 = new demo.pathplanning.model.CartesianGraph(var5, var11);
    int var13 = var12.getXSize();
    demo.pathplanning.model.CartesianGraph var16 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.algorithms.AStar var17 = new demo.pathplanning.algorithms.AStar(var16);
    java.lang.String var18 = var16.toString();
    demo.pathplanning.model.CartesianGraph var21 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var24 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var25 = new demo.pathplanning.model.Location(1, 1);
    boolean var27 = var25.equals((java.lang.Object)0L);
    demo.pathplanning.model.Node var28 = var16.getNode(var25);
    demo.pathplanning.model.CartesianGraph var31 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var32 = var31.getXSize();
    demo.pathplanning.algorithms.AStar var33 = new demo.pathplanning.algorithms.AStar(var31);
    demo.pathplanning.model.CartesianGraph var36 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var39 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var40 = new demo.pathplanning.model.Location(1, 1);
    boolean var42 = var40.equals((java.lang.Object)0L);
    demo.pathplanning.model.Node var43 = var31.getNode(var40);
    int var44 = var31.getXSize();
    demo.pathplanning.model.Node var45 = new demo.pathplanning.model.Node(var12, var25, var44);
    java.lang.String var46 = var45.toString();
    java.lang.String var47 = var45.toString();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var3 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var4 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var5 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var9 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var11 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var13 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var18 + "' != '" + "0,\n"+ "'", var18.equals("0,\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var27 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var28);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var32 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var42 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var43);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var44 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var46 + "' != '" + "(1,1)=1"+ "'", var46.equals("(1,1)=1"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var47 + "' != '" + "(1,1)=1"+ "'", var47.equals("(1,1)=1"));

  }

  public void test487() throws Throwable {

    demo.pathplanning.model.CartesianGraph var2 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var3 = var2.getXSize();
    int var4 = var2.getYSize();
    int var5 = var2.getYSize();
    demo.pathplanning.model.CartesianGraph var8 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var9 = var8.getXSize();
    int var10 = var8.getYSize();
    int var11 = var8.getYSize();
    demo.pathplanning.model.CartesianGraph var12 = new demo.pathplanning.model.CartesianGraph(var5, var11);
    demo.pathplanning.model.CartesianGraph var15 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var18 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var19 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var20 = new demo.pathplanning.model.CartesianGraph(var5, 1);
    java.lang.String var21 = var20.toString();
    demo.pathplanning.model.CartesianGraph var24 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var27 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var28 = new demo.pathplanning.model.Location(1, 1);
    boolean var30 = var28.equals((java.lang.Object)0L);
    demo.pathplanning.model.Node var31 = var20.getNode(var28);
    demo.pathplanning.model.CartesianGraph var34 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var37 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var38 = new demo.pathplanning.model.Location(1, 1);
    boolean var40 = var38.equals((java.lang.Object)0L);
    int var41 = var38.getX();
    int var42 = var38.getX();
    demo.pathplanning.model.CartesianGraph var45 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var46 = var45.getXSize();
    demo.pathplanning.model.Node var47 = new demo.pathplanning.model.Node(var20, var38, var46);
    int var48 = var47.getCost();
    java.util.Collection var49 = var47.getNeighbors();
    demo.pathplanning.model.CartesianGraph var52 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var53 = var52.getXSize();
    demo.pathplanning.algorithms.AStar var54 = new demo.pathplanning.algorithms.AStar(var52);
    demo.pathplanning.model.CartesianGraph var57 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var60 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var61 = new demo.pathplanning.model.Location(1, 1);
    boolean var63 = var61.equals((java.lang.Object)0L);
    demo.pathplanning.model.Node var64 = var52.getNode(var61);
    demo.pathplanning.algorithms.AStar var65 = new demo.pathplanning.algorithms.AStar(var52);
    demo.pathplanning.model.CartesianGraph var66 = var65.getGraph();
    boolean var67 = var47.equals((java.lang.Object)var65);
    demo.pathplanning.algorithms.PathPlanningContext var68 = new demo.pathplanning.algorithms.PathPlanningContext((demo.pathplanning.algorithms.PathPlanner)var65);
    demo.pathplanning.model.CartesianGraph var69 = var65.getGraph();
    java.lang.String var70 = var69.toString();
    demo.pathplanning.algorithms.AStar var71 = new demo.pathplanning.algorithms.AStar(var69);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var3 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var4 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var5 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var9 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var11 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var21 + "' != '" + "0,\n"+ "'", var21.equals("0,\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var30 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var31);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var40 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var41 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var42 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var46 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var48 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var49);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var53 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var63 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var64);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var66);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var67 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var69);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var70 + "' != '" + "0,\n"+ "'", var70.equals("0,\n"));

  }

  public void test488() throws Throwable {

    demo.pathplanning.model.CartesianGraph var2 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var3 = var2.getXSize();
    int var4 = var2.getYSize();
    int var5 = var2.getYSize();
    demo.pathplanning.model.CartesianGraph var8 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var9 = var8.getXSize();
    int var10 = var8.getYSize();
    int var11 = var8.getYSize();
    demo.pathplanning.model.CartesianGraph var12 = new demo.pathplanning.model.CartesianGraph(var5, var11);
    demo.pathplanning.model.CartesianGraph var15 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var18 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var19 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var20 = new demo.pathplanning.model.CartesianGraph(var5, 1);
    java.lang.String var21 = var20.toString();
    demo.pathplanning.model.CartesianGraph var24 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var27 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var28 = new demo.pathplanning.model.Location(1, 1);
    boolean var30 = var28.equals((java.lang.Object)0L);
    demo.pathplanning.model.Node var31 = var20.getNode(var28);
    demo.pathplanning.model.CartesianGraph var34 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var37 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var38 = new demo.pathplanning.model.Location(1, 1);
    boolean var40 = var38.equals((java.lang.Object)0L);
    int var41 = var38.getX();
    int var42 = var38.getX();
    demo.pathplanning.model.CartesianGraph var45 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var46 = var45.getXSize();
    demo.pathplanning.model.Node var47 = new demo.pathplanning.model.Node(var20, var38, var46);
    int var48 = var47.getCost();
    java.util.Collection var49 = var47.getNeighbors();
    int var50 = var47.getCost();
    demo.pathplanning.model.Location var51 = var47.getLocation();
    java.lang.String var52 = var47.toString();
    int var53 = var47.getCost();
    demo.pathplanning.model.CartesianGraph var56 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.algorithms.AStar var57 = new demo.pathplanning.algorithms.AStar(var56);
    demo.pathplanning.model.CartesianGraph var58 = var57.getGraph();
    demo.pathplanning.model.CartesianGraph var59 = var57.getGraph();
    demo.pathplanning.algorithms.PathPlanningContext var60 = new demo.pathplanning.algorithms.PathPlanningContext((demo.pathplanning.algorithms.PathPlanner)var57);
    demo.pathplanning.model.CartesianGraph var61 = var57.getGraph();
    int var62 = var61.getYSize();
    demo.pathplanning.model.CartesianGraph var65 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var68 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var69 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var72 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var75 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var76 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.Node var77 = new demo.pathplanning.model.Node(var61, var69, 1);
    int var78 = var77.getCost();
    int var79 = var77.getCost();
    demo.pathplanning.model.Location var80 = new demo.pathplanning.model.Location(var53, var79);
    java.lang.String var81 = var80.toString();
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      demo.pathplanning.model.Direction var82 = demo.pathplanning.model.Direction.valueOf(var81);
      fail("Expected exception of type java.lang.IllegalArgumentException");
    } catch (java.lang.IllegalArgumentException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var3 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var4 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var5 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var9 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var11 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var21 + "' != '" + "0,\n"+ "'", var21.equals("0,\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var30 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var31);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var40 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var41 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var42 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var46 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var48 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var49);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var50 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var51);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var52 + "' != '" + "(1,1)=1"+ "'", var52.equals("(1,1)=1"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var53 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var58);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var59);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var61);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var62 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var78 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var79 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var81 + "' != '" + "(1,1)"+ "'", var81.equals("(1,1)"));

  }

  public void test489() throws Throwable {

    demo.pathplanning.model.CartesianGraph var2 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var5 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var6 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var9 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var10 = var9.getXSize();
    int var11 = var9.getYSize();
    int var12 = var9.getYSize();
    demo.pathplanning.model.CartesianGraph var15 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var16 = var15.getXSize();
    int var17 = var15.getYSize();
    int var18 = var15.getYSize();
    demo.pathplanning.model.CartesianGraph var19 = new demo.pathplanning.model.CartesianGraph(var12, var18);
    demo.pathplanning.model.CartesianGraph var20 = new demo.pathplanning.model.CartesianGraph(1, var12);
    int var21 = var20.getYSize();
    int var22 = var20.getYSize();
    int var23 = var20.getXSize();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var11 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var12 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var16 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var17 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var18 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var21 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var22 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var23 == 1);

  }

  public void test490() throws Throwable {

    demo.pathplanning.model.CartesianGraph var2 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.algorithms.AStar var3 = new demo.pathplanning.algorithms.AStar(var2);
    demo.pathplanning.model.CartesianGraph var4 = var3.getGraph();
    demo.pathplanning.model.CartesianGraph var5 = var3.getGraph();
    demo.pathplanning.algorithms.PathPlanningContext var6 = new demo.pathplanning.algorithms.PathPlanningContext((demo.pathplanning.algorithms.PathPlanner)var3);
    demo.pathplanning.model.CartesianGraph var7 = var3.getGraph();
    int var8 = var7.getYSize();
    demo.pathplanning.model.CartesianGraph var11 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var14 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var15 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var18 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var21 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var22 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.Node var23 = new demo.pathplanning.model.Node(var7, var15, 1);
    java.util.Collection var24 = var23.getNeighbors();
    int var25 = var23.getCost();
    java.util.Collection var26 = var23.getNeighbors();
    demo.pathplanning.model.CartesianGraph var29 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.algorithms.AStar var30 = new demo.pathplanning.algorithms.AStar(var29);
    demo.pathplanning.model.CartesianGraph var31 = var30.getGraph();
    demo.pathplanning.model.CartesianGraph var32 = var30.getGraph();
    demo.pathplanning.algorithms.PathPlanningContext var33 = new demo.pathplanning.algorithms.PathPlanningContext((demo.pathplanning.algorithms.PathPlanner)var30);
    demo.pathplanning.model.CartesianGraph var34 = var30.getGraph();
    int var35 = var34.getYSize();
    demo.pathplanning.model.CartesianGraph var38 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var41 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var42 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var45 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var48 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var49 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.Node var50 = new demo.pathplanning.model.Node(var34, var42, 1);
    java.util.Collection var51 = var50.getNeighbors();
    int var52 = var50.getCost();
    boolean var53 = var23.equals((java.lang.Object)var52);
    demo.pathplanning.model.Location var54 = var23.getLocation();
    java.lang.String var55 = var54.toString();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var8 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var24);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var25 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var26);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var31);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var32);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var34);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var35 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var51);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var52 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var53 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var54);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var55 + "' != '" + "(1,1)"+ "'", var55.equals("(1,1)"));

  }

  public void test491() throws Throwable {

    demo.pathplanning.model.CartesianGraph var2 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var3 = var2.getXSize();
    demo.pathplanning.algorithms.AStar var4 = new demo.pathplanning.algorithms.AStar(var2);
    demo.pathplanning.model.CartesianGraph var7 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var10 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var11 = new demo.pathplanning.model.Location(1, 1);
    boolean var13 = var11.equals((java.lang.Object)0L);
    demo.pathplanning.model.Node var14 = var2.getNode(var11);
    int var15 = var2.getYSize();
    demo.pathplanning.model.CartesianGraph var18 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var19 = var18.getXSize();
    int var20 = var18.getYSize();
    int var21 = var18.getYSize();
    demo.pathplanning.model.CartesianGraph var24 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var25 = var24.getXSize();
    int var26 = var24.getYSize();
    int var27 = var24.getYSize();
    demo.pathplanning.model.CartesianGraph var28 = new demo.pathplanning.model.CartesianGraph(var21, var27);
    demo.pathplanning.model.CartesianGraph var31 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var34 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var35 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var36 = new demo.pathplanning.model.CartesianGraph(var21, 1);
    int var37 = var36.getXSize();
    demo.pathplanning.model.CartesianGraph var40 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var41 = var40.getXSize();
    int var42 = var40.getYSize();
    int var43 = var40.getYSize();
    demo.pathplanning.model.CartesianGraph var44 = new demo.pathplanning.model.CartesianGraph(var37, var43);
    demo.pathplanning.model.CartesianGraph var45 = new demo.pathplanning.model.CartesianGraph(var15, var37);
    demo.pathplanning.model.CartesianGraph var48 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var49 = var48.getXSize();
    int var50 = var48.getYSize();
    int var51 = var48.getYSize();
    demo.pathplanning.model.CartesianGraph var54 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var55 = var54.getXSize();
    int var56 = var54.getYSize();
    int var57 = var54.getYSize();
    demo.pathplanning.model.CartesianGraph var58 = new demo.pathplanning.model.CartesianGraph(var51, var57);
    demo.pathplanning.model.CartesianGraph var61 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var64 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var65 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var66 = new demo.pathplanning.model.CartesianGraph(var51, 1);
    int var67 = var66.getXSize();
    demo.pathplanning.model.CartesianGraph var70 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var71 = var70.getXSize();
    int var72 = var70.getYSize();
    int var73 = var70.getYSize();
    demo.pathplanning.model.CartesianGraph var74 = new demo.pathplanning.model.CartesianGraph(var67, var73);
    demo.pathplanning.model.CartesianGraph var75 = new demo.pathplanning.model.CartesianGraph(var15, var67);
    java.lang.String var76 = var75.toString();
    demo.pathplanning.model.CartesianGraph var79 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var82 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var83 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var86 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var87 = var86.getXSize();
    demo.pathplanning.model.CartesianGraph var90 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var91 = new demo.pathplanning.model.CartesianGraph(var87, 1);
    demo.pathplanning.model.Location var92 = new demo.pathplanning.model.Location(1, 1);
    int var93 = var92.getX();
    int var94 = var92.getY();
    demo.pathplanning.model.Node var95 = var75.getNode(var92);
    int var96 = var92.getX();
    int var97 = var92.getX();
    int var98 = var92.getY();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var3 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var13 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var14);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var15 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var19 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var20 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var21 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var25 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var26 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var27 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var37 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var41 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var42 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var43 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var49 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var50 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var51 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var55 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var56 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var57 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var67 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var71 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var72 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var73 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var76 + "' != '" + "0,\n"+ "'", var76.equals("0,\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var87 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var93 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var94 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var95);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var96 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var97 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var98 == 1);

  }

  public void test492() throws Throwable {

    demo.pathplanning.model.CartesianGraph var2 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var3 = var2.getXSize();
    int var4 = var2.getYSize();
    int var5 = var2.getYSize();
    demo.pathplanning.model.CartesianGraph var8 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var9 = var8.getXSize();
    int var10 = var8.getYSize();
    int var11 = var8.getYSize();
    demo.pathplanning.model.CartesianGraph var12 = new demo.pathplanning.model.CartesianGraph(var5, var11);
    demo.pathplanning.model.CartesianGraph var15 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var18 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var19 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var20 = new demo.pathplanning.model.CartesianGraph(var5, 1);
    java.lang.String var21 = var20.toString();
    demo.pathplanning.model.CartesianGraph var24 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var27 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var28 = new demo.pathplanning.model.Location(1, 1);
    boolean var30 = var28.equals((java.lang.Object)0L);
    demo.pathplanning.model.Node var31 = var20.getNode(var28);
    demo.pathplanning.model.CartesianGraph var34 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var37 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var38 = new demo.pathplanning.model.Location(1, 1);
    boolean var40 = var38.equals((java.lang.Object)0L);
    int var41 = var38.getX();
    int var42 = var38.getX();
    demo.pathplanning.model.CartesianGraph var45 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var46 = var45.getXSize();
    demo.pathplanning.model.Node var47 = new demo.pathplanning.model.Node(var20, var38, var46);
    demo.pathplanning.algorithms.AStar var48 = new demo.pathplanning.algorithms.AStar(var20);
    demo.pathplanning.model.CartesianGraph var51 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var54 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var55 = new demo.pathplanning.model.Location(1, 1);
    boolean var57 = var55.equals((java.lang.Object)0L);
    int var58 = var55.getX();
    int var59 = var55.getX();
    java.lang.String var60 = var55.toString();
    demo.pathplanning.model.Node var61 = var20.getNode(var55);
    int var62 = var55.getY();
    demo.pathplanning.model.CartesianGraph var65 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var66 = var65.getXSize();
    int var67 = var65.getYSize();
    int var68 = var65.getYSize();
    demo.pathplanning.model.CartesianGraph var71 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var72 = var71.getXSize();
    int var73 = var71.getYSize();
    int var74 = var71.getYSize();
    demo.pathplanning.model.CartesianGraph var75 = new demo.pathplanning.model.CartesianGraph(var68, var74);
    demo.pathplanning.model.CartesianGraph var78 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var79 = var78.getXSize();
    demo.pathplanning.model.CartesianGraph var82 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var83 = new demo.pathplanning.model.CartesianGraph(var79, 1);
    demo.pathplanning.model.CartesianGraph var86 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.algorithms.AStar var87 = new demo.pathplanning.algorithms.AStar(var86);
    demo.pathplanning.model.CartesianGraph var88 = var87.getGraph();
    demo.pathplanning.model.CartesianGraph var89 = var87.getGraph();
    demo.pathplanning.algorithms.PathPlanningContext var90 = new demo.pathplanning.algorithms.PathPlanningContext((demo.pathplanning.algorithms.PathPlanner)var87);
    demo.pathplanning.model.CartesianGraph var91 = var87.getGraph();
    int var92 = var91.getYSize();
    demo.pathplanning.model.CartesianGraph var93 = new demo.pathplanning.model.CartesianGraph(var79, var92);
    demo.pathplanning.model.CartesianGraph var94 = new demo.pathplanning.model.CartesianGraph(var74, var92);
    demo.pathplanning.model.CartesianGraph var95 = new demo.pathplanning.model.CartesianGraph(var62, var92);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var3 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var4 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var5 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var9 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var11 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var21 + "' != '" + "0,\n"+ "'", var21.equals("0,\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var30 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var31);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var40 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var41 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var42 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var46 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var57 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var58 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var59 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var60 + "' != '" + "(1,1)"+ "'", var60.equals("(1,1)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var61);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var62 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var66 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var67 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var68 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var72 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var73 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var74 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var79 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var88);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var89);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var91);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var92 == 1);

  }

  public void test493() throws Throwable {

    demo.pathplanning.model.CartesianGraph var2 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.algorithms.AStar var3 = new demo.pathplanning.algorithms.AStar(var2);
    demo.pathplanning.model.CartesianGraph var4 = var3.getGraph();
    demo.pathplanning.model.CartesianGraph var5 = var3.getGraph();
    demo.pathplanning.algorithms.PathPlanningContext var6 = new demo.pathplanning.algorithms.PathPlanningContext((demo.pathplanning.algorithms.PathPlanner)var3);
    demo.pathplanning.model.CartesianGraph var7 = var3.getGraph();
    int var8 = var7.getYSize();
    demo.pathplanning.model.CartesianGraph var11 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var14 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var15 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var18 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var21 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var22 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.Node var23 = new demo.pathplanning.model.Node(var7, var15, 1);
    java.util.Collection var24 = var23.getNeighbors();
    int var25 = var23.getCost();
    int var26 = var23.getCost();
    java.lang.String var27 = var23.toString();
    demo.pathplanning.model.CartesianGraph var30 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.algorithms.AStar var31 = new demo.pathplanning.algorithms.AStar(var30);
    demo.pathplanning.model.CartesianGraph var32 = var31.getGraph();
    demo.pathplanning.model.CartesianGraph var33 = var31.getGraph();
    demo.pathplanning.algorithms.PathPlanningContext var34 = new demo.pathplanning.algorithms.PathPlanningContext((demo.pathplanning.algorithms.PathPlanner)var31);
    demo.pathplanning.model.CartesianGraph var35 = var31.getGraph();
    int var36 = var35.getYSize();
    demo.pathplanning.model.CartesianGraph var39 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var42 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var43 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var46 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var49 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var50 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.Node var51 = new demo.pathplanning.model.Node(var35, var43, 1);
    java.lang.String var52 = var51.toString();
    boolean var53 = var23.equals((java.lang.Object)var51);
    demo.pathplanning.model.Location var54 = var23.getLocation();
    demo.pathplanning.model.CartesianGraph var57 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var60 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var61 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var64 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var65 = var64.getXSize();
    int var66 = var64.getYSize();
    int var67 = var64.getYSize();
    demo.pathplanning.model.CartesianGraph var70 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var71 = var70.getXSize();
    int var72 = var70.getYSize();
    int var73 = var70.getYSize();
    demo.pathplanning.model.CartesianGraph var74 = new demo.pathplanning.model.CartesianGraph(var67, var73);
    demo.pathplanning.model.CartesianGraph var75 = new demo.pathplanning.model.CartesianGraph(1, var67);
    int var76 = var75.getYSize();
    demo.pathplanning.model.CartesianGraph var79 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var80 = var79.getXSize();
    int var81 = var79.getYSize();
    int var82 = var79.getYSize();
    demo.pathplanning.model.CartesianGraph var85 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var86 = new demo.pathplanning.model.Location(var82, 1);
    java.lang.String var87 = var86.toString();
    demo.pathplanning.model.Node var88 = var75.getNode(var86);
    demo.pathplanning.algorithms.AStar var89 = new demo.pathplanning.algorithms.AStar(var75);
    boolean var90 = var54.equals((java.lang.Object)var89);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var8 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var24);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var25 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var26 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var27 + "' != '" + "(1,1)=1"+ "'", var27.equals("(1,1)=1"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var32);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var33);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var35);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var36 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var52 + "' != '" + "(1,1)=1"+ "'", var52.equals("(1,1)=1"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var53 == true);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var54);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var65 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var66 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var67 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var71 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var72 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var73 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var76 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var80 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var81 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var82 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var87 + "' != '" + "(1,1)"+ "'", var87.equals("(1,1)"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var88);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var90 == false);

  }

  public void test494() throws Throwable {

    demo.pathplanning.model.CartesianGraph var2 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var3 = var2.getXSize();
    int var4 = var2.getYSize();
    int var5 = var2.getYSize();
    demo.pathplanning.model.CartesianGraph var8 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var9 = var8.getXSize();
    int var10 = var8.getYSize();
    int var11 = var8.getYSize();
    demo.pathplanning.model.CartesianGraph var12 = new demo.pathplanning.model.CartesianGraph(var5, var11);
    demo.pathplanning.model.CartesianGraph var15 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var18 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var19 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var20 = new demo.pathplanning.model.CartesianGraph(var5, 1);
    java.lang.String var21 = var20.toString();
    demo.pathplanning.model.CartesianGraph var24 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var27 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var28 = new demo.pathplanning.model.Location(1, 1);
    boolean var30 = var28.equals((java.lang.Object)0L);
    demo.pathplanning.model.Node var31 = var20.getNode(var28);
    demo.pathplanning.model.CartesianGraph var34 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var37 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var38 = new demo.pathplanning.model.Location(1, 1);
    boolean var40 = var38.equals((java.lang.Object)0L);
    int var41 = var38.getX();
    int var42 = var38.getX();
    demo.pathplanning.model.CartesianGraph var45 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var46 = var45.getXSize();
    demo.pathplanning.model.Node var47 = new demo.pathplanning.model.Node(var20, var38, var46);
    demo.pathplanning.algorithms.AStar var48 = new demo.pathplanning.algorithms.AStar(var20);
    java.lang.String var49 = var20.toString();
    int var50 = var20.getXSize();
    demo.pathplanning.algorithms.AStar var51 = new demo.pathplanning.algorithms.AStar(var20);
    demo.pathplanning.algorithms.AStar var52 = new demo.pathplanning.algorithms.AStar(var20);
    demo.pathplanning.algorithms.PathPlanningContext var53 = new demo.pathplanning.algorithms.PathPlanningContext((demo.pathplanning.algorithms.PathPlanner)var52);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var3 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var4 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var5 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var9 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var11 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var21 + "' != '" + "0,\n"+ "'", var21.equals("0,\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var30 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var31);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var40 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var41 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var42 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var46 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var49 + "' != '" + "0,\n"+ "'", var49.equals("0,\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var50 == 1);

  }

  public void test495() throws Throwable {

    demo.pathplanning.model.CartesianGraph var2 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.algorithms.AStar var3 = new demo.pathplanning.algorithms.AStar(var2);
    demo.pathplanning.model.CartesianGraph var4 = var3.getGraph();
    demo.pathplanning.model.CartesianGraph var5 = var3.getGraph();
    demo.pathplanning.algorithms.PathPlanningContext var6 = new demo.pathplanning.algorithms.PathPlanningContext((demo.pathplanning.algorithms.PathPlanner)var3);
    demo.pathplanning.model.CartesianGraph var7 = var3.getGraph();
    int var8 = var7.getYSize();
    demo.pathplanning.model.CartesianGraph var11 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var14 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var15 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var18 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var21 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var22 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.Node var23 = new demo.pathplanning.model.Node(var7, var15, 1);
    demo.pathplanning.model.CartesianGraph var26 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var29 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var30 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var33 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var34 = var33.getXSize();
    int var35 = var33.getYSize();
    int var36 = var33.getYSize();
    demo.pathplanning.model.CartesianGraph var39 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var40 = var39.getXSize();
    int var41 = var39.getYSize();
    int var42 = var39.getYSize();
    demo.pathplanning.model.CartesianGraph var43 = new demo.pathplanning.model.CartesianGraph(var36, var42);
    demo.pathplanning.model.CartesianGraph var44 = new demo.pathplanning.model.CartesianGraph(1, var36);
    demo.pathplanning.model.CartesianGraph var47 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var50 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var51 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var54 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var55 = var54.getXSize();
    int var56 = var54.getYSize();
    int var57 = var54.getYSize();
    demo.pathplanning.model.CartesianGraph var60 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var61 = var60.getXSize();
    int var62 = var60.getYSize();
    int var63 = var60.getYSize();
    demo.pathplanning.model.CartesianGraph var64 = new demo.pathplanning.model.CartesianGraph(var57, var63);
    demo.pathplanning.model.CartesianGraph var65 = new demo.pathplanning.model.CartesianGraph(1, var57);
    demo.pathplanning.model.Location var66 = new demo.pathplanning.model.Location(1, 1);
    boolean var67 = var23.equals((java.lang.Object)1);
    java.util.Collection var68 = var23.getNeighbors();
    int var69 = var23.getCost();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var8 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var34 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var35 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var36 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var40 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var41 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var42 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var55 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var56 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var57 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var61 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var62 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var63 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var67 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var68);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var69 == 1);

  }

  public void test496() throws Throwable {

    demo.pathplanning.model.CartesianGraph var2 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.algorithms.AStar var3 = new demo.pathplanning.algorithms.AStar(var2);
    java.lang.String var4 = var2.toString();
    demo.pathplanning.model.CartesianGraph var7 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var10 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var11 = new demo.pathplanning.model.Location(1, 1);
    boolean var13 = var11.equals((java.lang.Object)0L);
    demo.pathplanning.model.Node var14 = var2.getNode(var11);
    int var15 = var11.getX();
    int var16 = var11.getY();
    demo.pathplanning.model.CartesianGraph var19 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.algorithms.AStar var20 = new demo.pathplanning.algorithms.AStar(var19);
    demo.pathplanning.model.CartesianGraph var21 = var20.getGraph();
    demo.pathplanning.model.CartesianGraph var22 = var20.getGraph();
    demo.pathplanning.algorithms.PathPlanningContext var23 = new demo.pathplanning.algorithms.PathPlanningContext((demo.pathplanning.algorithms.PathPlanner)var20);
    demo.pathplanning.model.CartesianGraph var24 = var20.getGraph();
    int var25 = var24.getYSize();
    demo.pathplanning.model.CartesianGraph var28 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var31 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var32 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var35 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var38 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var39 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.Node var40 = new demo.pathplanning.model.Node(var24, var32, 1);
    java.util.Collection var41 = var40.getNeighbors();
    int var42 = var40.getCost();
    java.util.Collection var43 = var40.getNeighbors();
    demo.pathplanning.model.CartesianGraph var46 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.algorithms.AStar var47 = new demo.pathplanning.algorithms.AStar(var46);
    demo.pathplanning.model.CartesianGraph var48 = var47.getGraph();
    demo.pathplanning.model.CartesianGraph var49 = var47.getGraph();
    demo.pathplanning.algorithms.PathPlanningContext var50 = new demo.pathplanning.algorithms.PathPlanningContext((demo.pathplanning.algorithms.PathPlanner)var47);
    demo.pathplanning.model.CartesianGraph var51 = var47.getGraph();
    int var52 = var51.getYSize();
    demo.pathplanning.model.CartesianGraph var55 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var58 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var59 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var62 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var65 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var66 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.Node var67 = new demo.pathplanning.model.Node(var51, var59, 1);
    java.util.Collection var68 = var67.getNeighbors();
    int var69 = var67.getCost();
    boolean var70 = var40.equals((java.lang.Object)var69);
    int var71 = var40.getCost();
    demo.pathplanning.model.Location var72 = new demo.pathplanning.model.Location(var16, var71);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var4 + "' != '" + "0,\n"+ "'", var4.equals("0,\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var13 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var14);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var15 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var16 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var21);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var22);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var24);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var25 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var41);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var42 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var43);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var48);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var49);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var51);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var52 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var68);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var69 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var70 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var71 == 1);

  }

  public void test497() throws Throwable {

    demo.pathplanning.model.CartesianGraph var2 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.algorithms.AStar var3 = new demo.pathplanning.algorithms.AStar(var2);
    demo.pathplanning.model.CartesianGraph var4 = var3.getGraph();
    demo.pathplanning.model.CartesianGraph var5 = var3.getGraph();
    demo.pathplanning.algorithms.PathPlanningContext var6 = new demo.pathplanning.algorithms.PathPlanningContext((demo.pathplanning.algorithms.PathPlanner)var3);
    demo.pathplanning.model.CartesianGraph var7 = var3.getGraph();
    int var8 = var7.getYSize();
    demo.pathplanning.model.CartesianGraph var11 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var14 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var15 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var18 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var21 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var22 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.Node var23 = new demo.pathplanning.model.Node(var7, var15, 1);
    int var24 = var23.getCost();
    java.util.Collection var25 = var23.getNeighbors();
    java.util.Collection var26 = var23.getNeighbors();
    java.lang.String var27 = var23.toString();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var8 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var24 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var25);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var26);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var27 + "' != '" + "(1,1)=1"+ "'", var27.equals("(1,1)=1"));

  }

  public void test498() throws Throwable {

    demo.pathplanning.model.CartesianGraph var2 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var3 = var2.getXSize();
    demo.pathplanning.algorithms.AStar var4 = new demo.pathplanning.algorithms.AStar(var2);
    demo.pathplanning.model.CartesianGraph var7 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var10 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var11 = new demo.pathplanning.model.Location(1, 1);
    boolean var13 = var11.equals((java.lang.Object)0L);
    demo.pathplanning.model.Node var14 = var2.getNode(var11);
    int var15 = var2.getXSize();
    java.lang.String var16 = var2.toString();
    demo.pathplanning.model.CartesianGraph var19 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var22 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var23 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var26 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var27 = var26.getXSize();
    int var28 = var26.getYSize();
    int var29 = var26.getYSize();
    demo.pathplanning.model.CartesianGraph var32 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var33 = var32.getXSize();
    int var34 = var32.getYSize();
    int var35 = var32.getYSize();
    demo.pathplanning.model.CartesianGraph var36 = new demo.pathplanning.model.CartesianGraph(var29, var35);
    demo.pathplanning.model.CartesianGraph var37 = new demo.pathplanning.model.CartesianGraph(1, var29);
    demo.pathplanning.model.CartesianGraph var40 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var43 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var44 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var47 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var48 = var47.getXSize();
    int var49 = var47.getYSize();
    int var50 = var47.getYSize();
    demo.pathplanning.model.CartesianGraph var53 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var54 = var53.getXSize();
    int var55 = var53.getYSize();
    int var56 = var53.getYSize();
    demo.pathplanning.model.CartesianGraph var57 = new demo.pathplanning.model.CartesianGraph(var50, var56);
    demo.pathplanning.model.CartesianGraph var58 = new demo.pathplanning.model.CartesianGraph(1, var50);
    demo.pathplanning.model.Location var59 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var62 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var65 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var66 = new demo.pathplanning.model.Location(1, 1);
    int var67 = var66.getY();
    demo.pathplanning.model.Node var68 = new demo.pathplanning.model.Node(var2, var59, var67);
    int var69 = var2.getYSize();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var3 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var13 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var14);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var15 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var16 + "' != '" + "0,\n"+ "'", var16.equals("0,\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var27 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var28 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var29 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var33 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var34 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var35 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var48 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var49 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var50 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var54 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var55 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var56 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var67 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var69 == 1);

  }

  public void test499() throws Throwable {

    demo.pathplanning.model.CartesianGraph var2 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var3 = var2.getXSize();
    int var4 = var2.getYSize();
    int var5 = var2.getYSize();
    demo.pathplanning.model.CartesianGraph var8 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var9 = var8.getXSize();
    int var10 = var8.getYSize();
    int var11 = var8.getYSize();
    demo.pathplanning.model.CartesianGraph var12 = new demo.pathplanning.model.CartesianGraph(var5, var11);
    demo.pathplanning.model.CartesianGraph var15 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var18 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var19 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var20 = new demo.pathplanning.model.CartesianGraph(var5, 1);
    java.lang.String var21 = var20.toString();
    demo.pathplanning.model.CartesianGraph var24 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var27 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var28 = new demo.pathplanning.model.Location(1, 1);
    boolean var30 = var28.equals((java.lang.Object)0L);
    demo.pathplanning.model.Node var31 = var20.getNode(var28);
    demo.pathplanning.model.CartesianGraph var34 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var37 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var38 = new demo.pathplanning.model.Location(1, 1);
    boolean var40 = var38.equals((java.lang.Object)0L);
    int var41 = var38.getX();
    int var42 = var38.getX();
    demo.pathplanning.model.CartesianGraph var45 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var46 = var45.getXSize();
    demo.pathplanning.model.Node var47 = new demo.pathplanning.model.Node(var20, var38, var46);
    int var48 = var47.getCost();
    java.util.Collection var49 = var47.getNeighbors();
    demo.pathplanning.model.CartesianGraph var52 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var53 = var52.getXSize();
    demo.pathplanning.algorithms.AStar var54 = new demo.pathplanning.algorithms.AStar(var52);
    demo.pathplanning.model.CartesianGraph var57 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var60 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var61 = new demo.pathplanning.model.Location(1, 1);
    boolean var63 = var61.equals((java.lang.Object)0L);
    demo.pathplanning.model.Node var64 = var52.getNode(var61);
    demo.pathplanning.algorithms.AStar var65 = new demo.pathplanning.algorithms.AStar(var52);
    demo.pathplanning.model.CartesianGraph var66 = var65.getGraph();
    boolean var67 = var47.equals((java.lang.Object)var65);
    int var68 = var47.getCost();
    java.lang.String var69 = var47.toString();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var3 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var4 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var5 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var9 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var11 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var21 + "' != '" + "0,\n"+ "'", var21.equals("0,\n"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var30 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var31);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var40 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var41 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var42 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var46 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var48 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var49);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var53 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var63 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var64);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var66);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var67 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var68 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var69 + "' != '" + "(1,1)=1"+ "'", var69.equals("(1,1)=1"));

  }

  public void test500() throws Throwable {

    demo.pathplanning.model.CartesianGraph var2 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var3 = var2.getXSize();
    demo.pathplanning.algorithms.AStar var4 = new demo.pathplanning.algorithms.AStar(var2);
    demo.pathplanning.model.CartesianGraph var7 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var10 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var11 = new demo.pathplanning.model.Location(1, 1);
    boolean var13 = var11.equals((java.lang.Object)0L);
    demo.pathplanning.model.Node var14 = var2.getNode(var11);
    int var15 = var2.getXSize();
    int var16 = var2.getXSize();
    demo.pathplanning.model.CartesianGraph var19 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var20 = var19.getXSize();
    int var21 = var19.getYSize();
    int var22 = var19.getYSize();
    demo.pathplanning.model.CartesianGraph var25 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var26 = var25.getXSize();
    int var27 = var25.getYSize();
    int var28 = var25.getYSize();
    demo.pathplanning.model.CartesianGraph var29 = new demo.pathplanning.model.CartesianGraph(var22, var28);
    demo.pathplanning.model.CartesianGraph var32 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var35 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var36 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var37 = new demo.pathplanning.model.CartesianGraph(var22, 1);
    int var38 = var37.getXSize();
    demo.pathplanning.model.CartesianGraph var41 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var42 = var41.getXSize();
    int var43 = var41.getYSize();
    int var44 = var41.getYSize();
    demo.pathplanning.model.CartesianGraph var45 = new demo.pathplanning.model.CartesianGraph(var38, var44);
    demo.pathplanning.model.CartesianGraph var48 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var51 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var52 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var55 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var56 = var55.getXSize();
    int var57 = var55.getYSize();
    int var58 = var55.getYSize();
    demo.pathplanning.model.CartesianGraph var61 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var62 = var61.getXSize();
    int var63 = var61.getYSize();
    int var64 = var61.getYSize();
    demo.pathplanning.model.CartesianGraph var65 = new demo.pathplanning.model.CartesianGraph(var58, var64);
    demo.pathplanning.model.CartesianGraph var66 = new demo.pathplanning.model.CartesianGraph(1, var58);
    demo.pathplanning.model.CartesianGraph var69 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.CartesianGraph var72 = new demo.pathplanning.model.CartesianGraph(1, 1);
    demo.pathplanning.model.Location var73 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.CartesianGraph var76 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var77 = var76.getXSize();
    int var78 = var76.getYSize();
    int var79 = var76.getYSize();
    demo.pathplanning.model.CartesianGraph var82 = new demo.pathplanning.model.CartesianGraph(1, 1);
    int var83 = var82.getXSize();
    int var84 = var82.getYSize();
    int var85 = var82.getYSize();
    demo.pathplanning.model.CartesianGraph var86 = new demo.pathplanning.model.CartesianGraph(var79, var85);
    demo.pathplanning.model.CartesianGraph var87 = new demo.pathplanning.model.CartesianGraph(1, var79);
    demo.pathplanning.model.Location var88 = new demo.pathplanning.model.Location(1, 1);
    demo.pathplanning.model.Location var89 = new demo.pathplanning.model.Location(var38, 1);
    demo.pathplanning.model.CartesianGraph var90 = new demo.pathplanning.model.CartesianGraph(var16, var38);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var3 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var13 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var14);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var15 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var16 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var20 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var21 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var22 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var26 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var27 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var28 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var38 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var42 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var43 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var44 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var56 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var57 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var58 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var62 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var63 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var64 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var77 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var78 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var79 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var83 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var84 == 1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var85 == 1);

  }

}
