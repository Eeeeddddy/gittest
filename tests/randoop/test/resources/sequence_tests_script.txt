######################################################################

START TEST

TEST_ID
1

SEQUENCE
var0 =  prim : int:3 :

EXPECTED_CODE
java.lang.Integer var0 = new java.lang.Integer(3);

END TEST

######################################################################

START TEST

TEST_ID
1.5

SEQUENCE
var0 =  prim : java.lang.String:"3" :
var1 =  method : java.lang.Integer.parseInt(java.lang.String) : var0

EXPECTED_CODE
java.lang.String var0 = "3";
int var1 = java.lang.Integer.parseInt(var0);
// Regression assertion (captures the current behavior of the code)
assertTrue(var1 == 3);

END TEST

######################################################################

START TEST

TEST_ID
2

SEQUENCE
var0 =  prim : java.lang.String:"foobar" :

EXPECTED_CODE
java.lang.String var0 = "foobar";

END TEST

######################################################################

START TEST

TEST_ID
3

SEQUENCE
var0 =  prim : int:3 : 
var1 =  cons : java.util.ArrayList.<init>(int) : var0

EXPECTED_CODE
java.lang.Integer var0 = new java.lang.Integer(3);
java.util.ArrayList var1 = new java.util.ArrayList(var0);
// Regression assertion (captures the current behavior of the code)
assertFalse(var1 == null);

END TEST

######################################################################

START TEST

TEST_ID
3.5

SEQUENCE
var0 =  prim : int:3 :
var1 =  cons : java.lang.Integer.<init>(int) : var0
var2 =  cons : java.util.ArrayList.<init>(int) : var1

EXPECTED_CODE
java.lang.Integer var0 = new java.lang.Integer(3);
java.lang.Integer var1 = new java.lang.Integer(var0);
java.util.ArrayList var2 = new java.util.ArrayList((int)var1);
// Regression assertion (captures the current behavior of the code)
assertTrue("'" + var1 + "' != '" + 3+ "'", var1.equals(3));
// Regression assertion (captures the current behavior of the code)
assertFalse(var2 == null);

END TEST


